{
  "0x73c6": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState>",
    "poll_symbol": ""
  },
  "0x7465": {
    "name": "Mutex<futures_channel::mpsc::SenderTask>",
    "poll_symbol": ""
  },
  "0x803b": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}>",
    "poll_symbol": ""
  },
  "0x8059": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x8b11": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x8b11>",
    "poll_symbol": ""
  },
  "0x8b2f": {
    "name": "{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>>",
    "poll_symbol": ""
  },
  "0x8b4d": {
    "name": "{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>",
    "poll_symbol": ""
  },
  "0x8b6b": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}><0x8b6b>",
    "poll_symbol": ""
  },
  "0x9ced": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x9d49": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x9d85": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x9ddf": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>>",
    "poll_symbol": ""
  },
  "0x9e59": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}>",
    "poll_symbol": ""
  },
  "0x9eb5": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>",
    "poll_symbol": ""
  },
  "0xa000": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>>",
    "poll_symbol": ""
  },
  "0xa078": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>>",
    "poll_symbol": ""
  },
  "0xa096": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>>",
    "poll_symbol": ""
  },
  "0xa0b4": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>>",
    "poll_symbol": ""
  },
  "0xa1e0": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0xa1fe": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>>",
    "poll_symbol": ""
  },
  "0xa5d7": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>>",
    "poll_symbol": ""
  },
  "0xa643": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>>",
    "poll_symbol": ""
  },
  "0xa655": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>>",
    "poll_symbol": ""
  },
  "0xa667": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>>",
    "poll_symbol": ""
  },
  "0xa80d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0xa81f": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0xa831": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)>",
    "poll_symbol": ""
  },
  "0xa843": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>>",
    "poll_symbol": ""
  },
  "0xae08": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": ""
  },
  "0xae3b": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0xaf3e": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": ""
  },
  "0xaf7a": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask>",
    "poll_symbol": ""
  },
  "0xaf98": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0xbaf6": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0xbbb9": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0xc2ff": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0xda52": {
    "name": "PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>",
    "poll_symbol": ""
  },
  "0xda70": {
    "name": "PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0xdab5": {
    "name": "{async_block_env#0}",
    "poll_symbol": ""
  },
  "0xe215": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0xe5f9": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0xe638": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": ""
  },
  "0xe7cd": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0xe80c": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0xe84b": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>",
    "poll_symbol": ""
  },
  "0xe881": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": ""
  },
  "0xe8b7": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0xe8f6": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>",
    "poll_symbol": ""
  },
  "0xeca3": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0xece2": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0xed18": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0xed57": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0xf695": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0xf843": {
    "name": "{async_fn_env#0}<&str>",
    "poll_symbol": ""
  },
  "0xfaf1": {
    "name": "ResponseFuture",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0xfbf6": {
    "name": "{async_fn_env#0}",
    "poll_symbol": ""
  },
  "0xfcb2": {
    "name": "{async_fn_env#0}<0xfcb2>",
    "poll_symbol": ""
  },
  "0xfdca": {
    "name": "{async_fn_env#0}<0xfdca>",
    "poll_symbol": ""
  },
  "0x1057e": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x10a95": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x10abc": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": ""
  },
  "0x10bae": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": ""
  },
  "0x10bb5": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": ""
  },
  "0x10e4b": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x1105d": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x112c5": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x112ef": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x11bc8": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)",
    "poll_symbol": ""
  },
  "0x11d79": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x11dfe": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x11e25": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x15286": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x15286>",
    "poll_symbol": ""
  },
  "0x15325": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x15325>",
    "poll_symbol": ""
  },
  "0x17756": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x17756>",
    "poll_symbol": ""
  },
  "0x177d1": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x177d1>",
    "poll_symbol": ""
  },
  "0x1784b": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x1784b>",
    "poll_symbol": ""
  },
  "0x178a5": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0x178a5>",
    "poll_symbol": ""
  },
  "0x17901": {
    "name": "Pin<&mut core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x1793e": {
    "name": "Pin<&mut core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>",
    "poll_symbol": ""
  },
  "0x17a6a": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x17a6a>",
    "poll_symbol": ""
  },
  "0x17ae2": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x17ae2>",
    "poll_symbol": ""
  },
  "0x17b00": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x17b00>",
    "poll_symbol": ""
  },
  "0x17b1e": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x17b1e>",
    "poll_symbol": ""
  },
  "0x17c4a": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x17c4a>",
    "poll_symbol": ""
  },
  "0x17c68": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x17c68>",
    "poll_symbol": ""
  },
  "0x18023": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x18023>",
    "poll_symbol": ""
  },
  "0x1808f": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1808f>",
    "poll_symbol": ""
  },
  "0x180a1": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x180a1>",
    "poll_symbol": ""
  },
  "0x180b3": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x180b3>",
    "poll_symbol": ""
  },
  "0x18259": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x18259>",
    "poll_symbol": ""
  },
  "0x1826b": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1826b>",
    "poll_symbol": ""
  },
  "0x1827d": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x1827d>",
    "poll_symbol": ""
  },
  "0x1828f": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1828f>",
    "poll_symbol": ""
  },
  "0x18830": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x18830>",
    "poll_symbol": ""
  },
  "0x18863": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x18863>",
    "poll_symbol": ""
  },
  "0x18966": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x18966>",
    "poll_symbol": ""
  },
  "0x189a2": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x189a2>",
    "poll_symbol": ""
  },
  "0x189c0": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x189c0>",
    "poll_symbol": ""
  },
  "0x19500": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x19500>",
    "poll_symbol": ""
  },
  "0x195c3": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x195c3>",
    "poll_symbol": ""
  },
  "0x19d09": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x19d09>",
    "poll_symbol": ""
  },
  "0x1b2bb": {
    "name": "{async_block_env#0}<0x1b2bb>",
    "poll_symbol": ""
  },
  "0x1ba1b": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1ba1b>",
    "poll_symbol": ""
  },
  "0x1bdff": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x1bdff>",
    "poll_symbol": ""
  },
  "0x1be3e": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x1be3e>",
    "poll_symbol": ""
  },
  "0x1bfd3": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x1bfd3>",
    "poll_symbol": ""
  },
  "0x1c012": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x1c012>",
    "poll_symbol": ""
  },
  "0x1c051": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x1c051>",
    "poll_symbol": ""
  },
  "0x1c087": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1c087>",
    "poll_symbol": ""
  },
  "0x1c0bd": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x1c0bd>",
    "poll_symbol": ""
  },
  "0x1c0fc": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x1c0fc>",
    "poll_symbol": ""
  },
  "0x1c4a9": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1c4a9>",
    "poll_symbol": ""
  },
  "0x1c4e8": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1c4e8>",
    "poll_symbol": ""
  },
  "0x1c51e": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x1c51e>",
    "poll_symbol": ""
  },
  "0x1c55d": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x1c55d>",
    "poll_symbol": ""
  },
  "0x1ce9b": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1ce9b>",
    "poll_symbol": ""
  },
  "0x1cfce": {
    "name": "{async_fn_env#0}<&str><0x1cfce>",
    "poll_symbol": ""
  },
  "0x1d27c": {
    "name": "ResponseFuture<0x1d27c>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x1d381": {
    "name": "{async_fn_env#0}<0x1d381>",
    "poll_symbol": ""
  },
  "0x1d43d": {
    "name": "{async_fn_env#0}<0x1d43d>",
    "poll_symbol": ""
  },
  "0x1d555": {
    "name": "{async_fn_env#0}<0x1d555>",
    "poll_symbol": ""
  },
  "0x1dd09": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x1dd09>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x1e220": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x1e220>",
    "poll_symbol": ""
  },
  "0x1e247": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x1e247>",
    "poll_symbol": ""
  },
  "0x1e339": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x1e339>",
    "poll_symbol": ""
  },
  "0x1e340": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x1e340>",
    "poll_symbol": ""
  },
  "0x1e5d6": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x1e5d6>",
    "poll_symbol": ""
  },
  "0x1e7e8": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x1e7e8>",
    "poll_symbol": ""
  },
  "0x1ea50": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1ea50>",
    "poll_symbol": ""
  },
  "0x1ea7a": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1ea7a>",
    "poll_symbol": ""
  },
  "0x1f353": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x1f353>",
    "poll_symbol": ""
  },
  "0x1f504": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x1f504>",
    "poll_symbol": ""
  },
  "0x1f589": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x1f589>",
    "poll_symbol": ""
  },
  "0x1f5b0": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x1f5b0>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x27f3e": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x27f3e>",
    "poll_symbol": ""
  },
  "0x27fdd": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x27fdd>",
    "poll_symbol": ""
  },
  "0x2a304": {
    "name": "{async_block_env#0}<0x2a304>",
    "poll_symbol": ""
  },
  "0x2a8fc": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x2a8fc>",
    "poll_symbol": ""
  },
  "0x2a974": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x2a974>",
    "poll_symbol": ""
  },
  "0x2a992": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x2a992>",
    "poll_symbol": ""
  },
  "0x2a9b0": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x2a9b0>",
    "poll_symbol": ""
  },
  "0x2aadc": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x2aadc>",
    "poll_symbol": ""
  },
  "0x2aafa": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x2aafa>",
    "poll_symbol": ""
  },
  "0x2aeb5": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x2aeb5>",
    "poll_symbol": ""
  },
  "0x2af21": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x2af21>",
    "poll_symbol": ""
  },
  "0x2af33": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x2af33>",
    "poll_symbol": ""
  },
  "0x2af45": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x2af45>",
    "poll_symbol": ""
  },
  "0x2b0eb": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x2b0eb>",
    "poll_symbol": ""
  },
  "0x2b0fd": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x2b0fd>",
    "poll_symbol": ""
  },
  "0x2b10f": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x2b10f>",
    "poll_symbol": ""
  },
  "0x2b121": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x2b121>",
    "poll_symbol": ""
  },
  "0x2b69e": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2b69e>",
    "poll_symbol": ""
  },
  "0x2b6d1": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x2b6d1>",
    "poll_symbol": ""
  },
  "0x2b7d4": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2b7d4>",
    "poll_symbol": ""
  },
  "0x2b810": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x2b810>",
    "poll_symbol": ""
  },
  "0x2b82e": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x2b82e>",
    "poll_symbol": ""
  },
  "0x2c36e": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x2c36e>",
    "poll_symbol": ""
  },
  "0x2c431": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x2c431>",
    "poll_symbol": ""
  },
  "0x2cb77": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x2cb77>",
    "poll_symbol": ""
  },
  "0x2d93a": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x2d93a>",
    "poll_symbol": ""
  },
  "0x2e1a1": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2e1a1>",
    "poll_symbol": ""
  },
  "0x2e585": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x2e585>",
    "poll_symbol": ""
  },
  "0x2e5c4": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x2e5c4>",
    "poll_symbol": ""
  },
  "0x2e759": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x2e759>",
    "poll_symbol": ""
  },
  "0x2e798": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x2e798>",
    "poll_symbol": ""
  },
  "0x2e7d7": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x2e7d7>",
    "poll_symbol": ""
  },
  "0x2e80d": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2e80d>",
    "poll_symbol": ""
  },
  "0x2e843": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x2e843>",
    "poll_symbol": ""
  },
  "0x2e882": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x2e882>",
    "poll_symbol": ""
  },
  "0x2ec2f": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2ec2f>",
    "poll_symbol": ""
  },
  "0x2ec6e": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x2ec6e>",
    "poll_symbol": ""
  },
  "0x2eca4": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x2eca4>",
    "poll_symbol": ""
  },
  "0x2ece3": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x2ece3>",
    "poll_symbol": ""
  },
  "0x2f621": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2f621>",
    "poll_symbol": ""
  },
  "0x2f74d": {
    "name": "{async_fn_env#0}<&str><0x2f74d>",
    "poll_symbol": ""
  },
  "0x2f9fb": {
    "name": "ResponseFuture<0x2f9fb>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x2fb00": {
    "name": "{async_fn_env#0}<0x2fb00>",
    "poll_symbol": ""
  },
  "0x2fbbc": {
    "name": "{async_fn_env#0}<0x2fbbc>",
    "poll_symbol": ""
  },
  "0x2fcd4": {
    "name": "{async_fn_env#0}<0x2fcd4>",
    "poll_symbol": ""
  },
  "0x3047a": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x3047a>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x30970": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x30970>",
    "poll_symbol": ""
  },
  "0x30997": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x30997>",
    "poll_symbol": ""
  },
  "0x30a89": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x30a89>",
    "poll_symbol": ""
  },
  "0x30a90": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x30a90>",
    "poll_symbol": ""
  },
  "0x30d26": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x30d26>",
    "poll_symbol": ""
  },
  "0x30f38": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x30f38>",
    "poll_symbol": ""
  },
  "0x311a0": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x311a0>",
    "poll_symbol": ""
  },
  "0x311ca": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x311ca>",
    "poll_symbol": ""
  },
  "0x31aa3": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x31aa3>",
    "poll_symbol": ""
  },
  "0x31c54": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x31c54>",
    "poll_symbol": ""
  },
  "0x31cd9": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x31cd9>",
    "poll_symbol": ""
  },
  "0x31d00": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x31d00>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x352ad": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x352ad>",
    "poll_symbol": ""
  },
  "0x35746": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x35746>",
    "poll_symbol": ""
  },
  "0x37768": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x37768>",
    "poll_symbol": ""
  },
  "0x38275": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x38275>",
    "poll_symbol": ""
  },
  "0x382b4": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x382b4>",
    "poll_symbol": ""
  },
  "0x383d4": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x383d4>",
    "poll_symbol": ""
  },
  "0x38413": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x38413>",
    "poll_symbol": ""
  },
  "0x38452": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x38452>",
    "poll_symbol": ""
  },
  "0x38488": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x38488>",
    "poll_symbol": ""
  },
  "0x384be": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x384be>",
    "poll_symbol": ""
  },
  "0x384fd": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x384fd>",
    "poll_symbol": ""
  },
  "0x388aa": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x388aa>",
    "poll_symbol": ""
  },
  "0x388e9": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x388e9>",
    "poll_symbol": ""
  },
  "0x3891f": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x3891f>",
    "poll_symbol": ""
  },
  "0x3895e": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x3895e>",
    "poll_symbol": ""
  },
  "0x391f5": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x391f5>",
    "poll_symbol": ""
  },
  "0x3979b": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x3979b>",
    "poll_symbol": ""
  },
  "0x397b9": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x397b9>",
    "poll_symbol": ""
  },
  "0x397d7": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x397d7>",
    "poll_symbol": ""
  },
  "0x39a2e": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x39a2e>",
    "poll_symbol": ""
  },
  "0x39a4c": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x39a4c>",
    "poll_symbol": ""
  },
  "0x39eab": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x39eab>",
    "poll_symbol": ""
  },
  "0x39f05": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x39f05>",
    "poll_symbol": ""
  },
  "0x39f17": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x39f17>",
    "poll_symbol": ""
  },
  "0x39f29": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x39f29>",
    "poll_symbol": ""
  },
  "0x3a091": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x3a091>",
    "poll_symbol": ""
  },
  "0x3a0a3": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x3a0a3>",
    "poll_symbol": ""
  },
  "0x3a0b5": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x3a0b5>",
    "poll_symbol": ""
  },
  "0x3a0c7": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x3a0c7>",
    "poll_symbol": ""
  },
  "0x3b130": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x3b130>",
    "poll_symbol": ""
  },
  "0x3b1f3": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x3b1f3>",
    "poll_symbol": ""
  },
  "0x3b874": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x3b874>",
    "poll_symbol": ""
  },
  "0x3c0d0": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x3c0d0>",
    "poll_symbol": ""
  },
  "0x3c12a": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x3c12a>",
    "poll_symbol": ""
  },
  "0x3c148": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x3c148>",
    "poll_symbol": ""
  },
  "0x3c166": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x3c166>",
    "poll_symbol": ""
  },
  "0x3c274": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x3c274>",
    "poll_symbol": ""
  },
  "0x3c292": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x3c292>",
    "poll_symbol": ""
  },
  "0x3c9c1": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x3c9c1>",
    "poll_symbol": ""
  },
  "0x3c9fd": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x3c9fd>",
    "poll_symbol": ""
  },
  "0x3d3c0": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x3d3c0>",
    "poll_symbol": ""
  },
  "0x3d5cc": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x3d5cc>",
    "poll_symbol": ""
  },
  "0x3d812": {
    "name": "{async_block_env#0}<0x3d812>",
    "poll_symbol": ""
  },
  "0x3d956": {
    "name": "{async_fn_env#0}<&str><0x3d956>",
    "poll_symbol": ""
  },
  "0x3dc04": {
    "name": "ResponseFuture<0x3dc04>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x3dd09": {
    "name": "{async_fn_env#0}<0x3dd09>",
    "poll_symbol": ""
  },
  "0x3ddc5": {
    "name": "{async_fn_env#0}<0x3ddc5>",
    "poll_symbol": ""
  },
  "0x3dedd": {
    "name": "{async_fn_env#0}<0x3dedd>",
    "poll_symbol": ""
  },
  "0x3e66f": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x3e66f>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x3eb44": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x3eb44>",
    "poll_symbol": ""
  },
  "0x3eb6b": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x3eb6b>",
    "poll_symbol": ""
  },
  "0x3ec5d": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x3ec5d>",
    "poll_symbol": ""
  },
  "0x3ec64": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x3ec64>",
    "poll_symbol": ""
  },
  "0x3ef35": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x3ef35>",
    "poll_symbol": ""
  },
  "0x3ef5f": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x3ef5f>",
    "poll_symbol": ""
  },
  "0x3f5a4": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x3f5a4>",
    "poll_symbol": ""
  },
  "0x3f755": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x3f755>",
    "poll_symbol": ""
  },
  "0x3f7da": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x3f7da>",
    "poll_symbol": ""
  },
  "0x3f801": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x3f801>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x448d0": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x448d0>",
    "poll_symbol": ""
  },
  "0x4496f": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x4496f>",
    "poll_symbol": ""
  },
  "0x45032": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x45032>",
    "poll_symbol": ""
  },
  "0x4506e": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x4506e>",
    "poll_symbol": ""
  },
  "0x451b7": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x451b7>",
    "poll_symbol": ""
  },
  "0x4522f": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x4522f>",
    "poll_symbol": ""
  },
  "0x4524d": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x4524d>",
    "poll_symbol": ""
  },
  "0x4526b": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x4526b>",
    "poll_symbol": ""
  },
  "0x45397": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x45397>",
    "poll_symbol": ""
  },
  "0x453b5": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x453b5>",
    "poll_symbol": ""
  },
  "0x45770": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x45770>",
    "poll_symbol": ""
  },
  "0x457dc": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x457dc>",
    "poll_symbol": ""
  },
  "0x457ee": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x457ee>",
    "poll_symbol": ""
  },
  "0x45800": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x45800>",
    "poll_symbol": ""
  },
  "0x459a6": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x459a6>",
    "poll_symbol": ""
  },
  "0x459b8": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x459b8>",
    "poll_symbol": ""
  },
  "0x459ca": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x459ca>",
    "poll_symbol": ""
  },
  "0x459dc": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x459dc>",
    "poll_symbol": ""
  },
  "0x45f6b": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x45f6b>",
    "poll_symbol": ""
  },
  "0x45f9e": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x45f9e>",
    "poll_symbol": ""
  },
  "0x460a1": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x460a1>",
    "poll_symbol": ""
  },
  "0x460dd": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x460dd>",
    "poll_symbol": ""
  },
  "0x460fb": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x460fb>",
    "poll_symbol": ""
  },
  "0x46c3b": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x46c3b>",
    "poll_symbol": ""
  },
  "0x46cfe": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x46cfe>",
    "poll_symbol": ""
  },
  "0x47444": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x47444>",
    "poll_symbol": ""
  },
  "0x48748": {
    "name": "{async_block_env#0}<0x48748>",
    "poll_symbol": ""
  },
  "0x48ea8": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x48ea8>",
    "poll_symbol": ""
  },
  "0x4928c": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x4928c>",
    "poll_symbol": ""
  },
  "0x492cb": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x492cb>",
    "poll_symbol": ""
  },
  "0x49460": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x49460>",
    "poll_symbol": ""
  },
  "0x4949f": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x4949f>",
    "poll_symbol": ""
  },
  "0x494de": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x494de>",
    "poll_symbol": ""
  },
  "0x49514": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x49514>",
    "poll_symbol": ""
  },
  "0x4954a": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x4954a>",
    "poll_symbol": ""
  },
  "0x49589": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x49589>",
    "poll_symbol": ""
  },
  "0x49936": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x49936>",
    "poll_symbol": ""
  },
  "0x49975": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x49975>",
    "poll_symbol": ""
  },
  "0x499ab": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x499ab>",
    "poll_symbol": ""
  },
  "0x499ea": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x499ea>",
    "poll_symbol": ""
  },
  "0x4a328": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x4a328>",
    "poll_symbol": ""
  },
  "0x4a45b": {
    "name": "{async_fn_env#0}<&str><0x4a45b>",
    "poll_symbol": ""
  },
  "0x4a709": {
    "name": "ResponseFuture<0x4a709>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x4a80e": {
    "name": "{async_fn_env#0}<0x4a80e>",
    "poll_symbol": ""
  },
  "0x4a8ca": {
    "name": "{async_fn_env#0}<0x4a8ca>",
    "poll_symbol": ""
  },
  "0x4a9e2": {
    "name": "{async_fn_env#0}<0x4a9e2>",
    "poll_symbol": ""
  },
  "0x4b196": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x4b196>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x4b6ad": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x4b6ad>",
    "poll_symbol": ""
  },
  "0x4b6d4": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x4b6d4>",
    "poll_symbol": ""
  },
  "0x4b7c6": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x4b7c6>",
    "poll_symbol": ""
  },
  "0x4b7cd": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x4b7cd>",
    "poll_symbol": ""
  },
  "0x4ba63": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x4ba63>",
    "poll_symbol": ""
  },
  "0x4bc75": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x4bc75>",
    "poll_symbol": ""
  },
  "0x4bedd": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x4bedd>",
    "poll_symbol": ""
  },
  "0x4bf07": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x4bf07>",
    "poll_symbol": ""
  },
  "0x4c7e0": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x4c7e0>",
    "poll_symbol": ""
  },
  "0x4c991": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x4c991>",
    "poll_symbol": ""
  },
  "0x4ca16": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x4ca16>",
    "poll_symbol": ""
  },
  "0x4ca3d": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x4ca3d>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x4f74b": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x4f74b>",
    "poll_symbol": ""
  },
  "0x4f7ea": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x4f7ea>",
    "poll_symbol": ""
  },
  "0x51bad": {
    "name": "Pin<&mut reqwest::get::{async_fn_env#0}<&str>>",
    "poll_symbol": ""
  },
  "0x51c08": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x51c08>",
    "poll_symbol": ""
  },
  "0x51c62": {
    "name": "Pin<&mut reqwest::async_impl::response::{impl#0}::text::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x51cf2": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x51cf2>",
    "poll_symbol": ""
  },
  "0x51d25": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x51d25>",
    "poll_symbol": ""
  },
  "0x51e28": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x51e28>",
    "poll_symbol": ""
  },
  "0x51e64": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x51e64>",
    "poll_symbol": ""
  },
  "0x51e82": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x51e82>",
    "poll_symbol": ""
  },
  "0x52460": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x52460>",
    "poll_symbol": ""
  },
  "0x524d8": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x524d8>",
    "poll_symbol": ""
  },
  "0x524f6": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x524f6>",
    "poll_symbol": ""
  },
  "0x52514": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x52514>",
    "poll_symbol": ""
  },
  "0x52640": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x52640>",
    "poll_symbol": ""
  },
  "0x5265e": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x5265e>",
    "poll_symbol": ""
  },
  "0x52a25": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x52a25>",
    "poll_symbol": ""
  },
  "0x52a91": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x52a91>",
    "poll_symbol": ""
  },
  "0x52aa3": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x52aa3>",
    "poll_symbol": ""
  },
  "0x52ab5": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x52ab5>",
    "poll_symbol": ""
  },
  "0x52c5b": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x52c5b>",
    "poll_symbol": ""
  },
  "0x52c6d": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x52c6d>",
    "poll_symbol": ""
  },
  "0x52c7f": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x52c7f>",
    "poll_symbol": ""
  },
  "0x52c91": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x52c91>",
    "poll_symbol": ""
  },
  "0x53723": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x53723>",
    "poll_symbol": ""
  },
  "0x537e6": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x537e6>",
    "poll_symbol": ""
  },
  "0x53f2c": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x53f2c>",
    "poll_symbol": ""
  },
  "0x553ec": {
    "name": "{async_fn_env#0}<&str><0x553ec>",
    "poll_symbol": ""
  },
  "0x5569a": {
    "name": "ResponseFuture<0x5569a>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x5579f": {
    "name": "{async_fn_env#0}<0x5579f>",
    "poll_symbol": ""
  },
  "0x5585b": {
    "name": "{async_fn_env#0}<0x5585b>",
    "poll_symbol": ""
  },
  "0x55973": {
    "name": "{async_fn_env#0}<0x55973>",
    "poll_symbol": ""
  },
  "0x5611d": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x5611d>",
    "poll_symbol": ""
  },
  "0x5615c": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x5615c>",
    "poll_symbol": ""
  },
  "0x562f1": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x562f1>",
    "poll_symbol": ""
  },
  "0x56330": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x56330>",
    "poll_symbol": ""
  },
  "0x5636f": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x5636f>",
    "poll_symbol": ""
  },
  "0x563a5": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x563a5>",
    "poll_symbol": ""
  },
  "0x563db": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x563db>",
    "poll_symbol": ""
  },
  "0x5641a": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x5641a>",
    "poll_symbol": ""
  },
  "0x567c7": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x567c7>",
    "poll_symbol": ""
  },
  "0x56806": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x56806>",
    "poll_symbol": ""
  },
  "0x5683c": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x5683c>",
    "poll_symbol": ""
  },
  "0x5687b": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x5687b>",
    "poll_symbol": ""
  },
  "0x577ad": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x577ad>",
    "poll_symbol": ""
  },
  "0x579d1": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x579d1>",
    "poll_symbol": ""
  },
  "0x57d14": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x57d14>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x5822b": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x5822b>",
    "poll_symbol": ""
  },
  "0x58252": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x58252>",
    "poll_symbol": ""
  },
  "0x58344": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x58344>",
    "poll_symbol": ""
  },
  "0x5834b": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x5834b>",
    "poll_symbol": ""
  },
  "0x585e1": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x585e1>",
    "poll_symbol": ""
  },
  "0x587f3": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x587f3>",
    "poll_symbol": ""
  },
  "0x58a5b": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x58a5b>",
    "poll_symbol": ""
  },
  "0x58a85": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x58a85>",
    "poll_symbol": ""
  },
  "0x5935e": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x5935e>",
    "poll_symbol": ""
  },
  "0x5950f": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x5950f>",
    "poll_symbol": ""
  },
  "0x59594": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x59594>",
    "poll_symbol": ""
  },
  "0x595bb": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x595bb>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x59fa1": {
    "name": "{async_block_env#0}<0x59fa1>",
    "poll_symbol": ""
  },
  "0x5d30d": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x5d30d>",
    "poll_symbol": ""
  },
  "0x5d3ac": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x5d3ac>",
    "poll_symbol": ""
  },
  "0x5f743": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x5f743>",
    "poll_symbol": ""
  },
  "0x5f86e": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x5f86e>",
    "poll_symbol": ""
  },
  "0x5f8e6": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x5f8e6>",
    "poll_symbol": ""
  },
  "0x5f904": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x5f904>",
    "poll_symbol": ""
  },
  "0x5f922": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x5f922>",
    "poll_symbol": ""
  },
  "0x5fa4e": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x5fa4e>",
    "poll_symbol": ""
  },
  "0x5fa6c": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x5fa6c>",
    "poll_symbol": ""
  },
  "0x5fe15": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x5fe15>",
    "poll_symbol": ""
  },
  "0x5fe81": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x5fe81>",
    "poll_symbol": ""
  },
  "0x5fe93": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x5fe93>",
    "poll_symbol": ""
  },
  "0x5fea5": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x5fea5>",
    "poll_symbol": ""
  },
  "0x6004b": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x6004b>",
    "poll_symbol": ""
  },
  "0x6005d": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x6005d>",
    "poll_symbol": ""
  },
  "0x6006f": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x6006f>",
    "poll_symbol": ""
  },
  "0x60081": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x60081>",
    "poll_symbol": ""
  },
  "0x60c94": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x60c94>",
    "poll_symbol": ""
  },
  "0x60d57": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x60d57>",
    "poll_symbol": ""
  },
  "0x6149d": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x6149d>",
    "poll_symbol": ""
  },
  "0x61fef": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x61fef>",
    "poll_symbol": ""
  },
  "0x62022": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x62022>",
    "poll_symbol": ""
  },
  "0x62125": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x62125>",
    "poll_symbol": ""
  },
  "0x62161": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x62161>",
    "poll_symbol": ""
  },
  "0x6217f": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x6217f>",
    "poll_symbol": ""
  },
  "0x6301c": {
    "name": "ResponseFuture<0x6301c>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x636d0": {
    "name": "{async_fn_env#0}<&str><0x636d0>",
    "poll_symbol": ""
  },
  "0x63e89": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x63e89>",
    "poll_symbol": ""
  },
  "0x64207": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x64207>",
    "poll_symbol": ""
  },
  "0x64246": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x64246>",
    "poll_symbol": ""
  },
  "0x643db": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x643db>",
    "poll_symbol": ""
  },
  "0x6441a": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x6441a>",
    "poll_symbol": ""
  },
  "0x64459": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x64459>",
    "poll_symbol": ""
  },
  "0x6448f": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6448f>",
    "poll_symbol": ""
  },
  "0x644c5": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x644c5>",
    "poll_symbol": ""
  },
  "0x64504": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x64504>",
    "poll_symbol": ""
  },
  "0x648b1": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x648b1>",
    "poll_symbol": ""
  },
  "0x648f0": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x648f0>",
    "poll_symbol": ""
  },
  "0x64926": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x64926>",
    "poll_symbol": ""
  },
  "0x64965": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x64965>",
    "poll_symbol": ""
  },
  "0x65288": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x65288>",
    "poll_symbol": ""
  },
  "0x655a6": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x655a6>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x65a95": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x65a95>",
    "poll_symbol": ""
  },
  "0x65abc": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x65abc>",
    "poll_symbol": ""
  },
  "0x65b2a": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x65b2a>",
    "poll_symbol": ""
  },
  "0x65b31": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x65b31>",
    "poll_symbol": ""
  },
  "0x65d9c": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x65d9c>",
    "poll_symbol": ""
  },
  "0x65fae": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x65fae>",
    "poll_symbol": ""
  },
  "0x66216": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x66216>",
    "poll_symbol": ""
  },
  "0x66240": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x66240>",
    "poll_symbol": ""
  },
  "0x66b19": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x66b19>",
    "poll_symbol": ""
  },
  "0x66ba8": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x66ba8>",
    "poll_symbol": ""
  },
  "0x66c2d": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x66c2d>",
    "poll_symbol": ""
  },
  "0x66c54": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x66c54>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x678a9": {
    "name": "Pin<&mut reqwest::async_impl::response::{impl#0}::bytes::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x67904": {
    "name": "Pin<&mut reqwest::async_impl::response::{impl#0}::text_with_charset::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x683ec": {
    "name": "{async_fn_env#0}<0x683ec>",
    "poll_symbol": ""
  },
  "0x6881d": {
    "name": "{async_fn_env#0}<0x6881d>",
    "poll_symbol": ""
  },
  "0x689cb": {
    "name": "{async_fn_env#0}<0x689cb>",
    "poll_symbol": ""
  },
  "0x6f836": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x6f836>",
    "poll_symbol": ""
  },
  "0x6f8d5": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x6f8d5>",
    "poll_symbol": ""
  },
  "0x70558": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x70558>",
    "poll_symbol": ""
  },
  "0x70576": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}><0x70576>",
    "poll_symbol": ""
  },
  "0x71e31": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x71e31>",
    "poll_symbol": ""
  },
  "0x71e9d": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x71e9d>",
    "poll_symbol": ""
  },
  "0x71eaf": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x71eaf>",
    "poll_symbol": ""
  },
  "0x71ec1": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x71ec1>",
    "poll_symbol": ""
  },
  "0x72067": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x72067>",
    "poll_symbol": ""
  },
  "0x72079": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x72079>",
    "poll_symbol": ""
  },
  "0x7208b": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x7208b>",
    "poll_symbol": ""
  },
  "0x7209d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x7209d>",
    "poll_symbol": ""
  },
  "0x72439": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x72439>",
    "poll_symbol": ""
  },
  "0x72475": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x72475>",
    "poll_symbol": ""
  },
  "0x724ed": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x724ed>",
    "poll_symbol": ""
  },
  "0x7250b": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0x7250b>",
    "poll_symbol": ""
  },
  "0x72618": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x72618>",
    "poll_symbol": ""
  },
  "0x72690": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x72690>",
    "poll_symbol": ""
  },
  "0x726ae": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x726ae>",
    "poll_symbol": ""
  },
  "0x726cc": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x726cc>",
    "poll_symbol": ""
  },
  "0x727f8": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x727f8>",
    "poll_symbol": ""
  },
  "0x72816": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x72816>",
    "poll_symbol": ""
  },
  "0x72d2e": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x72d2e>",
    "poll_symbol": ""
  },
  "0x72d61": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x72d61>",
    "poll_symbol": ""
  },
  "0x72e64": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x72e64>",
    "poll_symbol": ""
  },
  "0x72ea0": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x72ea0>",
    "poll_symbol": ""
  },
  "0x72ebe": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x72ebe>",
    "poll_symbol": ""
  },
  "0x73a1c": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x73a1c>",
    "poll_symbol": ""
  },
  "0x73adf": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x73adf>",
    "poll_symbol": ""
  },
  "0x74225": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x74225>",
    "poll_symbol": ""
  },
  "0x7567c": {
    "name": "PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0x7567c>",
    "poll_symbol": ""
  },
  "0x7569a": {
    "name": "PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>><0x7569a>",
    "poll_symbol": ""
  },
  "0x756e6": {
    "name": "{async_block_env#0}<0x756e6>",
    "poll_symbol": ""
  },
  "0x75e46": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x75e46>",
    "poll_symbol": ""
  },
  "0x7622a": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x7622a>",
    "poll_symbol": ""
  },
  "0x76269": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x76269>",
    "poll_symbol": ""
  },
  "0x763fe": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x763fe>",
    "poll_symbol": ""
  },
  "0x7643d": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x7643d>",
    "poll_symbol": ""
  },
  "0x7647c": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x7647c>",
    "poll_symbol": ""
  },
  "0x764b2": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x764b2>",
    "poll_symbol": ""
  },
  "0x764e8": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x764e8>",
    "poll_symbol": ""
  },
  "0x76527": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x76527>",
    "poll_symbol": ""
  },
  "0x768d4": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x768d4>",
    "poll_symbol": ""
  },
  "0x76913": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x76913>",
    "poll_symbol": ""
  },
  "0x76949": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x76949>",
    "poll_symbol": ""
  },
  "0x76988": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x76988>",
    "poll_symbol": ""
  },
  "0x772c6": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x772c6>",
    "poll_symbol": ""
  },
  "0x77474": {
    "name": "{async_fn_env#0}<&str><0x77474>",
    "poll_symbol": ""
  },
  "0x77722": {
    "name": "ResponseFuture<0x77722>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x77827": {
    "name": "{async_fn_env#0}<0x77827>",
    "poll_symbol": ""
  },
  "0x778e3": {
    "name": "{async_fn_env#0}<0x778e3>",
    "poll_symbol": ""
  },
  "0x779fb": {
    "name": "{async_fn_env#0}<0x779fb>",
    "poll_symbol": ""
  },
  "0x7819b": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x7819b>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x786b2": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x786b2>",
    "poll_symbol": ""
  },
  "0x786d9": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x786d9>",
    "poll_symbol": ""
  },
  "0x787cb": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x787cb>",
    "poll_symbol": ""
  },
  "0x787d2": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x787d2>",
    "poll_symbol": ""
  },
  "0x78a68": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x78a68>",
    "poll_symbol": ""
  },
  "0x78c7a": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x78c7a>",
    "poll_symbol": ""
  },
  "0x78ee2": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x78ee2>",
    "poll_symbol": ""
  },
  "0x78f0c": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x78f0c>",
    "poll_symbol": ""
  },
  "0x797e5": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x797e5>",
    "poll_symbol": ""
  },
  "0x79996": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x79996>",
    "poll_symbol": ""
  },
  "0x79a1b": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x79a1b>",
    "poll_symbol": ""
  },
  "0x79a42": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x79a42>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x7ae89": {
    "name": "{closure_env#1}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x7aea1": {
    "name": "{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>",
    "poll_symbol": ""
  },
  "0x7aebf": {
    "name": "{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x7aede": {
    "name": "{closure_env#1}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>",
    "poll_symbol": ""
  },
  "0x7afb3": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}><0x7afb3>",
    "poll_symbol": ""
  },
  "0x7afd1": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x7afd1>",
    "poll_symbol": ""
  },
  "0x7bafa": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x7bafa>",
    "poll_symbol": ""
  },
  "0x7bb18": {
    "name": "{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>><0x7bb18>",
    "poll_symbol": ""
  },
  "0x7bb36": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}><0x7bb36>",
    "poll_symbol": ""
  },
  "0x7bb54": {
    "name": "{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>><0x7bb54>",
    "poll_symbol": ""
  },
  "0x7f318": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x7f318>",
    "poll_symbol": ""
  },
  "0x7f889": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x7f889>",
    "poll_symbol": ""
  },
  "0x8019c": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x8019c>",
    "poll_symbol": ""
  },
  "0x801db": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x801db>",
    "poll_symbol": ""
  },
  "0x802fb": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x802fb>",
    "poll_symbol": ""
  },
  "0x8033a": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x8033a>",
    "poll_symbol": ""
  },
  "0x80379": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x80379>",
    "poll_symbol": ""
  },
  "0x803af": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x803af>",
    "poll_symbol": ""
  },
  "0x803e5": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x803e5>",
    "poll_symbol": ""
  },
  "0x80424": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x80424>",
    "poll_symbol": ""
  },
  "0x807d1": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x807d1>",
    "poll_symbol": ""
  },
  "0x80810": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x80810>",
    "poll_symbol": ""
  },
  "0x80846": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x80846>",
    "poll_symbol": ""
  },
  "0x80885": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x80885>",
    "poll_symbol": ""
  },
  "0x81264": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x81264>",
    "poll_symbol": ""
  },
  "0x81413": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x81413>",
    "poll_symbol": ""
  },
  "0x81804": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x81804>",
    "poll_symbol": ""
  },
  "0x81822": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x81822>",
    "poll_symbol": ""
  },
  "0x81840": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x81840>",
    "poll_symbol": ""
  },
  "0x81ba5": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x81ba5>",
    "poll_symbol": ""
  },
  "0x81bc3": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x81bc3>",
    "poll_symbol": ""
  },
  "0x81f14": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x81f14>",
    "poll_symbol": ""
  },
  "0x81f6e": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x81f6e>",
    "poll_symbol": ""
  },
  "0x81f80": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x81f80>",
    "poll_symbol": ""
  },
  "0x81f92": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x81f92>",
    "poll_symbol": ""
  },
  "0x82130": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x82130>",
    "poll_symbol": ""
  },
  "0x82142": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x82142>",
    "poll_symbol": ""
  },
  "0x82154": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x82154>",
    "poll_symbol": ""
  },
  "0x82166": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x82166>",
    "poll_symbol": ""
  },
  "0x8310f": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x8310f>",
    "poll_symbol": ""
  },
  "0x831d2": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x831d2>",
    "poll_symbol": ""
  },
  "0x83918": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x83918>",
    "poll_symbol": ""
  },
  "0x841a1": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x841a1>",
    "poll_symbol": ""
  },
  "0x841fb": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x841fb>",
    "poll_symbol": ""
  },
  "0x84219": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x84219>",
    "poll_symbol": ""
  },
  "0x84237": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x84237>",
    "poll_symbol": ""
  },
  "0x84363": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x84363>",
    "poll_symbol": ""
  },
  "0x84381": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x84381>",
    "poll_symbol": ""
  },
  "0x84c6d": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x84c6d>",
    "poll_symbol": ""
  },
  "0x84c8b": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x84c8b>",
    "poll_symbol": ""
  },
  "0x84cc7": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x84cc7>",
    "poll_symbol": ""
  },
  "0x84d03": {
    "name": "Pin<&mut core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0x84d03>",
    "poll_symbol": ""
  },
  "0x84d21": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0x84d21>",
    "poll_symbol": ""
  },
  "0x84d3f": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>><0x84d3f>",
    "poll_symbol": ""
  },
  "0x84d7b": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>><0x84d7b>",
    "poll_symbol": ""
  },
  "0x84d99": {
    "name": "Pin<&mut core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0x84d99>",
    "poll_symbol": ""
  },
  "0x84f80": {
    "name": "PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>><0x84f80>",
    "poll_symbol": ""
  },
  "0x84f9e": {
    "name": "PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0x84f9e>",
    "poll_symbol": ""
  },
  "0x85795": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x85795>",
    "poll_symbol": ""
  },
  "0x859a1": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x859a1>",
    "poll_symbol": ""
  },
  "0x85b24": {
    "name": "{async_block_env#0}<0x85b24>",
    "poll_symbol": ""
  },
  "0x85c68": {
    "name": "{async_fn_env#0}<&str><0x85c68>",
    "poll_symbol": ""
  },
  "0x85f16": {
    "name": "ResponseFuture<0x85f16>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x8601b": {
    "name": "{async_fn_env#0}<0x8601b>",
    "poll_symbol": ""
  },
  "0x860d7": {
    "name": "{async_fn_env#0}<0x860d7>",
    "poll_symbol": ""
  },
  "0x861ef": {
    "name": "{async_fn_env#0}<0x861ef>",
    "poll_symbol": ""
  },
  "0x86981": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x86981>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x86e3c": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x86e3c>",
    "poll_symbol": ""
  },
  "0x86e63": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x86e63>",
    "poll_symbol": ""
  },
  "0x86f55": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x86f55>",
    "poll_symbol": ""
  },
  "0x86f5c": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x86f5c>",
    "poll_symbol": ""
  },
  "0x8722d": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x8722d>",
    "poll_symbol": ""
  },
  "0x87257": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x87257>",
    "poll_symbol": ""
  },
  "0x878a9": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x878a9>",
    "poll_symbol": ""
  },
  "0x87a5a": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x87a5a>",
    "poll_symbol": ""
  },
  "0x87adf": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x87adf>",
    "poll_symbol": ""
  },
  "0x87b06": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x87b06>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x8866c": {
    "name": "{closure_env#1}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0x8866c>",
    "poll_symbol": ""
  },
  "0x8867f": {
    "name": "{closure_env#1}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0x8867f>",
    "poll_symbol": ""
  },
  "0x88693": {
    "name": "{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0x88693>",
    "poll_symbol": ""
  },
  "0x886a6": {
    "name": "{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0x886a6>",
    "poll_symbol": ""
  },
  "0x886bf": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x886e8": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x8871d": {
    "name": "{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>>",
    "poll_symbol": ""
  },
  "0x88730": {
    "name": "{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>",
    "poll_symbol": ""
  },
  "0x88bb0": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}><0x88bb0>",
    "poll_symbol": ""
  },
  "0x88bc4": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x88bc4>",
    "poll_symbol": ""
  },
  "0x894e9": {
    "name": "{closure_env#0}<(alloc::boxed::Box<tokio::runtime::scheduler::current_thread::Core, alloc::alloc::Global>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>), tokio::runtime::scheduler::current_thread::{impl#8}::enter::{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>>",
    "poll_symbol": ""
  },
  "0x89507": {
    "name": "{closure_env#0}<(alloc::boxed::Box<tokio::runtime::scheduler::current_thread::Core, alloc::alloc::Global>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>), tokio::runtime::scheduler::current_thread::{impl#8}::enter::{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>>",
    "poll_symbol": ""
  },
  "0x8c5a0": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x8c5a0>",
    "poll_symbol": ""
  },
  "0x8c63f": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x8c63f>",
    "poll_symbol": ""
  },
  "0x8daba": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x8daba>",
    "poll_symbol": ""
  },
  "0x8db32": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x8db32>",
    "poll_symbol": ""
  },
  "0x8db50": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x8db50>",
    "poll_symbol": ""
  },
  "0x8db6e": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x8db6e>",
    "poll_symbol": ""
  },
  "0x8dc9a": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x8dc9a>",
    "poll_symbol": ""
  },
  "0x8dcb8": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x8dcb8>",
    "poll_symbol": ""
  },
  "0x8dfa6": {
    "name": "NonNull<tokio_test_project::main::{async_block_env#0}>",
    "poll_symbol": ""
  },
  "0x8e0a9": {
    "name": "Unique<tokio_test_project::main::{async_block_env#0}>",
    "poll_symbol": ""
  },
  "0x8e63c": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x8e63c>",
    "poll_symbol": ""
  },
  "0x8e6a8": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x8e6a8>",
    "poll_symbol": ""
  },
  "0x8e6ba": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x8e6ba>",
    "poll_symbol": ""
  },
  "0x8e6cc": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x8e6cc>",
    "poll_symbol": ""
  },
  "0x8e872": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x8e872>",
    "poll_symbol": ""
  },
  "0x8e884": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x8e884>",
    "poll_symbol": ""
  },
  "0x8e896": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x8e896>",
    "poll_symbol": ""
  },
  "0x8e8a8": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x8e8a8>",
    "poll_symbol": ""
  },
  "0x8ec1a": {
    "name": "PhantomData<tokio_test_project::main::{async_block_env#0}>",
    "poll_symbol": ""
  },
  "0x8eda2": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x8eda2>",
    "poll_symbol": ""
  },
  "0x8edd5": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x8edd5>",
    "poll_symbol": ""
  },
  "0x8ef14": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x8ef14>",
    "poll_symbol": ""
  },
  "0x8ef50": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x8ef50>",
    "poll_symbol": ""
  },
  "0x8ef6e": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x8ef6e>",
    "poll_symbol": ""
  },
  "0x8fdcc": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x8fdcc>",
    "poll_symbol": ""
  },
  "0x8fe8f": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x8fe8f>",
    "poll_symbol": ""
  },
  "0x905d5": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x905d5>",
    "poll_symbol": ""
  },
  "0x91828": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x91828>",
    "poll_symbol": ""
  },
  "0x91882": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x91882>",
    "poll_symbol": ""
  },
  "0x918a0": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0x918a0>",
    "poll_symbol": ""
  },
  "0x918be": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x918be>",
    "poll_symbol": ""
  },
  "0x922d5": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x922d5>",
    "poll_symbol": ""
  },
  "0x92da1": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x92da1>",
    "poll_symbol": ""
  },
  "0x93255": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x93255>",
    "poll_symbol": ""
  },
  "0x93294": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x93294>",
    "poll_symbol": ""
  },
  "0x93429": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x93429>",
    "poll_symbol": ""
  },
  "0x93468": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x93468>",
    "poll_symbol": ""
  },
  "0x934a7": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x934a7>",
    "poll_symbol": ""
  },
  "0x934dd": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x934dd>",
    "poll_symbol": ""
  },
  "0x93513": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x93513>",
    "poll_symbol": ""
  },
  "0x93552": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x93552>",
    "poll_symbol": ""
  },
  "0x938ff": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x938ff>",
    "poll_symbol": ""
  },
  "0x9393e": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x9393e>",
    "poll_symbol": ""
  },
  "0x93974": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x93974>",
    "poll_symbol": ""
  },
  "0x939b3": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x939b3>",
    "poll_symbol": ""
  },
  "0x9447b": {
    "name": "{async_block_env#0}<0x9447b>",
    "poll_symbol": ""
  },
  "0x945c8": {
    "name": "{async_fn_env#0}<&str><0x945c8>",
    "poll_symbol": ""
  },
  "0x94876": {
    "name": "ResponseFuture<0x94876>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x9499a": {
    "name": "{async_fn_env#0}<0x9499a>",
    "poll_symbol": ""
  },
  "0x94a56": {
    "name": "{async_fn_env#0}<0x94a56>",
    "poll_symbol": ""
  },
  "0x94b6e": {
    "name": "{async_fn_env#0}<0x94b6e>",
    "poll_symbol": ""
  },
  "0x9531b": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x9531b>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x95811": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x95811>",
    "poll_symbol": ""
  },
  "0x95838": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x95838>",
    "poll_symbol": ""
  },
  "0x9592a": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x9592a>",
    "poll_symbol": ""
  },
  "0x95931": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x95931>",
    "poll_symbol": ""
  },
  "0x95bc7": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x95bc7>",
    "poll_symbol": ""
  },
  "0x95dd9": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x95dd9>",
    "poll_symbol": ""
  },
  "0x96041": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x96041>",
    "poll_symbol": ""
  },
  "0x9606b": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x9606b>",
    "poll_symbol": ""
  },
  "0x96944": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x96944>",
    "poll_symbol": ""
  },
  "0x96af5": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x96af5>",
    "poll_symbol": ""
  },
  "0x96b7a": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x96b7a>",
    "poll_symbol": ""
  },
  "0x96ba1": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x96ba1>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x9be6f": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::multi_thread::{impl#0}::block_on::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>, core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x9be8d": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::multi_thread::{impl#0}::block_on::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>, core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x9beab": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>, core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x9bec9": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>, core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x9bf1b": {
    "name": "{closure_env#0}<(alloc::boxed::Box<tokio::runtime::scheduler::current_thread::Core, alloc::alloc::Global>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>), tokio::runtime::scheduler::current_thread::{impl#8}::enter::{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>><0x9bf1b>",
    "poll_symbol": ""
  },
  "0x9bf39": {
    "name": "{closure_env#0}<(alloc::boxed::Box<tokio::runtime::scheduler::current_thread::Core, alloc::alloc::Global>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>), tokio::runtime::scheduler::current_thread::{impl#8}::enter::{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>><0x9bf39>",
    "poll_symbol": ""
  },
  "0x9bf78": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>",
    "poll_symbol": ""
  },
  "0x9bf8b": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure#0}::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>>",
    "poll_symbol": ""
  },
  "0x9bf9e": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>>",
    "poll_symbol": ""
  },
  "0x9bfb1": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>>>",
    "poll_symbol": ""
  },
  "0x9bfc4": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>>>>",
    "poll_symbol": ""
  },
  "0x9bfd7": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>>>",
    "poll_symbol": ""
  },
  "0x9bfea": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>>",
    "poll_symbol": ""
  },
  "0x9bffd": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure#0}::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>>>",
    "poll_symbol": ""
  },
  "0x9c1cb": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>><0x9c1cb>",
    "poll_symbol": ""
  },
  "0x9c1f4": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>><0x9c1f4>",
    "poll_symbol": ""
  },
  "0x9c223": {
    "name": "{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0x9c223>",
    "poll_symbol": ""
  },
  "0x9c236": {
    "name": "{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0x9c236>",
    "poll_symbol": ""
  },
  "0x9dcec": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x9dcff": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure#0}::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>",
    "poll_symbol": ""
  },
  "0x9dd12": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>",
    "poll_symbol": ""
  },
  "0x9dd25": {
    "name": "{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>><0x9dd25>",
    "poll_symbol": ""
  },
  "0x9dd38": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>>>",
    "poll_symbol": ""
  },
  "0x9dd4b": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>>",
    "poll_symbol": ""
  },
  "0x9dd5e": {
    "name": "{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>><0x9dd5e>",
    "poll_symbol": ""
  },
  "0x9dd71": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure#0}::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>>",
    "poll_symbol": ""
  },
  "0xa090a": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0xa090a>",
    "poll_symbol": ""
  },
  "0xa0ca4": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0xa0ca4>",
    "poll_symbol": ""
  },
  "0xa141a": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xa141a>",
    "poll_symbol": ""
  },
  "0xa1438": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0xa1438>",
    "poll_symbol": ""
  },
  "0xa1456": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xa1456>",
    "poll_symbol": ""
  },
  "0xa28db": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0xa28db>",
    "poll_symbol": ""
  },
  "0xa299e": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xa299e>",
    "poll_symbol": ""
  },
  "0xa3080": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0xa3080>",
    "poll_symbol": ""
  },
  "0xa37e0": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xa37e0>",
    "poll_symbol": ""
  },
  "0xa37fe": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xa37fe>",
    "poll_symbol": ""
  },
  "0xa3c5d": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xa3c5d>",
    "poll_symbol": ""
  },
  "0xa3cb7": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xa3cb7>",
    "poll_symbol": ""
  },
  "0xa3cc9": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xa3cc9>",
    "poll_symbol": ""
  },
  "0xa3cdb": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xa3cdb>",
    "poll_symbol": ""
  },
  "0xa3e67": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xa3e67>",
    "poll_symbol": ""
  },
  "0xa3e79": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xa3e79>",
    "poll_symbol": ""
  },
  "0xa3e8b": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0xa3e8b>",
    "poll_symbol": ""
  },
  "0xa3e9d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xa3e9d>",
    "poll_symbol": ""
  },
  "0xa42b0": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xa42b0>",
    "poll_symbol": ""
  },
  "0xa430a": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xa430a>",
    "poll_symbol": ""
  },
  "0xa4328": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xa4328>",
    "poll_symbol": ""
  },
  "0xa4346": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xa4346>",
    "poll_symbol": ""
  },
  "0xa4472": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xa4472>",
    "poll_symbol": ""
  },
  "0xa4490": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xa4490>",
    "poll_symbol": ""
  },
  "0xa57ba": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0xa57ba>",
    "poll_symbol": ""
  },
  "0xa57f6": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0xa57f6>",
    "poll_symbol": ""
  },
  "0xa5832": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0xa5832>",
    "poll_symbol": ""
  },
  "0xa5850": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0xa5850>",
    "poll_symbol": ""
  },
  "0xa6591": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xa6591>",
    "poll_symbol": ""
  },
  "0xa65d0": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xa65d0>",
    "poll_symbol": ""
  },
  "0xa66f0": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0xa66f0>",
    "poll_symbol": ""
  },
  "0xa672f": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0xa672f>",
    "poll_symbol": ""
  },
  "0xa676e": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0xa676e>",
    "poll_symbol": ""
  },
  "0xa67a4": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xa67a4>",
    "poll_symbol": ""
  },
  "0xa67da": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0xa67da>",
    "poll_symbol": ""
  },
  "0xa6819": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0xa6819>",
    "poll_symbol": ""
  },
  "0xa6bc6": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xa6bc6>",
    "poll_symbol": ""
  },
  "0xa6c05": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xa6c05>",
    "poll_symbol": ""
  },
  "0xa6c3b": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0xa6c3b>",
    "poll_symbol": ""
  },
  "0xa6c7a": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0xa6c7a>",
    "poll_symbol": ""
  },
  "0xa7577": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xa7577>",
    "poll_symbol": ""
  },
  "0xa76cc": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xa76cc>",
    "poll_symbol": ""
  },
  "0xa7f5f": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0xa7f5f>",
    "poll_symbol": ""
  },
  "0xa816b": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0xa816b>",
    "poll_symbol": ""
  },
  "0xa841e": {
    "name": "{async_block_env#0}<0xa841e>",
    "poll_symbol": ""
  },
  "0xa8562": {
    "name": "{async_fn_env#0}<&str><0xa8562>",
    "poll_symbol": ""
  },
  "0xa8810": {
    "name": "ResponseFuture<0xa8810>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0xa8915": {
    "name": "{async_fn_env#0}<0xa8915>",
    "poll_symbol": ""
  },
  "0xa89d1": {
    "name": "{async_fn_env#0}<0xa89d1>",
    "poll_symbol": ""
  },
  "0xa8ae9": {
    "name": "{async_fn_env#0}<0xa8ae9>",
    "poll_symbol": ""
  },
  "0xa927b": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0xa927b>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0xa9750": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xa9750>",
    "poll_symbol": ""
  },
  "0xa9777": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0xa9777>",
    "poll_symbol": ""
  },
  "0xa9869": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0xa9869>",
    "poll_symbol": ""
  },
  "0xa9870": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xa9870>",
    "poll_symbol": ""
  },
  "0xa9b41": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xa9b41>",
    "poll_symbol": ""
  },
  "0xa9b6b": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xa9b6b>",
    "poll_symbol": ""
  },
  "0xaa1bd": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0xaa1bd>",
    "poll_symbol": ""
  },
  "0xaa36e": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0xaa36e>",
    "poll_symbol": ""
  },
  "0xaa3f3": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xaa3f3>",
    "poll_symbol": ""
  },
  "0xaa41a": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0xaa41a>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xac496": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0xac496>",
    "poll_symbol": ""
  },
  "0xac7c3": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0xac7c3>",
    "poll_symbol": ""
  },
  "0xacf5e": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xacf5e>",
    "poll_symbol": ""
  },
  "0xacfb8": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xacfb8>",
    "poll_symbol": ""
  },
  "0xacfd6": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xacfd6>",
    "poll_symbol": ""
  },
  "0xacff4": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xacff4>",
    "poll_symbol": ""
  },
  "0xad102": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xad102>",
    "poll_symbol": ""
  },
  "0xad120": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xad120>",
    "poll_symbol": ""
  },
  "0xad645": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xad645>",
    "poll_symbol": ""
  },
  "0xad67b": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xad67b>",
    "poll_symbol": ""
  },
  "0xad68d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xad68d>",
    "poll_symbol": ""
  },
  "0xad69f": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xad69f>",
    "poll_symbol": ""
  },
  "0xad807": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xad807>",
    "poll_symbol": ""
  },
  "0xad819": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xad819>",
    "poll_symbol": ""
  },
  "0xad82b": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0xad82b>",
    "poll_symbol": ""
  },
  "0xad83d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xad83d>",
    "poll_symbol": ""
  },
  "0xafef1": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0xafef1>",
    "poll_symbol": ""
  },
  "0xaffb4": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xaffb4>",
    "poll_symbol": ""
  },
  "0xb0635": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0xb0635>",
    "poll_symbol": ""
  },
  "0xb081a": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xb081a>",
    "poll_symbol": ""
  },
  "0xb0838": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xb0838>",
    "poll_symbol": ""
  },
  "0xb0cb3": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xb0cb3>",
    "poll_symbol": ""
  },
  "0xb0cd1": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0xb0cd1>",
    "poll_symbol": ""
  },
  "0xb0cef": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xb0cef>",
    "poll_symbol": ""
  },
  "0xb5d44": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xb5d44>",
    "poll_symbol": ""
  },
  "0xb5e72": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xb5e72>",
    "poll_symbol": ""
  },
  "0xb6940": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xb6940>",
    "poll_symbol": ""
  },
  "0xb697f": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xb697f>",
    "poll_symbol": ""
  },
  "0xb6a9f": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0xb6a9f>",
    "poll_symbol": ""
  },
  "0xb6ade": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0xb6ade>",
    "poll_symbol": ""
  },
  "0xb6b1d": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0xb6b1d>",
    "poll_symbol": ""
  },
  "0xb6b53": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xb6b53>",
    "poll_symbol": ""
  },
  "0xb6b89": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0xb6b89>",
    "poll_symbol": ""
  },
  "0xb6bc8": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0xb6bc8>",
    "poll_symbol": ""
  },
  "0xb6f75": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xb6f75>",
    "poll_symbol": ""
  },
  "0xb6fb4": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xb6fb4>",
    "poll_symbol": ""
  },
  "0xb6fea": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0xb6fea>",
    "poll_symbol": ""
  },
  "0xb7029": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0xb7029>",
    "poll_symbol": ""
  },
  "0xb7f2c": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0xb7f2c>",
    "poll_symbol": ""
  },
  "0xb8138": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0xb8138>",
    "poll_symbol": ""
  },
  "0xb9010": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xb9010>",
    "poll_symbol": ""
  },
  "0xb9037": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0xb9037>",
    "poll_symbol": ""
  },
  "0xb903e": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0xb903e>",
    "poll_symbol": ""
  },
  "0xb9045": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xb9045>",
    "poll_symbol": ""
  },
  "0xb9266": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xb9266>",
    "poll_symbol": ""
  },
  "0xb9290": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xb9290>",
    "poll_symbol": ""
  },
  "0xb98d5": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0xb98d5>",
    "poll_symbol": ""
  },
  "0xc0361": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0xc0361>",
    "poll_symbol": ""
  },
  "0xc0400": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0xc0400>",
    "poll_symbol": ""
  },
  "0xc15a4": {
    "name": "{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>><0xc15a4>",
    "poll_symbol": ""
  },
  "0xc15b7": {
    "name": "{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>><0xc15b7>",
    "poll_symbol": ""
  },
  "0xc170d": {
    "name": "{closure_env#1}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0xc170d>",
    "poll_symbol": ""
  },
  "0xc1720": {
    "name": "{closure_env#1}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0xc1720>",
    "poll_symbol": ""
  },
  "0xc1733": {
    "name": "{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0xc1733>",
    "poll_symbol": ""
  },
  "0xc1751": {
    "name": "{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0xc1751>",
    "poll_symbol": ""
  },
  "0xc1774": {
    "name": "{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0xc1774>",
    "poll_symbol": ""
  },
  "0xc1792": {
    "name": "{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0xc1792>",
    "poll_symbol": ""
  },
  "0xc1a44": {
    "name": "{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0xc1a44>",
    "poll_symbol": ""
  },
  "0xc1a57": {
    "name": "{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0xc1a57>",
    "poll_symbol": ""
  },
  "0xc3b09": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0xc3b09>",
    "poll_symbol": ""
  },
  "0xc3b83": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0xc3b83>",
    "poll_symbol": ""
  },
  "0xc3bdd": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0xc3bdd>",
    "poll_symbol": ""
  },
  "0xc3c39": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0xc3c39>",
    "poll_symbol": ""
  },
  "0xc3cb3": {
    "name": "Pin<&mut core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0xc3cb3>",
    "poll_symbol": ""
  },
  "0xc3d0f": {
    "name": "Pin<&mut core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0xc3d0f>",
    "poll_symbol": ""
  },
  "0xc3e5a": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xc3e5a>",
    "poll_symbol": ""
  },
  "0xc3ed2": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xc3ed2>",
    "poll_symbol": ""
  },
  "0xc3ef0": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xc3ef0>",
    "poll_symbol": ""
  },
  "0xc3f0e": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xc3f0e>",
    "poll_symbol": ""
  },
  "0xc403a": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xc403a>",
    "poll_symbol": ""
  },
  "0xc4058": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xc4058>",
    "poll_symbol": ""
  },
  "0xc4431": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xc4431>",
    "poll_symbol": ""
  },
  "0xc449d": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xc449d>",
    "poll_symbol": ""
  },
  "0xc44af": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xc44af>",
    "poll_symbol": ""
  },
  "0xc44c1": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xc44c1>",
    "poll_symbol": ""
  },
  "0xc4667": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xc4667>",
    "poll_symbol": ""
  },
  "0xc4679": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xc4679>",
    "poll_symbol": ""
  },
  "0xc468b": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0xc468b>",
    "poll_symbol": ""
  },
  "0xc469d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xc469d>",
    "poll_symbol": ""
  },
  "0xc4caa": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xc4caa>",
    "poll_symbol": ""
  },
  "0xc4cdd": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xc4cdd>",
    "poll_symbol": ""
  },
  "0xc4e1c": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xc4e1c>",
    "poll_symbol": ""
  },
  "0xc4e58": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0xc4e58>",
    "poll_symbol": ""
  },
  "0xc4e76": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xc4e76>",
    "poll_symbol": ""
  },
  "0xc5b06": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0xc5b06>",
    "poll_symbol": ""
  },
  "0xc5bc9": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xc5bc9>",
    "poll_symbol": ""
  },
  "0xc630f": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0xc630f>",
    "poll_symbol": ""
  },
  "0xc7ae5": {
    "name": "{async_block_env#0}<0xc7ae5>",
    "poll_symbol": ""
  },
  "0xc8278": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xc8278>",
    "poll_symbol": ""
  },
  "0xc86c2": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xc86c2>",
    "poll_symbol": ""
  },
  "0xc8701": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xc8701>",
    "poll_symbol": ""
  },
  "0xc8896": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0xc8896>",
    "poll_symbol": ""
  },
  "0xc88d5": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0xc88d5>",
    "poll_symbol": ""
  },
  "0xc8914": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0xc8914>",
    "poll_symbol": ""
  },
  "0xc894a": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xc894a>",
    "poll_symbol": ""
  },
  "0xc8980": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0xc8980>",
    "poll_symbol": ""
  },
  "0xc89bf": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0xc89bf>",
    "poll_symbol": ""
  },
  "0xc8d6c": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xc8d6c>",
    "poll_symbol": ""
  },
  "0xc8dab": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xc8dab>",
    "poll_symbol": ""
  },
  "0xc8de1": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0xc8de1>",
    "poll_symbol": ""
  },
  "0xc8e20": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0xc8e20>",
    "poll_symbol": ""
  },
  "0xc97d3": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xc97d3>",
    "poll_symbol": ""
  },
  "0xc9945": {
    "name": "{async_fn_env#0}<&str><0xc9945>",
    "poll_symbol": ""
  },
  "0xc9bf3": {
    "name": "ResponseFuture<0xc9bf3>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0xc9cf8": {
    "name": "{async_fn_env#0}<0xc9cf8>",
    "poll_symbol": ""
  },
  "0xc9db4": {
    "name": "{async_fn_env#0}<0xc9db4>",
    "poll_symbol": ""
  },
  "0xc9ecc": {
    "name": "{async_fn_env#0}<0xc9ecc>",
    "poll_symbol": ""
  },
  "0xca680": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0xca680>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0xcab97": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xcab97>",
    "poll_symbol": ""
  },
  "0xcabbe": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0xcabbe>",
    "poll_symbol": ""
  },
  "0xcacb0": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0xcacb0>",
    "poll_symbol": ""
  },
  "0xcacb7": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xcacb7>",
    "poll_symbol": ""
  },
  "0xcaf4d": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0xcaf4d>",
    "poll_symbol": ""
  },
  "0xcb15f": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0xcb15f>",
    "poll_symbol": ""
  },
  "0xcb3c7": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xcb3c7>",
    "poll_symbol": ""
  },
  "0xcb3f1": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xcb3f1>",
    "poll_symbol": ""
  },
  "0xcbcca": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0xcbcca>",
    "poll_symbol": ""
  },
  "0xcbe7b": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0xcbe7b>",
    "poll_symbol": ""
  },
  "0xcbf00": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xcbf00>",
    "poll_symbol": ""
  },
  "0xcbf27": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0xcbf27>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xd2fd3": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0xd2fd3>",
    "poll_symbol": ""
  },
  "0xd3042": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0xd3042>",
    "poll_symbol": ""
  },
  "0xd3910": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xd3910>",
    "poll_symbol": ""
  },
  "0xd394f": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xd394f>",
    "poll_symbol": ""
  },
  "0xd3ae4": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0xd3ae4>",
    "poll_symbol": ""
  },
  "0xd3b23": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0xd3b23>",
    "poll_symbol": ""
  },
  "0xd3b62": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0xd3b62>",
    "poll_symbol": ""
  },
  "0xd3b98": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xd3b98>",
    "poll_symbol": ""
  },
  "0xd3bce": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0xd3bce>",
    "poll_symbol": ""
  },
  "0xd3c0d": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0xd3c0d>",
    "poll_symbol": ""
  },
  "0xd3fba": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xd3fba>",
    "poll_symbol": ""
  },
  "0xd3ff9": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xd3ff9>",
    "poll_symbol": ""
  },
  "0xd402f": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0xd402f>",
    "poll_symbol": ""
  },
  "0xd406e": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0xd406e>",
    "poll_symbol": ""
  },
  "0xd4605": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xd4605>",
    "poll_symbol": ""
  },
  "0xd4691": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xd4691>",
    "poll_symbol": ""
  },
  "0xd4834": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xd4834>",
    "poll_symbol": ""
  },
  "0xd4867": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xd4867>",
    "poll_symbol": ""
  },
  "0xd4937": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xd4937>",
    "poll_symbol": ""
  },
  "0xd4973": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0xd4973>",
    "poll_symbol": ""
  },
  "0xd4991": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xd4991>",
    "poll_symbol": ""
  },
  "0xd4c45": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xd4c45>",
    "poll_symbol": ""
  },
  "0xd4cbd": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xd4cbd>",
    "poll_symbol": ""
  },
  "0xd4cdb": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xd4cdb>",
    "poll_symbol": ""
  },
  "0xd4cf9": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xd4cf9>",
    "poll_symbol": ""
  },
  "0xd4e25": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xd4e25>",
    "poll_symbol": ""
  },
  "0xd4e43": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xd4e43>",
    "poll_symbol": ""
  },
  "0xd4f76": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xd4f76>",
    "poll_symbol": ""
  },
  "0xd4fe2": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xd4fe2>",
    "poll_symbol": ""
  },
  "0xd4ff4": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xd4ff4>",
    "poll_symbol": ""
  },
  "0xd5006": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xd5006>",
    "poll_symbol": ""
  },
  "0xd51ac": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xd51ac>",
    "poll_symbol": ""
  },
  "0xd51be": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xd51be>",
    "poll_symbol": ""
  },
  "0xd51d0": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0xd51d0>",
    "poll_symbol": ""
  },
  "0xd51e2": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xd51e2>",
    "poll_symbol": ""
  },
  "0xd58de": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0xd58de>",
    "poll_symbol": ""
  },
  "0xd59a1": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xd59a1>",
    "poll_symbol": ""
  },
  "0xd60e7": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0xd60e7>",
    "poll_symbol": ""
  },
  "0xd6b2e": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xd6b2e>",
    "poll_symbol": ""
  },
  "0xd6b55": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0xd6b55>",
    "poll_symbol": ""
  },
  "0xd6bc3": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0xd6bc3>",
    "poll_symbol": ""
  },
  "0xd6bca": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xd6bca>",
    "poll_symbol": ""
  },
  "0xd6e69": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0xd6e69>",
    "poll_symbol": ""
  },
  "0xd7036": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0xd7036>",
    "poll_symbol": ""
  },
  "0xd725f": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xd725f>",
    "poll_symbol": ""
  },
  "0xd7289": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xd7289>",
    "poll_symbol": ""
  },
  "0xd7eee": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0xd7eee>",
    "poll_symbol": ""
  },
  "0xdc167": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0xdc167>",
    "poll_symbol": ""
  },
  "0xdc17a": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}><0xdc17a>",
    "poll_symbol": ""
  },
  "0xdc64a": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}><0xdc64a>",
    "poll_symbol": ""
  },
  "0xdc673": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0xdc673>",
    "poll_symbol": ""
  },
  "0xe024a": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0xe024a>",
    "poll_symbol": ""
  },
  "0xe02e9": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0xe02e9>",
    "poll_symbol": ""
  },
  "0xe09ac": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0xe09ac>",
    "poll_symbol": ""
  },
  "0xe09e8": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0xe09e8>",
    "poll_symbol": ""
  },
  "0xe0a42": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0xe0a42>",
    "poll_symbol": ""
  },
  "0xe0a60": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0xe0a60>",
    "poll_symbol": ""
  },
  "0xe0b6d": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xe0b6d>",
    "poll_symbol": ""
  },
  "0xe0be5": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xe0be5>",
    "poll_symbol": ""
  },
  "0xe0c03": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xe0c03>",
    "poll_symbol": ""
  },
  "0xe0c21": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xe0c21>",
    "poll_symbol": ""
  },
  "0xe0d4d": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xe0d4d>",
    "poll_symbol": ""
  },
  "0xe0d6b": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xe0d6b>",
    "poll_symbol": ""
  },
  "0xe1144": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xe1144>",
    "poll_symbol": ""
  },
  "0xe11b0": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xe11b0>",
    "poll_symbol": ""
  },
  "0xe11c2": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xe11c2>",
    "poll_symbol": ""
  },
  "0xe11d4": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xe11d4>",
    "poll_symbol": ""
  },
  "0xe137a": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xe137a>",
    "poll_symbol": ""
  },
  "0xe138c": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xe138c>",
    "poll_symbol": ""
  },
  "0xe139e": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0xe139e>",
    "poll_symbol": ""
  },
  "0xe13b0": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xe13b0>",
    "poll_symbol": ""
  },
  "0xe1987": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xe1987>",
    "poll_symbol": ""
  },
  "0xe19ba": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xe19ba>",
    "poll_symbol": ""
  },
  "0xe1af9": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xe1af9>",
    "poll_symbol": ""
  },
  "0xe1b35": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0xe1b35>",
    "poll_symbol": ""
  },
  "0xe1b53": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xe1b53>",
    "poll_symbol": ""
  },
  "0xe29b1": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0xe29b1>",
    "poll_symbol": ""
  },
  "0xe2a74": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xe2a74>",
    "poll_symbol": ""
  },
  "0xe31ba": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0xe31ba>",
    "poll_symbol": ""
  },
  "0xe4829": {
    "name": "{async_block_env#0}<0xe4829>",
    "poll_symbol": ""
  },
  "0xe4fbc": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xe4fbc>",
    "poll_symbol": ""
  },
  "0xe5406": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xe5406>",
    "poll_symbol": ""
  },
  "0xe5445": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xe5445>",
    "poll_symbol": ""
  },
  "0xe55da": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0xe55da>",
    "poll_symbol": ""
  },
  "0xe5619": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0xe5619>",
    "poll_symbol": ""
  },
  "0xe5658": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0xe5658>",
    "poll_symbol": ""
  },
  "0xe568e": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xe568e>",
    "poll_symbol": ""
  },
  "0xe56c4": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0xe56c4>",
    "poll_symbol": ""
  },
  "0xe5703": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0xe5703>",
    "poll_symbol": ""
  },
  "0xe5ab0": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xe5ab0>",
    "poll_symbol": ""
  },
  "0xe5aef": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xe5aef>",
    "poll_symbol": ""
  },
  "0xe5b25": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0xe5b25>",
    "poll_symbol": ""
  },
  "0xe5b64": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0xe5b64>",
    "poll_symbol": ""
  },
  "0xe6517": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xe6517>",
    "poll_symbol": ""
  },
  "0xe6689": {
    "name": "{async_fn_env#0}<&str><0xe6689>",
    "poll_symbol": ""
  },
  "0xe6937": {
    "name": "ResponseFuture<0xe6937>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0xe6a3c": {
    "name": "{async_fn_env#0}<0xe6a3c>",
    "poll_symbol": ""
  },
  "0xe6af8": {
    "name": "{async_fn_env#0}<0xe6af8>",
    "poll_symbol": ""
  },
  "0xe6c10": {
    "name": "{async_fn_env#0}<0xe6c10>",
    "poll_symbol": ""
  },
  "0xe73c4": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0xe73c4>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0xe78db": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xe78db>",
    "poll_symbol": ""
  },
  "0xe7902": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0xe7902>",
    "poll_symbol": ""
  },
  "0xe79f4": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0xe79f4>",
    "poll_symbol": ""
  },
  "0xe79fb": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xe79fb>",
    "poll_symbol": ""
  },
  "0xe7c91": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0xe7c91>",
    "poll_symbol": ""
  },
  "0xe7ea3": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0xe7ea3>",
    "poll_symbol": ""
  },
  "0xe810b": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xe810b>",
    "poll_symbol": ""
  },
  "0xe8135": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xe8135>",
    "poll_symbol": ""
  },
  "0xe8a0e": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0xe8a0e>",
    "poll_symbol": ""
  },
  "0xe8bbf": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0xe8bbf>",
    "poll_symbol": ""
  },
  "0xe8c44": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xe8c44>",
    "poll_symbol": ""
  },
  "0xe8c6b": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0xe8c6b>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xe971e": {
    "name": "{async_fn_env#0}<&str><0xe971e>",
    "poll_symbol": ""
  },
  "0xe99cc": {
    "name": "ResponseFuture<0xe99cc>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0xe9ad1": {
    "name": "{async_fn_env#0}<0xe9ad1>",
    "poll_symbol": ""
  },
  "0xe9b8d": {
    "name": "{async_fn_env#0}<0xe9b8d>",
    "poll_symbol": ""
  },
  "0xe9ca5": {
    "name": "{async_fn_env#0}<0xe9ca5>",
    "poll_symbol": ""
  },
  "0xeb246": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0xeb246>",
    "poll_symbol": ""
  },
  "0xeb309": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xeb309>",
    "poll_symbol": ""
  },
  "0xeba4f": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0xeba4f>",
    "poll_symbol": ""
  },
  "0xec7bb": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xec7bb>",
    "poll_symbol": ""
  },
  "0xec833": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xec833>",
    "poll_symbol": ""
  },
  "0xec851": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xec851>",
    "poll_symbol": ""
  },
  "0xec86f": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xec86f>",
    "poll_symbol": ""
  },
  "0xec99b": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xec99b>",
    "poll_symbol": ""
  },
  "0xec9b9": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xec9b9>",
    "poll_symbol": ""
  },
  "0xecd74": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xecd74>",
    "poll_symbol": ""
  },
  "0xecde0": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xecde0>",
    "poll_symbol": ""
  },
  "0xecdf2": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xecdf2>",
    "poll_symbol": ""
  },
  "0xece04": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xece04>",
    "poll_symbol": ""
  },
  "0xecfaa": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xecfaa>",
    "poll_symbol": ""
  },
  "0xecfbc": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xecfbc>",
    "poll_symbol": ""
  },
  "0xecfce": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0xecfce>",
    "poll_symbol": ""
  },
  "0xecfe0": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xecfe0>",
    "poll_symbol": ""
  },
  "0xed9c1": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xed9c1>",
    "poll_symbol": ""
  },
  "0xed9f4": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xed9f4>",
    "poll_symbol": ""
  },
  "0xedaf7": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xedaf7>",
    "poll_symbol": ""
  },
  "0xedb33": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0xedb33>",
    "poll_symbol": ""
  },
  "0xedb51": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xedb51>",
    "poll_symbol": ""
  },
  "0xee0a9": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0xee0a9>",
    "poll_symbol": ""
  },
  "0xeea32": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xeea32>",
    "poll_symbol": ""
  },
  "0xeef45": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xeef45>",
    "poll_symbol": ""
  },
  "0xeef84": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xeef84>",
    "poll_symbol": ""
  },
  "0xef119": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0xef119>",
    "poll_symbol": ""
  },
  "0xef158": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0xef158>",
    "poll_symbol": ""
  },
  "0xef197": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0xef197>",
    "poll_symbol": ""
  },
  "0xef1cd": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xef1cd>",
    "poll_symbol": ""
  },
  "0xef203": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0xef203>",
    "poll_symbol": ""
  },
  "0xef242": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0xef242>",
    "poll_symbol": ""
  },
  "0xef5ef": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xef5ef>",
    "poll_symbol": ""
  },
  "0xef62e": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xef62e>",
    "poll_symbol": ""
  },
  "0xef664": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0xef664>",
    "poll_symbol": ""
  },
  "0xef6a3": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0xef6a3>",
    "poll_symbol": ""
  },
  "0xeffc6": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xeffc6>",
    "poll_symbol": ""
  },
  "0xf1b48": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0xf1b48>",
    "poll_symbol": ""
  },
  "0xf1be7": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0xf1be7>",
    "poll_symbol": ""
  },
  "0xf3f16": {
    "name": "{async_block_env#0}<0xf3f16>",
    "poll_symbol": ""
  },
  "0xf4299": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0xf4299>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0xf4740": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xf4740>",
    "poll_symbol": ""
  },
  "0xf4767": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0xf4767>",
    "poll_symbol": ""
  },
  "0xf4859": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0xf4859>",
    "poll_symbol": ""
  },
  "0xf4860": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xf4860>",
    "poll_symbol": ""
  },
  "0xf4af6": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0xf4af6>",
    "poll_symbol": ""
  },
  "0xf4d08": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0xf4d08>",
    "poll_symbol": ""
  },
  "0xf4f63": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xf4f63>",
    "poll_symbol": ""
  },
  "0xf4f8d": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xf4f8d>",
    "poll_symbol": ""
  },
  "0xf5866": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0xf5866>",
    "poll_symbol": ""
  },
  "0xf58f5": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0xf58f5>",
    "poll_symbol": ""
  },
  "0xf597a": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xf597a>",
    "poll_symbol": ""
  },
  "0xf59a1": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0xf59a1>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xf66f4": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>><0xf66f4>",
    "poll_symbol": ""
  },
  "0xf671d": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>><0xf671d>",
    "poll_symbol": ""
  },
  "0xf674c": {
    "name": "{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0xf674c>",
    "poll_symbol": ""
  },
  "0xf675f": {
    "name": "{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0xf675f>",
    "poll_symbol": ""
  },
  "0xfa75a": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0xfa75a>",
    "poll_symbol": ""
  },
  "0xfac29": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0xfac29>",
    "poll_symbol": ""
  },
  "0xfb7c5": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xfb7c5>",
    "poll_symbol": ""
  },
  "0xfb804": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xfb804>",
    "poll_symbol": ""
  },
  "0xfb924": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0xfb924>",
    "poll_symbol": ""
  },
  "0xfb963": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0xfb963>",
    "poll_symbol": ""
  },
  "0xfb9a2": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0xfb9a2>",
    "poll_symbol": ""
  },
  "0xfb9d8": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xfb9d8>",
    "poll_symbol": ""
  },
  "0xfba0e": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0xfba0e>",
    "poll_symbol": ""
  },
  "0xfba4d": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0xfba4d>",
    "poll_symbol": ""
  },
  "0xfbdfa": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xfbdfa>",
    "poll_symbol": ""
  },
  "0xfbe39": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xfbe39>",
    "poll_symbol": ""
  },
  "0xfbe6f": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0xfbe6f>",
    "poll_symbol": ""
  },
  "0xfbeae": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0xfbeae>",
    "poll_symbol": ""
  },
  "0xfc7ab": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xfc7ab>",
    "poll_symbol": ""
  },
  "0xfc900": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xfc900>",
    "poll_symbol": ""
  },
  "0xfcf13": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xfcf13>",
    "poll_symbol": ""
  },
  "0xfcf31": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0xfcf31>",
    "poll_symbol": ""
  },
  "0xfcf4f": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xfcf4f>",
    "poll_symbol": ""
  },
  "0xfd1e2": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xfd1e2>",
    "poll_symbol": ""
  },
  "0xfd200": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xfd200>",
    "poll_symbol": ""
  },
  "0xfd65f": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xfd65f>",
    "poll_symbol": ""
  },
  "0xfd6b9": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xfd6b9>",
    "poll_symbol": ""
  },
  "0xfd6cb": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xfd6cb>",
    "poll_symbol": ""
  },
  "0xfd6dd": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xfd6dd>",
    "poll_symbol": ""
  },
  "0xfd869": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xfd869>",
    "poll_symbol": ""
  },
  "0xfd87b": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xfd87b>",
    "poll_symbol": ""
  },
  "0xfd88d": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0xfd88d>",
    "poll_symbol": ""
  },
  "0xfd89f": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xfd89f>",
    "poll_symbol": ""
  },
  "0xfe933": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0xfe933>",
    "poll_symbol": ""
  },
  "0xfe9f6": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xfe9f6>",
    "poll_symbol": ""
  },
  "0xff0d8": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0xff0d8>",
    "poll_symbol": ""
  },
  "0xff935": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xff935>",
    "poll_symbol": ""
  },
  "0xff98f": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xff98f>",
    "poll_symbol": ""
  },
  "0xff9ad": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xff9ad>",
    "poll_symbol": ""
  },
  "0xff9cb": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xff9cb>",
    "poll_symbol": ""
  },
  "0xffaf7": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xffaf7>",
    "poll_symbol": ""
  },
  "0xffb15": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xffb15>",
    "poll_symbol": ""
  },
  "0x10020b": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0x10020b>",
    "poll_symbol": ""
  },
  "0x100247": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x100247>",
    "poll_symbol": ""
  },
  "0x100283": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x100283>",
    "poll_symbol": ""
  },
  "0x1002a1": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x1002a1>",
    "poll_symbol": ""
  },
  "0x100c2b": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x100c2b>",
    "poll_symbol": ""
  },
  "0x100e37": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x100e37>",
    "poll_symbol": ""
  },
  "0x1010ab": {
    "name": "{async_block_env#0}<0x1010ab>",
    "poll_symbol": ""
  },
  "0x1011ef": {
    "name": "{async_fn_env#0}<&str><0x1011ef>",
    "poll_symbol": ""
  },
  "0x10149d": {
    "name": "ResponseFuture<0x10149d>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x1015a2": {
    "name": "{async_fn_env#0}<0x1015a2>",
    "poll_symbol": ""
  },
  "0x10165e": {
    "name": "{async_fn_env#0}<0x10165e>",
    "poll_symbol": ""
  },
  "0x101776": {
    "name": "{async_fn_env#0}<0x101776>",
    "poll_symbol": ""
  },
  "0x101f08": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x101f08>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x1023dd": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x1023dd>",
    "poll_symbol": ""
  },
  "0x102404": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x102404>",
    "poll_symbol": ""
  },
  "0x1024f6": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x1024f6>",
    "poll_symbol": ""
  },
  "0x1024fd": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x1024fd>",
    "poll_symbol": ""
  },
  "0x1027ce": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1027ce>",
    "poll_symbol": ""
  },
  "0x1027f8": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1027f8>",
    "poll_symbol": ""
  },
  "0x102e4a": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x102e4a>",
    "poll_symbol": ""
  },
  "0x102ffb": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x102ffb>",
    "poll_symbol": ""
  },
  "0x103080": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x103080>",
    "poll_symbol": ""
  },
  "0x1030a7": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x1030a7>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x103c71": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x103c71>",
    "poll_symbol": ""
  },
  "0x103c8f": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}><0x103c8f>",
    "poll_symbol": ""
  },
  "0x107652": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x107652>",
    "poll_symbol": ""
  },
  "0x107bb7": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x107bb7>",
    "poll_symbol": ""
  },
  "0x107f2a": {
    "name": "PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0x107f2a>",
    "poll_symbol": ""
  },
  "0x107f48": {
    "name": "PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>><0x107f48>",
    "poll_symbol": ""
  },
  "0x108763": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x108763>",
    "poll_symbol": ""
  },
  "0x108826": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x108826>",
    "poll_symbol": ""
  },
  "0x108f0b": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x108f0b>",
    "poll_symbol": ""
  },
  "0x10a00b": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x10a00b>",
    "poll_symbol": ""
  },
  "0x10a029": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x10a029>",
    "poll_symbol": ""
  },
  "0x10a065": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x10a065>",
    "poll_symbol": ""
  },
  "0x10a0bf": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0x10a0bf>",
    "poll_symbol": ""
  },
  "0x10a0dd": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>><0x10a0dd>",
    "poll_symbol": ""
  },
  "0x10a0fb": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>><0x10a0fb>",
    "poll_symbol": ""
  },
  "0x10a20f": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x10a20f>",
    "poll_symbol": ""
  },
  "0x10a22d": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x10a22d>",
    "poll_symbol": ""
  },
  "0x10a24b": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x10a24b>",
    "poll_symbol": ""
  },
  "0x10a77b": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x10a77b>",
    "poll_symbol": ""
  },
  "0x10a799": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x10a799>",
    "poll_symbol": ""
  },
  "0x10a8e6": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x10a8e6>",
    "poll_symbol": ""
  },
  "0x10a95e": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x10a95e>",
    "poll_symbol": ""
  },
  "0x10a97c": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x10a97c>",
    "poll_symbol": ""
  },
  "0x10a99a": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x10a99a>",
    "poll_symbol": ""
  },
  "0x10aaa8": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x10aaa8>",
    "poll_symbol": ""
  },
  "0x10aac6": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x10aac6>",
    "poll_symbol": ""
  },
  "0x10aedd": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x10aedd>",
    "poll_symbol": ""
  },
  "0x10af49": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x10af49>",
    "poll_symbol": ""
  },
  "0x10af5b": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x10af5b>",
    "poll_symbol": ""
  },
  "0x10af6d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x10af6d>",
    "poll_symbol": ""
  },
  "0x10b0e7": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x10b0e7>",
    "poll_symbol": ""
  },
  "0x10b0f9": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x10b0f9>",
    "poll_symbol": ""
  },
  "0x10b10b": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x10b10b>",
    "poll_symbol": ""
  },
  "0x10b11d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x10b11d>",
    "poll_symbol": ""
  },
  "0x10bcc5": {
    "name": "{async_block_env#0}<0x10bcc5>",
    "poll_symbol": ""
  },
  "0x10c425": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x10c425>",
    "poll_symbol": ""
  },
  "0x10c809": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x10c809>",
    "poll_symbol": ""
  },
  "0x10c848": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x10c848>",
    "poll_symbol": ""
  },
  "0x10c9dd": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x10c9dd>",
    "poll_symbol": ""
  },
  "0x10ca1c": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x10ca1c>",
    "poll_symbol": ""
  },
  "0x10ca5b": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x10ca5b>",
    "poll_symbol": ""
  },
  "0x10ca91": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x10ca91>",
    "poll_symbol": ""
  },
  "0x10cac7": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x10cac7>",
    "poll_symbol": ""
  },
  "0x10cb06": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x10cb06>",
    "poll_symbol": ""
  },
  "0x10ceb3": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x10ceb3>",
    "poll_symbol": ""
  },
  "0x10cef2": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x10cef2>",
    "poll_symbol": ""
  },
  "0x10cf28": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x10cf28>",
    "poll_symbol": ""
  },
  "0x10cf67": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x10cf67>",
    "poll_symbol": ""
  },
  "0x10d8a5": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x10d8a5>",
    "poll_symbol": ""
  },
  "0x10d9d1": {
    "name": "{async_fn_env#0}<&str><0x10d9d1>",
    "poll_symbol": ""
  },
  "0x10dc7f": {
    "name": "ResponseFuture<0x10dc7f>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x10dd84": {
    "name": "{async_fn_env#0}<0x10dd84>",
    "poll_symbol": ""
  },
  "0x10de40": {
    "name": "{async_fn_env#0}<0x10de40>",
    "poll_symbol": ""
  },
  "0x10df58": {
    "name": "{async_fn_env#0}<0x10df58>",
    "poll_symbol": ""
  },
  "0x10e6fe": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x10e6fe>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x10ebed": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x10ebed>",
    "poll_symbol": ""
  },
  "0x10ec14": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x10ec14>",
    "poll_symbol": ""
  },
  "0x10ed06": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x10ed06>",
    "poll_symbol": ""
  },
  "0x10ed0d": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x10ed0d>",
    "poll_symbol": ""
  },
  "0x10efa3": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x10efa3>",
    "poll_symbol": ""
  },
  "0x10f1b5": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x10f1b5>",
    "poll_symbol": ""
  },
  "0x10f3d7": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x10f3d7>",
    "poll_symbol": ""
  },
  "0x10f401": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x10f401>",
    "poll_symbol": ""
  },
  "0x10fa54": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x10fa54>",
    "poll_symbol": ""
  },
  "0x10fc05": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x10fc05>",
    "poll_symbol": ""
  },
  "0x10fc8a": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x10fc8a>",
    "poll_symbol": ""
  },
  "0x10fcb1": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x10fcb1>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x110fa8": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>><0x110fa8>",
    "poll_symbol": ""
  },
  "0x110fd1": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>><0x110fd1>",
    "poll_symbol": ""
  },
  "0x111000": {
    "name": "{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0x111000>",
    "poll_symbol": ""
  },
  "0x111013": {
    "name": "{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0x111013>",
    "poll_symbol": ""
  },
  "0x112b07": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>><0x112b07>",
    "poll_symbol": ""
  },
  "0x112b1a": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure#0}::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>><0x112b1a>",
    "poll_symbol": ""
  },
  "0x112b2d": {
    "name": "{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>><0x112b2d>",
    "poll_symbol": ""
  },
  "0x112b40": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure#0}::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>><0x112b40>",
    "poll_symbol": ""
  },
  "0x112b53": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>>><0x112b53>",
    "poll_symbol": ""
  },
  "0x112b66": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>><0x112b66>",
    "poll_symbol": ""
  },
  "0x112b79": {
    "name": "{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>><0x112b79>",
    "poll_symbol": ""
  },
  "0x112b8c": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0x112b8c>",
    "poll_symbol": ""
  },
  "0x1150ff": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x1150ff>",
    "poll_symbol": ""
  },
  "0x11567e": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x11567e>",
    "poll_symbol": ""
  },
  "0x1157c4": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1157c4>",
    "poll_symbol": ""
  },
  "0x1160fc": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x1160fc>",
    "poll_symbol": ""
  },
  "0x11613b": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x11613b>",
    "poll_symbol": ""
  },
  "0x11625b": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x11625b>",
    "poll_symbol": ""
  },
  "0x11629a": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x11629a>",
    "poll_symbol": ""
  },
  "0x1162d9": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x1162d9>",
    "poll_symbol": ""
  },
  "0x11630f": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x11630f>",
    "poll_symbol": ""
  },
  "0x116345": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x116345>",
    "poll_symbol": ""
  },
  "0x116384": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x116384>",
    "poll_symbol": ""
  },
  "0x116731": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x116731>",
    "poll_symbol": ""
  },
  "0x116770": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x116770>",
    "poll_symbol": ""
  },
  "0x1167a6": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x1167a6>",
    "poll_symbol": ""
  },
  "0x1167e5": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x1167e5>",
    "poll_symbol": ""
  },
  "0x117293": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x117293>",
    "poll_symbol": ""
  },
  "0x11776a": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x11776a>",
    "poll_symbol": ""
  },
  "0x117788": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x117788>",
    "poll_symbol": ""
  },
  "0x1177a6": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1177a6>",
    "poll_symbol": ""
  },
  "0x117dcf": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x117dcf>",
    "poll_symbol": ""
  },
  "0x117ded": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x117ded>",
    "poll_symbol": ""
  },
  "0x118180": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x118180>",
    "poll_symbol": ""
  },
  "0x1181da": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1181da>",
    "poll_symbol": ""
  },
  "0x1181ec": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1181ec>",
    "poll_symbol": ""
  },
  "0x1181fe": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x1181fe>",
    "poll_symbol": ""
  },
  "0x11839c": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x11839c>",
    "poll_symbol": ""
  },
  "0x1183ae": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1183ae>",
    "poll_symbol": ""
  },
  "0x1183c0": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x1183c0>",
    "poll_symbol": ""
  },
  "0x1183d2": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1183d2>",
    "poll_symbol": ""
  },
  "0x11941c": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x11941c>",
    "poll_symbol": ""
  },
  "0x1194df": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1194df>",
    "poll_symbol": ""
  },
  "0x119bc1": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x119bc1>",
    "poll_symbol": ""
  },
  "0x11a691": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x11a691>",
    "poll_symbol": ""
  },
  "0x11a6eb": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x11a6eb>",
    "poll_symbol": ""
  },
  "0x11a709": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x11a709>",
    "poll_symbol": ""
  },
  "0x11a727": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x11a727>",
    "poll_symbol": ""
  },
  "0x11a853": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x11a853>",
    "poll_symbol": ""
  },
  "0x11a871": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x11a871>",
    "poll_symbol": ""
  },
  "0x11b07c": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x11b07c>",
    "poll_symbol": ""
  },
  "0x11b09a": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x11b09a>",
    "poll_symbol": ""
  },
  "0x11b0d6": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x11b0d6>",
    "poll_symbol": ""
  },
  "0x11b112": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0x11b112>",
    "poll_symbol": ""
  },
  "0x11baa3": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x11baa3>",
    "poll_symbol": ""
  },
  "0x11bcaf": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x11bcaf>",
    "poll_symbol": ""
  },
  "0x11be58": {
    "name": "{async_block_env#0}<0x11be58>",
    "poll_symbol": ""
  },
  "0x11bf9c": {
    "name": "{async_fn_env#0}<&str><0x11bf9c>",
    "poll_symbol": ""
  },
  "0x11c24a": {
    "name": "ResponseFuture<0x11c24a>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x11c34f": {
    "name": "{async_fn_env#0}<0x11c34f>",
    "poll_symbol": ""
  },
  "0x11c40b": {
    "name": "{async_fn_env#0}<0x11c40b>",
    "poll_symbol": ""
  },
  "0x11c523": {
    "name": "{async_fn_env#0}<0x11c523>",
    "poll_symbol": ""
  },
  "0x11ccb5": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x11ccb5>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x11d170": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x11d170>",
    "poll_symbol": ""
  },
  "0x11d197": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x11d197>",
    "poll_symbol": ""
  },
  "0x11d289": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x11d289>",
    "poll_symbol": ""
  },
  "0x11d290": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x11d290>",
    "poll_symbol": ""
  },
  "0x11d561": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x11d561>",
    "poll_symbol": ""
  },
  "0x11d58b": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x11d58b>",
    "poll_symbol": ""
  },
  "0x11dbdd": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x11dbdd>",
    "poll_symbol": ""
  },
  "0x11dd8e": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x11dd8e>",
    "poll_symbol": ""
  },
  "0x11de13": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x11de13>",
    "poll_symbol": ""
  },
  "0x11de3a": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x11de3a>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x12310b": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x12310b>",
    "poll_symbol": ""
  },
  "0x1231aa": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x1231aa>",
    "poll_symbol": ""
  },
  "0x125533": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x125533>",
    "poll_symbol": ""
  },
  "0x125566": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x125566>",
    "poll_symbol": ""
  },
  "0x125669": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x125669>",
    "poll_symbol": ""
  },
  "0x1256a5": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x1256a5>",
    "poll_symbol": ""
  },
  "0x1256c3": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1256c3>",
    "poll_symbol": ""
  },
  "0x125ca1": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x125ca1>",
    "poll_symbol": ""
  },
  "0x125d19": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x125d19>",
    "poll_symbol": ""
  },
  "0x125d37": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x125d37>",
    "poll_symbol": ""
  },
  "0x125d55": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x125d55>",
    "poll_symbol": ""
  },
  "0x125e81": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x125e81>",
    "poll_symbol": ""
  },
  "0x125e9f": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x125e9f>",
    "poll_symbol": ""
  },
  "0x126248": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x126248>",
    "poll_symbol": ""
  },
  "0x1262b4": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1262b4>",
    "poll_symbol": ""
  },
  "0x1262c6": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1262c6>",
    "poll_symbol": ""
  },
  "0x1262d8": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x1262d8>",
    "poll_symbol": ""
  },
  "0x12647e": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x12647e>",
    "poll_symbol": ""
  },
  "0x126490": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x126490>",
    "poll_symbol": ""
  },
  "0x1264a2": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x1264a2>",
    "poll_symbol": ""
  },
  "0x1264b4": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1264b4>",
    "poll_symbol": ""
  },
  "0x126eec": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x126eec>",
    "poll_symbol": ""
  },
  "0x126faf": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x126faf>",
    "poll_symbol": ""
  },
  "0x1276f5": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x1276f5>",
    "poll_symbol": ""
  },
  "0x128458": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x128458>",
    "poll_symbol": ""
  },
  "0x128c59": {
    "name": "ResponseFuture<0x128c59>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x12941b": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x12941b>",
    "poll_symbol": ""
  },
  "0x12945a": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x12945a>",
    "poll_symbol": ""
  },
  "0x1295ef": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x1295ef>",
    "poll_symbol": ""
  },
  "0x12962e": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x12962e>",
    "poll_symbol": ""
  },
  "0x12966d": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x12966d>",
    "poll_symbol": ""
  },
  "0x1296a3": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1296a3>",
    "poll_symbol": ""
  },
  "0x1296d9": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x1296d9>",
    "poll_symbol": ""
  },
  "0x129718": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x129718>",
    "poll_symbol": ""
  },
  "0x129ac5": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x129ac5>",
    "poll_symbol": ""
  },
  "0x129b04": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x129b04>",
    "poll_symbol": ""
  },
  "0x129b3a": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x129b3a>",
    "poll_symbol": ""
  },
  "0x129b79": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x129b79>",
    "poll_symbol": ""
  },
  "0x12a9dc": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x12a9dc>",
    "poll_symbol": ""
  },
  "0x12ab67": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x12ab67>",
    "poll_symbol": ""
  },
  "0x12ae72": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x12ae72>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x12b389": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x12b389>",
    "poll_symbol": ""
  },
  "0x12b3b0": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x12b3b0>",
    "poll_symbol": ""
  },
  "0x12b41e": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x12b41e>",
    "poll_symbol": ""
  },
  "0x12b425": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x12b425>",
    "poll_symbol": ""
  },
  "0x12b6c4": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x12b6c4>",
    "poll_symbol": ""
  },
  "0x12b8d6": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x12b8d6>",
    "poll_symbol": ""
  },
  "0x12bb3e": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x12bb3e>",
    "poll_symbol": ""
  },
  "0x12bb68": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x12bb68>",
    "poll_symbol": ""
  },
  "0x12c441": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x12c441>",
    "poll_symbol": ""
  },
  "0x12c6bc": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x12c6bc>",
    "poll_symbol": ""
  },
  "0x12c741": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x12c741>",
    "poll_symbol": ""
  },
  "0x12c768": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x12c768>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x12f658": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x12f658>",
    "poll_symbol": ""
  },
  "0x12f68b": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x12f68b>",
    "poll_symbol": ""
  },
  "0x12f76d": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x131127": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x131127>",
    "poll_symbol": ""
  },
  "0x131145": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x131145>",
    "poll_symbol": ""
  },
  "0x131163": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x131163>",
    "poll_symbol": ""
  },
  "0x131387": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x131387>",
    "poll_symbol": ""
  },
  "0x131402": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x131402>",
    "poll_symbol": ""
  },
  "0x13147d": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x13147d>",
    "poll_symbol": ""
  },
  "0x1317f6": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>>",
    "poll_symbol": ""
  },
  "0x133bb8": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x133bb8>",
    "poll_symbol": ""
  },
  "0x133bf4": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x133bf4>",
    "poll_symbol": ""
  },
  "0x133c12": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x133c12>",
    "poll_symbol": ""
  },
  "0x133e31": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x1341f1": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x13422d": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x134305": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x134305>",
    "poll_symbol": ""
  },
  "0x134317": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x134317>",
    "poll_symbol": ""
  },
  "0x134329": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x134329>",
    "poll_symbol": ""
  },
  "0x1344cf": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1344cf>",
    "poll_symbol": ""
  },
  "0x1344e1": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1344e1>",
    "poll_symbol": ""
  },
  "0x1344f3": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x1344f3>",
    "poll_symbol": ""
  },
  "0x134505": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x134505>",
    "poll_symbol": ""
  },
  "0x134517": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x134517>",
    "poll_symbol": ""
  },
  "0x134649": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>>",
    "poll_symbol": ""
  },
  "0x1350c3": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x1350c3>",
    "poll_symbol": ""
  },
  "0x135186": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x135186>",
    "poll_symbol": ""
  },
  "0x135995": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x135995>",
    "poll_symbol": ""
  },
  "0x136445": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": ""
  },
  "0x1364a6": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>>",
    "poll_symbol": ""
  },
  "0x136569": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x137893": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1378b1": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x13790b": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x137929": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x137947": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>>",
    "poll_symbol": ""
  },
  "0x137965": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>>",
    "poll_symbol": ""
  },
  "0x137983": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x1379a1": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x1379bf": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1379dd": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1379fb": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x137a19": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x137a37": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>>",
    "poll_symbol": ""
  },
  "0x137a55": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>>",
    "poll_symbol": ""
  },
  "0x137a73": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x137a91": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x137aaf": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x137acd": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x137aeb": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x137b09": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x137b27": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x137b45": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x137b63": {
    "name": "Pin<&mut futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x137b81": {
    "name": "Pin<&mut futures_util::future::future::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x137b9f": {
    "name": "Pin<&mut futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x137bbd": {
    "name": "Pin<&mut futures_util::future::future::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x137bdb": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x137bf9": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x139135": {
    "name": "Poll<core::result::Result<futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::Error>>",
    "poll_symbol": ""
  },
  "0x139ae8": {
    "name": "Result<futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::Error>",
    "poll_symbol": ""
  },
  "0x13b430": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x13b430>",
    "poll_symbol": ""
  },
  "0x13b4ff": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x13b4ff>",
    "poll_symbol": ""
  },
  "0x13cf21": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>",
    "poll_symbol": ""
  },
  "0x13d7ef": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x13d817": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h9f5b4f64f11deecbE"
  },
  "0x13e625": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>",
    "poll_symbol": ""
  },
  "0x13ebe2": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>",
    "poll_symbol": ""
  },
  "0x13ed7b": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body>",
    "poll_symbol": ""
  },
  "0x13ef00": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>",
    "poll_symbol": ""
  },
  "0x13f091": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x13f091>",
    "poll_symbol": ""
  },
  "0x141874": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>>",
    "poll_symbol": ""
  },
  "0x141984": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>>",
    "poll_symbol": ""
  },
  "0x141a6b": {
    "name": "ResponseFuture<0x141a6b>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x142476": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x142504": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x142592": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x1425d2": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x142611": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x14265c": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x14269c": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1426db": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x14271b": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x14275a": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x142778": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x1427b8": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x142a83": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x142aaa": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x142ad1": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x142af8": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1437f5": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x1437f5>",
    "poll_symbol": ""
  },
  "0x143813": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x143813>",
    "poll_symbol": ""
  },
  "0x144510": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x144510>",
    "poll_symbol": ""
  },
  "0x144be5": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x144be5>",
    "poll_symbol": ""
  },
  "0x144fd2": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x144fd2>",
    "poll_symbol": ""
  },
  "0x145011": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x145011>",
    "poll_symbol": ""
  },
  "0x145050": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x145050>",
    "poll_symbol": ""
  },
  "0x145086": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x145086>",
    "poll_symbol": ""
  },
  "0x1450bc": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x1450bc>",
    "poll_symbol": ""
  },
  "0x1450fb": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x1450fb>",
    "poll_symbol": ""
  },
  "0x14565d": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x14565d>",
    "poll_symbol": ""
  },
  "0x145707": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x145707>",
    "poll_symbol": ""
  },
  "0x14573d": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x14573d>",
    "poll_symbol": ""
  },
  "0x1457e7": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x1457e7>",
    "poll_symbol": ""
  },
  "0x14581d": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x14581d>",
    "poll_symbol": ""
  },
  "0x1458a8": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x1458a8>",
    "poll_symbol": ""
  },
  "0x145f49": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x145ff3": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x14d132": {
    "name": "Weak<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, &alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x14d2f9": {
    "name": "Weak<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), &alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x14d354": {
    "name": "Weak<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, &alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x14d51b": {
    "name": "Weak<futures_channel::oneshot::Inner<core::convert::Infallible>, &alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x14f26b": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x14f2e8": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x14f369": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x14f369>",
    "poll_symbol": ""
  },
  "0x14f3eb": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x14f46e": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x14f4f1": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x14f4f1>",
    "poll_symbol": ""
  },
  "0x14f574": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x14f5f7": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x14f67a": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x14f6f9": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x14f778": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x14f7f7": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x14f876": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>",
    "poll_symbol": ""
  },
  "0x14f8f5": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>",
    "poll_symbol": ""
  },
  "0x14f975": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x14f975>",
    "poll_symbol": ""
  },
  "0x14f9f2": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x14f9f2>",
    "poll_symbol": ""
  },
  "0x14fa6f": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x14fa6f>",
    "poll_symbol": ""
  },
  "0x14faec": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x14faec>",
    "poll_symbol": ""
  },
  "0x14fb69": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x14fb69>",
    "poll_symbol": ""
  },
  "0x14fbe5": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x14fbe5>",
    "poll_symbol": ""
  },
  "0x14fc61": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x14fc61>",
    "poll_symbol": ""
  },
  "0x14fcdd": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x14fcdd>",
    "poll_symbol": ""
  },
  "0x14fd59": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x14fd59>",
    "poll_symbol": ""
  },
  "0x14fdd5": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x14fdd5>",
    "poll_symbol": ""
  },
  "0x14fe56": {
    "name": "Projection<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x14fe7d": {
    "name": "Projection<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>",
    "poll_symbol": ""
  },
  "0x14fea4": {
    "name": "Projection<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x14fecb": {
    "name": "Projection<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x14fef2": {
    "name": "Projection<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x14ff19": {
    "name": "Projection<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>",
    "poll_symbol": ""
  },
  "0x14ff40": {
    "name": "Projection<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x14ff67": {
    "name": "Projection<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x14ff8e": {
    "name": "Projection<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x14ffb5": {
    "name": "Projection<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x14ffdc": {
    "name": "Projection<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x150003": {
    "name": "Projection<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x1503c7": {
    "name": "MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x1503ef": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x15044c": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>",
    "poll_symbol": ""
  },
  "0x15046a": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x150488": {
    "name": "IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": ""
  },
  "0x1504a7": {
    "name": "IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x1504c6": {
    "name": "IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>",
    "poll_symbol": ""
  },
  "0x1504e4": {
    "name": "IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x150502": {
    "name": "IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x150521": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x150549": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x150576": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x150576>",
    "poll_symbol": ""
  },
  "0x150678": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>",
    "poll_symbol": ""
  },
  "0x1506fa": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>",
    "poll_symbol": ""
  },
  "0x150b6b": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x150b6b>",
    "poll_symbol": ""
  },
  "0x150dc2": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x150dc2>",
    "poll_symbol": ""
  },
  "0x151069": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x151069>",
    "poll_symbol": ""
  },
  "0x151093": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x151093>",
    "poll_symbol": ""
  },
  "0x151d4c": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x151d4c>",
    "poll_symbol": ""
  },
  "0x151d77": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x151d77>",
    "poll_symbol": ""
  },
  "0x151d7e": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x151d7e>",
    "poll_symbol": ""
  },
  "0x1520e9": {
    "name": "ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x15215b": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x15215b>",
    "poll_symbol": ""
  },
  "0x152182": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x152182>",
    "poll_symbol": ""
  },
  "0x1521ec": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x152213": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x1539cc": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x1539f3": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x154b85": {
    "name": "(*mut alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>, alloc::alloc::Global)",
    "poll_symbol": ""
  },
  "0x1550fe": {
    "name": "(*mut alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>, alloc::alloc::Global)",
    "poll_symbol": ""
  },
  "0x1552cd": {
    "name": "(*mut alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>, alloc::alloc::Global)",
    "poll_symbol": ""
  },
  "0x1573db": {
    "name": "&alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": ""
  },
  "0x159526": {
    "name": "*mut alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": ""
  },
  "0x15a85f": {
    "name": "&(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": ""
  },
  "0x15b1f0": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x15b1f0>",
    "poll_symbol": ""
  },
  "0x15b2b3": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x15b2b3>",
    "poll_symbol": ""
  },
  "0x15ba61": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x15ba61>",
    "poll_symbol": ""
  },
  "0x15c0d5": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x15c0d5>",
    "poll_symbol": ""
  },
  "0x15c136": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x15c136>",
    "poll_symbol": ""
  },
  "0x15c696": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x15c696>",
    "poll_symbol": ""
  },
  "0x15c99f": {
    "name": "Option<futures_channel::mpsc::Sender<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x15cb25": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x15cb86": {
    "name": "Option<futures_channel::mpsc::Receiver<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x15dcaa": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)>",
    "poll_symbol": ""
  },
  "0x15dd0b": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)>",
    "poll_symbol": ""
  },
  "0x15def1": {
    "name": "Option<futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x15e3a9": {
    "name": "Option<tokio_native_tls::StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>>",
    "poll_symbol": ""
  },
  "0x15ea74": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x15ea74>",
    "poll_symbol": ""
  },
  "0x15eaec": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x15eaec>",
    "poll_symbol": ""
  },
  "0x15eb0a": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x15eb0a>",
    "poll_symbol": ""
  },
  "0x15eb28": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x15eb28>",
    "poll_symbol": ""
  },
  "0x15ecb0": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x15ecb0>",
    "poll_symbol": ""
  },
  "0x15ecce": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x15ecce>",
    "poll_symbol": ""
  },
  "0x15eddc": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x15eddc>",
    "poll_symbol": ""
  },
  "0x160967": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x160967>",
    "poll_symbol": ""
  },
  "0x1609f7": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1609f7>",
    "poll_symbol": ""
  },
  "0x160a09": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x160a09>",
    "poll_symbol": ""
  },
  "0x160a1b": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x160a1b>",
    "poll_symbol": ""
  },
  "0x160bd3": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x160bd3>",
    "poll_symbol": ""
  },
  "0x160be5": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x160be5>",
    "poll_symbol": ""
  },
  "0x160bf7": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x160bf7>",
    "poll_symbol": ""
  },
  "0x160c09": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x160c09>",
    "poll_symbol": ""
  },
  "0x160d29": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x160d29>",
    "poll_symbol": ""
  },
  "0x16120e": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x16120e>",
    "poll_symbol": ""
  },
  "0x161241": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x161241>",
    "poll_symbol": ""
  },
  "0x161292": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x161292>",
    "poll_symbol": ""
  },
  "0x1613aa": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1613aa>",
    "poll_symbol": ""
  },
  "0x1613e6": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x1613e6>",
    "poll_symbol": ""
  },
  "0x161404": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x161404>",
    "poll_symbol": ""
  },
  "0x161623": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x161623>",
    "poll_symbol": ""
  },
  "0x161b0f": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x161b0f>",
    "poll_symbol": ""
  },
  "0x161b4b": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x161b4b>",
    "poll_symbol": ""
  },
  "0x161b69": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x161b69>",
    "poll_symbol": ""
  },
  "0x161b87": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x161bc3": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x161c9a": {
    "name": "Pin<&mut futures_channel::oneshot::Receiver<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x161cf5": {
    "name": "Pin<&mut futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x161d32": {
    "name": "Pin<&mut futures_util::future::select::Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>>>",
    "poll_symbol": ""
  },
  "0x161d6f": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::connect::{async_block_env#0}>",
    "poll_symbol": ""
  },
  "0x161dac": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x161dca": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x161e06": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::dns::resolve::{async_fn_env#0}<reqwest::dns::resolve::DynResolver>>",
    "poll_symbol": ""
  },
  "0x161e43": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#18}::connect::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x161e80": {
    "name": "Pin<&mut tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x161ebd": {
    "name": "Pin<&mut tokio::time::timeout::Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}>>",
    "poll_symbol": ""
  },
  "0x161f18": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x161f18>",
    "poll_symbol": ""
  },
  "0x161f36": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x161f54": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x161f72": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x161f90": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::future::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x161fae": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::future::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x161fcc": {
    "name": "Pin<alloc::boxed::Box<hyper::proto::h2::client::H2ClientFuture<reqwest::async_impl::body::Body, reqwest::connect::sealed::Conn>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x161fea": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x162008": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x162026": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x162062": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>>",
    "poll_symbol": ""
  },
  "0x16209e": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1620bc": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>>",
    "poll_symbol": ""
  },
  "0x1620da": {
    "name": "Pin<&mut tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x1620f8": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>>",
    "poll_symbol": ""
  },
  "0x162116": {
    "name": "Pin<&mut hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": ""
  },
  "0x162134": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>>",
    "poll_symbol": ""
  },
  "0x162152": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x162170": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::connect::http::{impl#4}::call::{async_block_env#0}<reqwest::dns::resolve::DynResolver>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x16218e": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#5}::call_async::{async_fn_env#0}<reqwest::dns::resolve::DynResolver>>",
    "poll_symbol": ""
  },
  "0x162207": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::net::tcp::stream::{impl#0}::connect_mio::{async_fn#0}::{closure_env#0}>>",
    "poll_symbol": ""
  },
  "0x162244": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x162262": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x162280": {
    "name": "Pin<&mut reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x16229e": {
    "name": "Pin<&mut tokio::time::timeout::Timeout<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>>",
    "poll_symbol": ""
  },
  "0x1622bc": {
    "name": "Pin<&mut reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x1622da": {
    "name": "Pin<&mut tokio::time::timeout::Timeout<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>>",
    "poll_symbol": ""
  },
  "0x1622f8": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>>",
    "poll_symbol": ""
  },
  "0x162316": {
    "name": "Pin<&mut tower::util::map_err::MapErrFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>>",
    "poll_symbol": ""
  },
  "0x162334": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>>",
    "poll_symbol": ""
  },
  "0x162352": {
    "name": "Pin<&mut tower::util::map_err::MapErrFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>>",
    "poll_symbol": ""
  },
  "0x162370": {
    "name": "Pin<alloc::boxed::Box<reqwest::dns::gai::{impl#2}::resolve::{async_block_env#0}, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x16238e": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::dns::GaiFuture>",
    "poll_symbol": ""
  },
  "0x16326a": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, hyper_util::client::legacy::connect::http::ConnectError>, hyper_util::client::legacy::connect::http::connect::{async_block_env#0}>",
    "poll_symbol": ""
  },
  "0x16442f": {
    "name": "<hyper_util::rt::tokio::TokioExecutor as hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x164758": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x164758>",
    "poll_symbol": ""
  },
  "0x164780": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x164780>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h9f5b4f64f11deecbE"
  },
  "0x166d68": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x166d68>",
    "poll_symbol": ""
  },
  "0x1676f4": {
    "name": "{async_block_env#0}<reqwest::dns::resolve::DynResolver>",
    "poll_symbol": ""
  },
  "0x16792f": {
    "name": "{async_fn_env#0}<reqwest::dns::resolve::DynResolver>",
    "poll_symbol": ""
  },
  "0x168028": {
    "name": "{async_fn_env#0}<0x168028>",
    "poll_symbol": ""
  },
  "0x16863f": {
    "name": "{async_fn_env#0}<0x16863f>",
    "poll_symbol": ""
  },
  "0x168fc9": {
    "name": "{async_block_env#0}<0x168fc9>",
    "poll_symbol": ""
  },
  "0x16938e": {
    "name": "{async_fn_env#0}<reqwest::dns::resolve::DynResolver><0x16938e>",
    "poll_symbol": ""
  },
  "0x169518": {
    "name": "GaiFuture",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x169b3b": {
    "name": "<hyper_util::common::exec::Exec as hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x169b7d": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x169b7d>",
    "poll_symbol": ""
  },
  "0x169bbc": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x169bbc>",
    "poll_symbol": ""
  },
  "0x169cdc": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x169cdc>",
    "poll_symbol": ""
  },
  "0x169d1b": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x169d1b>",
    "poll_symbol": ""
  },
  "0x169d5a": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x169d5a>",
    "poll_symbol": ""
  },
  "0x169d90": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x169d90>",
    "poll_symbol": ""
  },
  "0x169dc6": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x169dc6>",
    "poll_symbol": ""
  },
  "0x169e05": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x169e05>",
    "poll_symbol": ""
  },
  "0x16a1e8": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x16a1e8>",
    "poll_symbol": ""
  },
  "0x16a227": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x16a227>",
    "poll_symbol": ""
  },
  "0x16a25d": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x16a25d>",
    "poll_symbol": ""
  },
  "0x16a29c": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x16a29c>",
    "poll_symbol": ""
  },
  "0x16a6ad": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x16a6ad>",
    "poll_symbol": ""
  },
  "0x16a6ec": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x16a6ec>",
    "poll_symbol": ""
  },
  "0x16baa0": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x16baa0>",
    "poll_symbol": ""
  },
  "0x16bedd": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x16bedd>",
    "poll_symbol": ""
  },
  "0x16d382": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x16d382>",
    "poll_symbol": ""
  },
  "0x16d389": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x16d389>",
    "poll_symbol": ""
  },
  "0x16d3dd": {
    "name": "<hyper_util::client::legacy::pool::IdleTask<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x16d621": {
    "name": "{async_fn_env#0}<0x16d621>",
    "poll_symbol": ""
  },
  "0x16d7aa": {
    "name": "{async_fn_env#0}<0x16d7aa>",
    "poll_symbol": ""
  },
  "0x16db87": {
    "name": "{async_block_env#0}<0x16db87>",
    "poll_symbol": ""
  },
  "0x16e648": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x16e648>",
    "poll_symbol": ""
  },
  "0x16e7e1": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x16e7e1>",
    "poll_symbol": ""
  },
  "0x16e910": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x16e910>",
    "poll_symbol": ""
  },
  "0x16eaa1": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x16eaa1>",
    "poll_symbol": ""
  },
  "0x16f470": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x16f470>",
    "poll_symbol": ""
  },
  "0x16f72c": {
    "name": "H2ClientFuture<reqwest::async_impl::body::Body, reqwest::connect::sealed::Conn>",
    "poll_symbol": ""
  },
  "0x1714cb": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x1714cb>",
    "poll_symbol": ""
  },
  "0x17156a": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x17156a>",
    "poll_symbol": ""
  },
  "0x17210a": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x17210a>",
    "poll_symbol": ""
  },
  "0x17231c": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x17231c>",
    "poll_symbol": ""
  },
  "0x172762": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x172762>",
    "poll_symbol": ""
  },
  "0x17278c": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x17278c>",
    "poll_symbol": ""
  },
  "0x17411c": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x17411c>",
    "poll_symbol": ""
  },
  "0x17422c": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x17422c>",
    "poll_symbol": ""
  },
  "0x174313": {
    "name": "ResponseFuture<0x174313>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x176767": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x1767d3": {
    "name": "Timeout<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x176840": {
    "name": "Timeout<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x1768b2": {
    "name": "Projection<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x1768dc": {
    "name": "Projection<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x176906": {
    "name": "Projection<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x176b12": {
    "name": "{closure_env#0}<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x176b30": {
    "name": "{closure_env#0}<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x176b4e": {
    "name": "{closure_env#0}<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x1780e5": {
    "name": "{async_fn_env#0}<0x1780e5>",
    "poll_symbol": ""
  },
  "0x178202": {
    "name": "{async_fn_env#0}<0x178202>",
    "poll_symbol": ""
  },
  "0x178cc9": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x178cc9>",
    "poll_symbol": ""
  },
  "0x178d14": {
    "name": "<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x178d4c": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x178d4c>",
    "poll_symbol": ""
  },
  "0x178d73": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x178d73>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x178d8d": {
    "name": "<futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x178dd4": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x178dd4>",
    "poll_symbol": ""
  },
  "0x178dfc": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x178dfc>",
    "poll_symbol": ""
  },
  "0x178e29": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x178e29>",
    "poll_symbol": ""
  },
  "0x178eac": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x178eac>",
    "poll_symbol": ""
  },
  "0x178f2f": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x178f2f>",
    "poll_symbol": ""
  },
  "0x178fb1": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x178fb1>",
    "poll_symbol": ""
  },
  "0x179034": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x179034>",
    "poll_symbol": ""
  },
  "0x1790b7": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1790b7>",
    "poll_symbol": ""
  },
  "0x17913a": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x17913a>",
    "poll_symbol": ""
  },
  "0x1791b9": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1791b9>",
    "poll_symbol": ""
  },
  "0x179238": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x179238>",
    "poll_symbol": ""
  },
  "0x1792b7": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1792b7>",
    "poll_symbol": ""
  },
  "0x179336": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x179336>",
    "poll_symbol": ""
  },
  "0x1793b5": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x1793b5>",
    "poll_symbol": ""
  },
  "0x179435": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x179435>",
    "poll_symbol": ""
  },
  "0x17945d": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x17945d>",
    "poll_symbol": ""
  },
  "0x179484": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x179484>",
    "poll_symbol": ""
  },
  "0x1794ac": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1794ac>",
    "poll_symbol": ""
  },
  "0x1794d4": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1794d4>",
    "poll_symbol": ""
  },
  "0x1794fb": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1794fb>",
    "poll_symbol": ""
  },
  "0x179522": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x179522>",
    "poll_symbol": ""
  },
  "0x179549": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x179549>",
    "poll_symbol": ""
  },
  "0x1795bc": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x1795bc>",
    "poll_symbol": ""
  },
  "0x1795e3": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x1795e3>",
    "poll_symbol": ""
  },
  "0x17963d": {
    "name": "IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>><0x17963d>",
    "poll_symbol": ""
  },
  "0x179699": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x179699>",
    "poll_symbol": ""
  },
  "0x1796f4": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1796f4>",
    "poll_symbol": ""
  },
  "0x17974f": {
    "name": "IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x17974f>",
    "poll_symbol": ""
  },
  "0x1797ab": {
    "name": "IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>><0x1797ab>",
    "poll_symbol": ""
  },
  "0x1799e6": {
    "name": "Projection<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x179a5e": {
    "name": "Projection<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x179a7c": {
    "name": "Projection<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": ""
  },
  "0x179a9a": {
    "name": "Projection<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x179ab9": {
    "name": "IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>><0x179ab9>",
    "poll_symbol": ""
  },
  "0x179b14": {
    "name": "IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x179b14>",
    "poll_symbol": ""
  },
  "0x179b70": {
    "name": "MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x179b70>",
    "poll_symbol": ""
  },
  "0x179b98": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x179b98>",
    "poll_symbol": ""
  },
  "0x179bf0": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x179bf0>",
    "poll_symbol": ""
  },
  "0x179c18": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x179c18>",
    "poll_symbol": ""
  },
  "0x179c45": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x179c45>",
    "poll_symbol": ""
  },
  "0x179dd3": {
    "name": "MapErr<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>",
    "poll_symbol": ""
  },
  "0x179dfa": {
    "name": "MapErr<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>",
    "poll_symbol": ""
  },
  "0x179e27": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x179e27>",
    "poll_symbol": ""
  },
  "0x179ea9": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x179ea9>",
    "poll_symbol": ""
  },
  "0x179faa": {
    "name": "Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut tokio::time::sleep::Sleep>), ((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)>",
    "poll_symbol": ""
  },
  "0x17a029": {
    "name": "Either<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>",
    "poll_symbol": ""
  },
  "0x17a115": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>>",
    "poll_symbol": ""
  },
  "0x17a13c": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>",
    "poll_symbol": ""
  },
  "0x17a24d": {
    "name": "StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x17a3ef": {
    "name": "<futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x17ab06": {
    "name": "MapErrFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>",
    "poll_symbol": ""
  },
  "0x17ab81": {
    "name": "Projection<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>",
    "poll_symbol": ""
  },
  "0x17aba8": {
    "name": "Projection<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>",
    "poll_symbol": ""
  },
  "0x17abd0": {
    "name": "MapErrFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>",
    "poll_symbol": ""
  },
  "0x17b066": {
    "name": "MapFuture<tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>>>",
    "poll_symbol": ""
  },
  "0x17b099": {
    "name": "MapFuture<tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>>>",
    "poll_symbol": ""
  },
  "0x17b0d8": {
    "name": "ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x17b0d8>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x17b149": {
    "name": "Projection<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x17b149>",
    "poll_symbol": ""
  },
  "0x17b380": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x17b380>",
    "poll_symbol": ""
  },
  "0x17b3a7": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x17b3a7>",
    "poll_symbol": ""
  },
  "0x17b3ae": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x17b3ae>",
    "poll_symbol": ""
  },
  "0x17b3d5": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x17b3d5>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x17b430": {
    "name": "<futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x17b4cd": {
    "name": "<futures_util::future::future::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x17b518": {
    "name": "<futures_util::future::future::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x17b563": {
    "name": "<hyper::proto::h2::client::H2ClientFuture<reqwest::async_impl::body::Body, reqwest::connect::sealed::Conn> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x17bb68": {
    "name": "<hyper_util::client::legacy::connect::http::{impl#4}::call::{async_block_env#0}<reqwest::dns::resolve::DynResolver> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x17bbf2": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x17bc19": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x17c1a3": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)",
    "poll_symbol": ""
  },
  "0x17c1df": {
    "name": "((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)",
    "poll_symbol": ""
  },
  "0x17c1fd": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)",
    "poll_symbol": ""
  },
  "0x17c7d2": {
    "name": "<reqwest::dns::gai::{impl#2}::resolve::{async_block_env#0} as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x17eaf9": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x17eb20": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x18209c": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x1820c3": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x18217e": {
    "name": "{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": ""
  },
  "0x1822ba": {
    "name": "{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": ""
  },
  "0x1823e8": {
    "name": "StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": ""
  },
  "0x18240f": {
    "name": "StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": ""
  },
  "0x18251d": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x182544": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x185962": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x185962>",
    "poll_symbol": ""
  },
  "0x185a25": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x185a25>",
    "poll_symbol": ""
  },
  "0x186136": {
    "name": "Option<futures_channel::lock::TryLock<core::option::Option<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x186197": {
    "name": "Option<futures_channel::lock::TryLock<core::option::Option<core::convert::Infallible>>>",
    "poll_symbol": ""
  },
  "0x18631c": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>><0x18631c>",
    "poll_symbol": ""
  },
  "0x186bd8": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x186bd8>",
    "poll_symbol": ""
  },
  "0x18754e": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x18754e>",
    "poll_symbol": ""
  },
  "0x1877fd": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1877fd>",
    "poll_symbol": ""
  },
  "0x18785e": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x18785e>",
    "poll_symbol": ""
  },
  "0x18820b": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x18820b>",
    "poll_symbol": ""
  },
  "0x188229": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x188229>",
    "poll_symbol": ""
  },
  "0x188247": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x188247>",
    "poll_symbol": ""
  },
  "0x188373": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x188373>",
    "poll_symbol": ""
  },
  "0x188427": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x188427>",
    "poll_symbol": ""
  },
  "0x188463": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x188463>",
    "poll_symbol": ""
  },
  "0x188481": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x188481>",
    "poll_symbol": ""
  },
  "0x188a01": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x188a01>",
    "poll_symbol": ""
  },
  "0x188a13": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x188a13>",
    "poll_symbol": ""
  },
  "0x188a25": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x188a25>",
    "poll_symbol": ""
  },
  "0x188b8d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x188b8d>",
    "poll_symbol": ""
  },
  "0x188c0b": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x188c0b>",
    "poll_symbol": ""
  },
  "0x188c65": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x188c65>",
    "poll_symbol": ""
  },
  "0x188c77": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x188c77>",
    "poll_symbol": ""
  },
  "0x188c89": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x188c89>",
    "poll_symbol": ""
  },
  "0x188c9b": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x188c9b>",
    "poll_symbol": ""
  },
  "0x189067": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x189067>",
    "poll_symbol": ""
  },
  "0x189085": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x189085>",
    "poll_symbol": ""
  },
  "0x1890c1": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x1890c1>",
    "poll_symbol": ""
  },
  "0x18953d": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x18953d>",
    "poll_symbol": ""
  },
  "0x18955b": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x18955b>",
    "poll_symbol": ""
  },
  "0x189579": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x189579>",
    "poll_symbol": ""
  },
  "0x1896c6": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x1896c6>",
    "poll_symbol": ""
  },
  "0x18c57a": {
    "name": "Result<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, futures_channel::oneshot::Canceled>",
    "poll_symbol": ""
  },
  "0x18e83e": {
    "name": "Result<(h2::client::ResponseFuture, h2::share::SendStream<hyper::proto::h2::SendBuf<bytes::bytes::Bytes>>), h2::error::Error>",
    "poll_symbol": ""
  },
  "0x18eab8": {
    "name": "Result<futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::Error><0x18eab8>",
    "poll_symbol": ""
  },
  "0x19460f": {
    "name": "Result<hyper_util::client::legacy::connect::http::connect::{async_block_env#0}, hyper_util::client::legacy::connect::http::ConnectError>",
    "poll_symbol": ""
  },
  "0x195db3": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, hyper_util::client::legacy::connect::http::ConnectError>, hyper_util::client::legacy::connect::http::connect::{async_block_env#0}><0x195db3>",
    "poll_symbol": ""
  },
  "0x1984d0": {
    "name": "Poll<core::result::Result<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, futures_channel::oneshot::Canceled>>",
    "poll_symbol": ""
  },
  "0x198716": {
    "name": "Poll<(core::option::Option<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)>",
    "poll_symbol": ""
  },
  "0x199946": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x199946>",
    "poll_symbol": ""
  },
  "0x19ac07": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x19ac07>",
    "poll_symbol": ""
  },
  "0x19b790": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x19b790>",
    "poll_symbol": ""
  },
  "0x19b7cf": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x19b7cf>",
    "poll_symbol": ""
  },
  "0x19b80e": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x19b80e>",
    "poll_symbol": ""
  },
  "0x19b844": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x19b844>",
    "poll_symbol": ""
  },
  "0x19b87a": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x19b87a>",
    "poll_symbol": ""
  },
  "0x19b8b9": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x19b8b9>",
    "poll_symbol": ""
  },
  "0x19bc27": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x19bc27>",
    "poll_symbol": ""
  },
  "0x19bc66": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x19bc66>",
    "poll_symbol": ""
  },
  "0x19be70": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x19be70>",
    "poll_symbol": ""
  },
  "0x19beaf": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x19beaf>",
    "poll_symbol": ""
  },
  "0x19bf99": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x19bf99>",
    "poll_symbol": ""
  },
  "0x19bfd8": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x19bfd8>",
    "poll_symbol": ""
  },
  "0x19c00e": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x19c00e>",
    "poll_symbol": ""
  },
  "0x19c04d": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x19c04d>",
    "poll_symbol": ""
  },
  "0x19c4df": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x19c4df>",
    "poll_symbol": ""
  },
  "0x19e849": {
    "name": "ResponseFuture<0x19e849>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x19e908": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x19e908>",
    "poll_symbol": ""
  },
  "0x19ea18": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x19ea18>",
    "poll_symbol": ""
  },
  "0x19fbf8": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x19fbf8>",
    "poll_symbol": ""
  },
  "0x1a000d": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x1a000d>",
    "poll_symbol": ""
  },
  "0x1a08a1": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x1a08a1>",
    "poll_symbol": ""
  },
  "0x1a19db": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x1a19db>",
    "poll_symbol": ""
  },
  "0x1a1b74": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x1a1b74>",
    "poll_symbol": ""
  },
  "0x1a1ccb": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x1a1ccb>",
    "poll_symbol": ""
  },
  "0x1a1e5c": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x1a1e5c>",
    "poll_symbol": ""
  },
  "0x1a28e7": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x1a28e7>",
    "poll_symbol": ""
  },
  "0x1a3920": {
    "name": "{async_fn_env#0}<0x1a3920>",
    "poll_symbol": ""
  },
  "0x1a3a06": {
    "name": "{async_fn_env#0}<0x1a3a06>",
    "poll_symbol": ""
  },
  "0x1a6b81": {
    "name": "{async_block_env#0}<0x1a6b81>",
    "poll_symbol": ""
  },
  "0x1a7191": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x1a7191>",
    "poll_symbol": ""
  },
  "0x1a91f6": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x1a91f6>",
    "poll_symbol": ""
  },
  "0x1a9402": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x1a9402>",
    "poll_symbol": ""
  },
  "0x1aa2cd": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1aa2cd>",
    "poll_symbol": ""
  },
  "0x1aa2f7": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1aa2f7>",
    "poll_symbol": ""
  },
  "0x1ab3e2": {
    "name": "(core::option::Option<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)",
    "poll_symbol": ""
  },
  "0x1ad231": {
    "name": "(h2::client::ResponseFuture, h2::share::SendStream<hyper::proto::h2::SendBuf<bytes::bytes::Bytes>>)",
    "poll_symbol": ""
  },
  "0x1ad348": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x1ad348>",
    "poll_symbol": ""
  },
  "0x1ad5b4": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x1ad5b4>",
    "poll_symbol": ""
  },
  "0x1ad5bb": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x1ad5bb>",
    "poll_symbol": ""
  },
  "0x1ad6da": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x1ad6da>",
    "poll_symbol": ""
  },
  "0x1adb5e": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x1adb5e>",
    "poll_symbol": ""
  },
  "0x1adb85": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x1adb85>",
    "poll_symbol": ""
  },
  "0x1b1afa": {
    "name": "<hashbrown::raw::{impl#8}::reserve_rehash::{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::map::make_hasher::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState>> as core::ops::function::Fn<(&mut hashbrown::raw::RawTableInner, usize)>>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x1b1b77": {
    "name": "{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::map::make_hasher::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState>>",
    "poll_symbol": ""
  },
  "0x1b243c": {
    "name": "{closure_env#1}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::map::make_hasher::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState>>",
    "poll_symbol": ""
  },
  "0x1b2837": {
    "name": "{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::rustc_entry::{impl#0}::rustc_entry::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1b2855": {
    "name": "{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), (http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x1b42f1": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x1b42f1>",
    "poll_symbol": ""
  },
  "0x1b5173": {
    "name": "Bucket<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)>",
    "poll_symbol": ""
  },
  "0x1b5295": {
    "name": "RawIter<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)>",
    "poll_symbol": ""
  },
  "0x1b52bf": {
    "name": "RawIterRange<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)>",
    "poll_symbol": ""
  },
  "0x1b5ed6": {
    "name": "{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState>",
    "poll_symbol": ""
  },
  "0x1b5f4e": {
    "name": "{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), (http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1b6003": {
    "name": "{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x1b68be": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x1b68be>",
    "poll_symbol": ""
  },
  "0x1b7081": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1b7081>",
    "poll_symbol": ""
  },
  "0x1b70f2": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1b70f2>",
    "poll_symbol": ""
  },
  "0x1b7222": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x1b7222>",
    "poll_symbol": ""
  },
  "0x1b7261": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x1b7261>",
    "poll_symbol": ""
  },
  "0x1b72a0": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x1b72a0>",
    "poll_symbol": ""
  },
  "0x1b72d6": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1b72d6>",
    "poll_symbol": ""
  },
  "0x1b730c": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x1b730c>",
    "poll_symbol": ""
  },
  "0x1b734b": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x1b734b>",
    "poll_symbol": ""
  },
  "0x1b76b9": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1b76b9>",
    "poll_symbol": ""
  },
  "0x1b76f8": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1b76f8>",
    "poll_symbol": ""
  },
  "0x1b78fd": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1b78fd>",
    "poll_symbol": ""
  },
  "0x1b791b": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1b791b>",
    "poll_symbol": ""
  },
  "0x1b7939": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x1b7939>",
    "poll_symbol": ""
  },
  "0x1b7a65": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1b7a65>",
    "poll_symbol": ""
  },
  "0x1b7ade": {
    "name": "NonNull<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)>",
    "poll_symbol": ""
  },
  "0x1b9ae3": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1b9ae3>",
    "poll_symbol": ""
  },
  "0x1b9af5": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1b9af5>",
    "poll_symbol": ""
  },
  "0x1b9b07": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x1b9b07>",
    "poll_symbol": ""
  },
  "0x1b9c77": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1b9c77>",
    "poll_symbol": ""
  },
  "0x1b9c89": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1b9c89>",
    "poll_symbol": ""
  },
  "0x1b9c9b": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x1b9c9b>",
    "poll_symbol": ""
  },
  "0x1ba3df": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1ba3df>",
    "poll_symbol": ""
  },
  "0x1ba412": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1ba412>",
    "poll_symbol": ""
  },
  "0x1ba4e2": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1ba4e2>",
    "poll_symbol": ""
  },
  "0x1ba51e": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x1ba51e>",
    "poll_symbol": ""
  },
  "0x1ba53c": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1ba53c>",
    "poll_symbol": ""
  },
  "0x1ba8f3": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x1ba8f3>",
    "poll_symbol": ""
  },
  "0x1ba9b6": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1ba9b6>",
    "poll_symbol": ""
  },
  "0x1bb558": {
    "name": "Option<hashbrown::raw::Bucket<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)>>",
    "poll_symbol": ""
  },
  "0x1bb929": {
    "name": "Option<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)>",
    "poll_symbol": ""
  },
  "0x1bdde2": {
    "name": "<hashbrown::raw::{impl#8}::find::{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::rustc_entry::{impl#0}::rustc_entry::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global>> as core::ops::function::FnMut<(usize)>>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x1bde3f": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x1bde3f>",
    "poll_symbol": ""
  },
  "0x1bdffe": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1bdffe>",
    "poll_symbol": ""
  },
  "0x1be028": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1be028>",
    "poll_symbol": ""
  },
  "0x1c00fc": {
    "name": "<hashbrown::raw::{impl#8}::find::{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), (http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>> as core::ops::function::FnMut<(usize)>>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x1d095c": {
    "name": "(((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), hashbrown::raw::InsertSlot)",
    "poll_symbol": ""
  },
  "0x1d38e2": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x1d38e2>",
    "poll_symbol": ""
  },
  "0x1d4ab4": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x1d4ab4>",
    "poll_symbol": ""
  },
  "0x1d4c4d": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x1d4c4d>",
    "poll_symbol": ""
  },
  "0x1d4d7c": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x1d4d7c>",
    "poll_symbol": ""
  },
  "0x1d4f0d": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x1d4f0d>",
    "poll_symbol": ""
  },
  "0x1d6932": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x1d6932>",
    "poll_symbol": ""
  },
  "0x1d6a42": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x1d6a42>",
    "poll_symbol": ""
  },
  "0x1d6b29": {
    "name": "ResponseFuture<0x1d6b29>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x1d81b4": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x1d81b4>",
    "poll_symbol": ""
  },
  "0x1d8253": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x1d8253>",
    "poll_symbol": ""
  },
  "0x1d8d08": {
    "name": "{async_fn_env#0}<0x1d8d08>",
    "poll_symbol": ""
  },
  "0x1d8e9f": {
    "name": "{async_block_env#0}<0x1d8e9f>",
    "poll_symbol": ""
  },
  "0x1d9112": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x1d9112>",
    "poll_symbol": ""
  },
  "0x1dab86": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x1dab86>",
    "poll_symbol": ""
  },
  "0x1dabae": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x1dabae>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h9f5b4f64f11deecbE"
  },
  "0x1dad52": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x1dad52>",
    "poll_symbol": ""
  },
  "0x1dcf20": {
    "name": "{async_fn_env#0}<0x1dcf20>",
    "poll_symbol": ""
  },
  "0x1dd006": {
    "name": "{async_fn_env#0}<0x1dd006>",
    "poll_symbol": ""
  },
  "0x1dd687": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x1dd687>",
    "poll_symbol": ""
  },
  "0x1dd6a5": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x1dd6a5>",
    "poll_symbol": ""
  },
  "0x1dd6c3": {
    "name": "Pin<&mut futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1dd6e1": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x1dd6e1>",
    "poll_symbol": ""
  },
  "0x1dd6ff": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1dd6ff>",
    "poll_symbol": ""
  },
  "0x1dd77a": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x1dd77a>",
    "poll_symbol": ""
  },
  "0x1dd798": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1dd7b6": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x1dd7b6>",
    "poll_symbol": ""
  },
  "0x1dd7d4": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>><0x1dd7d4>",
    "poll_symbol": ""
  },
  "0x1dd7f2": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x1dd7f2>",
    "poll_symbol": ""
  },
  "0x1dd810": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>><0x1dd810>",
    "poll_symbol": ""
  },
  "0x1dd82e": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x1dd82e>",
    "poll_symbol": ""
  },
  "0x1dd84c": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x1dd84c>",
    "poll_symbol": ""
  },
  "0x1dd86a": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1dd888": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x1dd888>",
    "poll_symbol": ""
  },
  "0x1dd8a6": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1dd8c4": {
    "name": "Pin<&mut futures_util::future::try_future::try_flatten::TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": ""
  },
  "0x1dd8e2": {
    "name": "Pin<&mut futures_util::future::try_future::TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": ""
  },
  "0x1dd900": {
    "name": "Pin<&mut futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1dd9d6": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x1dd9d6>",
    "poll_symbol": ""
  },
  "0x1dd9f4": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x1dd9f4>",
    "poll_symbol": ""
  },
  "0x1dda12": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}><0x1dda12>",
    "poll_symbol": ""
  },
  "0x1dda8a": {
    "name": "Pin<&mut futures_util::future::select::Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>>><0x1dda8a>",
    "poll_symbol": ""
  },
  "0x1ddaa8": {
    "name": "Pin<&mut futures_util::future::select::Select<hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>>",
    "poll_symbol": ""
  },
  "0x1ddac6": {
    "name": "Pin<&mut futures_util::future::select::Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>>",
    "poll_symbol": ""
  },
  "0x1ddb22": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1ddb22>",
    "poll_symbol": ""
  },
  "0x1ddb6a": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1ddb6a>",
    "poll_symbol": ""
  },
  "0x1ddbee": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x1ddbee>",
    "poll_symbol": ""
  },
  "0x1ddc6d": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1ddc6d>",
    "poll_symbol": ""
  },
  "0x1ddcc7": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x1ddcc7>",
    "poll_symbol": ""
  },
  "0x1ddce5": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1ddce5>",
    "poll_symbol": ""
  },
  "0x1de22e": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x1de22e>",
    "poll_symbol": ""
  },
  "0x1de3b5": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1de3b5>",
    "poll_symbol": ""
  },
  "0x1de3d3": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1de3d3>",
    "poll_symbol": ""
  },
  "0x1de3f1": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x1de3f1>",
    "poll_symbol": ""
  },
  "0x1de847": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1de847>",
    "poll_symbol": ""
  },
  "0x1de865": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1de865>",
    "poll_symbol": ""
  },
  "0x1de883": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x1de883>",
    "poll_symbol": ""
  },
  "0x1de937": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x1de937>",
    "poll_symbol": ""
  },
  "0x1dea87": {
    "name": "NonNull<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1df156": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1df156>",
    "poll_symbol": ""
  },
  "0x1df168": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1df168>",
    "poll_symbol": ""
  },
  "0x1df17a": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x1df17a>",
    "poll_symbol": ""
  },
  "0x1df6da": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1df6da>",
    "poll_symbol": ""
  },
  "0x1df6ec": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1df6ec>",
    "poll_symbol": ""
  },
  "0x1df6fe": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x1df6fe>",
    "poll_symbol": ""
  },
  "0x1df710": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1df710>",
    "poll_symbol": ""
  },
  "0x1df722": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x1df722>",
    "poll_symbol": ""
  },
  "0x1df7d6": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x1df7d6>",
    "poll_symbol": ""
  },
  "0x1e00dd": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x1e00dd>",
    "poll_symbol": ""
  },
  "0x1e01a0": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1e01a0>",
    "poll_symbol": ""
  },
  "0x1e16d8": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x1e16d8>",
    "poll_symbol": ""
  },
  "0x1e1ce8": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1e1ce8>",
    "poll_symbol": ""
  },
  "0x1e1d49": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x1e1d49>",
    "poll_symbol": ""
  },
  "0x1e1f91": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x1e1f91>",
    "poll_symbol": ""
  },
  "0x1e23c5": {
    "name": "Option<&mut futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1e2572": {
    "name": "Option<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1e2757": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)><0x1e2757>",
    "poll_symbol": ""
  },
  "0x1e27b8": {
    "name": "Option<futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1e27b8>",
    "poll_symbol": ""
  },
  "0x1e2819": {
    "name": "Option<(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)>",
    "poll_symbol": ""
  },
  "0x1e287d": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x1e287d>",
    "poll_symbol": ""
  },
  "0x1e3253": {
    "name": "Poll<core::result::Result<futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::Error>><0x1e3253>",
    "poll_symbol": ""
  },
  "0x1e34fb": {
    "name": "Poll<futures_util::future::either::Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut tokio::time::sleep::Sleep>), ((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)>>",
    "poll_symbol": ""
  },
  "0x1e355c": {
    "name": "Poll<futures_util::future::either::Either<(core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::pool::Error>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>), (core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>, hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>)>>",
    "poll_symbol": ""
  },
  "0x1e35c0": {
    "name": "Poll<futures_util::future::either::Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>), (core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)>>",
    "poll_symbol": ""
  },
  "0x1e40d5": {
    "name": "Result<futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::Error><0x1e40d5>",
    "poll_symbol": ""
  },
  "0x1e50a5": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, hyper_util::client::legacy::connect::http::ConnectError>, hyper_util::client::legacy::connect::http::connect::{async_block_env#0}><0x1e50a5>",
    "poll_symbol": ""
  },
  "0x1e8113": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1e8113>",
    "poll_symbol": ""
  },
  "0x1e8388": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x1e8388>",
    "poll_symbol": ""
  },
  "0x1e83c7": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x1e83c7>",
    "poll_symbol": ""
  },
  "0x1e8406": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x1e8406>",
    "poll_symbol": ""
  },
  "0x1e843c": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1e843c>",
    "poll_symbol": ""
  },
  "0x1e8472": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x1e8472>",
    "poll_symbol": ""
  },
  "0x1e84b1": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x1e84b1>",
    "poll_symbol": ""
  },
  "0x1e92dd": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1e92dd>",
    "poll_symbol": ""
  },
  "0x1e931c": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1e931c>",
    "poll_symbol": ""
  },
  "0x1e9352": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x1e9352>",
    "poll_symbol": ""
  },
  "0x1e9391": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x1e9391>",
    "poll_symbol": ""
  },
  "0x1e93c7": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x1e93c7>",
    "poll_symbol": ""
  },
  "0x1e9406": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x1e9406>",
    "poll_symbol": ""
  },
  "0x1e96b8": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x1e96b8>",
    "poll_symbol": ""
  },
  "0x1e96f7": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x1e96f7>",
    "poll_symbol": ""
  },
  "0x1e9a3f": {
    "name": "Dropper<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1e9a63": {
    "name": "{closure_env#0}<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global, hyper_util::client::legacy::pool::{impl#6}::clean_waiters::{closure_env#0}<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>>",
    "poll_symbol": ""
  },
  "0x1e9ad3": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1e9ad3>",
    "poll_symbol": ""
  },
  "0x1ea389": {
    "name": "Dropper<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1ea389>",
    "poll_symbol": ""
  },
  "0x1eb107": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x1eb107>",
    "poll_symbol": ""
  },
  "0x1eb358": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x1eb358>",
    "poll_symbol": ""
  },
  "0x1eb6e1": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1eb6e1>",
    "poll_symbol": ""
  },
  "0x1eb70b": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1eb70b>",
    "poll_symbol": ""
  },
  "0x1ec5fa": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1ec5fa>",
    "poll_symbol": ""
  },
  "0x1ec6f8": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x1ec6f8>",
    "poll_symbol": ""
  },
  "0x1ec716": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ec716>",
    "poll_symbol": ""
  },
  "0x1ec734": {
    "name": "IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>><0x1ec734>",
    "poll_symbol": ""
  },
  "0x1ec753": {
    "name": "IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>><0x1ec753>",
    "poll_symbol": ""
  },
  "0x1ec771": {
    "name": "IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x1ec771>",
    "poll_symbol": ""
  },
  "0x1ec78f": {
    "name": "IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x1ec78f>",
    "poll_symbol": ""
  },
  "0x1ec7ae": {
    "name": "IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>><0x1ec7ae>",
    "poll_symbol": ""
  },
  "0x1ec7d2": {
    "name": "Projection<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x1ec847": {
    "name": "Projection<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}><0x1ec847>",
    "poll_symbol": ""
  },
  "0x1ec86e": {
    "name": "Projection<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}><0x1ec86e>",
    "poll_symbol": ""
  },
  "0x1ec895": {
    "name": "Projection<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x1ec8e3": {
    "name": "Projection<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x1ec90a": {
    "name": "Projection<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x1ec9b8": {
    "name": "MapErr<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}><0x1ec9b8>",
    "poll_symbol": ""
  },
  "0x1eca34": {
    "name": "MapErr<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}><0x1eca34>",
    "poll_symbol": ""
  },
  "0x1ecab0": {
    "name": "MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1ecab0>",
    "poll_symbol": ""
  },
  "0x1ecb2d": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1ecb2d>",
    "poll_symbol": ""
  },
  "0x1ecbc5": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x1ecbc5>",
    "poll_symbol": ""
  },
  "0x1ecc42": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x1ecc42>",
    "poll_symbol": ""
  },
  "0x1ecd71": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ecd71>",
    "poll_symbol": ""
  },
  "0x1ecd9d": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ecd9d>",
    "poll_symbol": ""
  },
  "0x1ece1f": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ece1f>",
    "poll_symbol": ""
  },
  "0x1ecea2": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ecea2>",
    "poll_symbol": ""
  },
  "0x1ecf25": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x1ecf25>",
    "poll_symbol": ""
  },
  "0x1ecfa4": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x1ecfa4>",
    "poll_symbol": ""
  },
  "0x1ed023": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ed023>",
    "poll_symbol": ""
  },
  "0x1ed0a6": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ed0a6>",
    "poll_symbol": ""
  },
  "0x1ed125": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1ed125>",
    "poll_symbol": ""
  },
  "0x1ed1a8": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1ed1a8>",
    "poll_symbol": ""
  },
  "0x1ed227": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1ed227>",
    "poll_symbol": ""
  },
  "0x1ed2ab": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ed2ab>",
    "poll_symbol": ""
  },
  "0x1ed2d3": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ed2d3>",
    "poll_symbol": ""
  },
  "0x1ed2fb": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x1ed2fb>",
    "poll_symbol": ""
  },
  "0x1ed322": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x1ed322>",
    "poll_symbol": ""
  },
  "0x1ed349": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ed349>",
    "poll_symbol": ""
  },
  "0x1ed371": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ed371>",
    "poll_symbol": ""
  },
  "0x1ed4a3": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1ed4a3>",
    "poll_symbol": ""
  },
  "0x1ed4cb": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1ed4cb>",
    "poll_symbol": ""
  },
  "0x1ed4f2": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1ed4f2>",
    "poll_symbol": ""
  },
  "0x1ed520": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x1ed520>",
    "poll_symbol": ""
  },
  "0x1ed5a2": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x1ed5a2>",
    "poll_symbol": ""
  },
  "0x1ed621": {
    "name": "Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut tokio::time::sleep::Sleep>), ((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x1ed621>",
    "poll_symbol": ""
  },
  "0x1ed6a0": {
    "name": "Either<(core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::pool::Error>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>), (core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>, hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>)>",
    "poll_symbol": ""
  },
  "0x1ed722": {
    "name": "Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>), (core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)>",
    "poll_symbol": ""
  },
  "0x1edc30": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>><0x1edc30>",
    "poll_symbol": ""
  },
  "0x1edc57": {
    "name": "Select<hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": ""
  },
  "0x1edc7f": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>><0x1edc7f>",
    "poll_symbol": ""
  },
  "0x1eef21": {
    "name": "ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x1eef21>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x1ef248": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x1ef248>",
    "poll_symbol": ""
  },
  "0x1ef26f": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x1ef26f>",
    "poll_symbol": ""
  },
  "0x1ef42d": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x1ef42d>",
    "poll_symbol": ""
  },
  "0x1ef454": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x1ef454>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x1ef50a": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x1ef50a>",
    "poll_symbol": ""
  },
  "0x1ef535": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x1ef535>",
    "poll_symbol": ""
  },
  "0x1ef53c": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x1ef53c>",
    "poll_symbol": ""
  },
  "0x1f3759": {
    "name": "(&mut [futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>], &mut [futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>])",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h2e71021a18a94d6fE"
  },
  "0x1f3777": {
    "name": "&mut [futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>]",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h2e71021a18a94d6fE"
  },
  "0x1f37df": {
    "name": "*mut [futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>]",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h2e71021a18a94d6fE"
  },
  "0x1f5ecb": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x1f5ecb>",
    "poll_symbol": ""
  },
  "0x1f5ef2": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x1f5ef2>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x1f63d3": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)<0x1f63d3>",
    "poll_symbol": ""
  },
  "0x1f646d": {
    "name": "(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)",
    "poll_symbol": ""
  },
  "0x1f648c": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x1f648c>",
    "poll_symbol": ""
  },
  "0x1f660e": {
    "name": "((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x1f660e>",
    "poll_symbol": ""
  },
  "0x1f662c": {
    "name": "(core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::pool::Error>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)",
    "poll_symbol": ""
  },
  "0x1f6669": {
    "name": "(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)",
    "poll_symbol": ""
  },
  "0x1f6dfd": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x1f6dfd>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x1f9081": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1f9081>",
    "poll_symbol": ""
  },
  "0x1f90b4": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1f90b4>",
    "poll_symbol": ""
  },
  "0x1f91e1": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1f91e1>",
    "poll_symbol": ""
  },
  "0x1f921d": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x1f921d>",
    "poll_symbol": ""
  },
  "0x1f923b": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1f923b>",
    "poll_symbol": ""
  },
  "0x1f9856": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x1f9856>",
    "poll_symbol": ""
  },
  "0x1f98ce": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1f98ce>",
    "poll_symbol": ""
  },
  "0x1f98ec": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1f98ec>",
    "poll_symbol": ""
  },
  "0x1f990a": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x1f990a>",
    "poll_symbol": ""
  },
  "0x1f9a36": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1f9a36>",
    "poll_symbol": ""
  },
  "0x1f9a54": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1f9a54>",
    "poll_symbol": ""
  },
  "0x1fa3ea": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x1fa3ea>",
    "poll_symbol": ""
  },
  "0x1fa456": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1fa456>",
    "poll_symbol": ""
  },
  "0x1fa468": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1fa468>",
    "poll_symbol": ""
  },
  "0x1fa47a": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x1fa47a>",
    "poll_symbol": ""
  },
  "0x1fa620": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1fa620>",
    "poll_symbol": ""
  },
  "0x1fa632": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1fa632>",
    "poll_symbol": ""
  },
  "0x1fa644": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x1fa644>",
    "poll_symbol": ""
  },
  "0x1fa656": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1fa656>",
    "poll_symbol": ""
  },
  "0x1fb324": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x1fb324>",
    "poll_symbol": ""
  },
  "0x1fb3e7": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1fb3e7>",
    "poll_symbol": ""
  },
  "0x1fbb2d": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x1fbb2d>",
    "poll_symbol": ""
  },
  "0x1fc691": {
    "name": "Option<tokio_native_tls::StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>><0x1fc691>",
    "poll_symbol": ""
  },
  "0x1fd8a8": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1fd8e4": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x1fd8e4>",
    "poll_symbol": ""
  },
  "0x1fd902": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global>><0x1fd902>",
    "poll_symbol": ""
  },
  "0x1fd920": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::rt::io::read::{async_fn#0}::{closure_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>>",
    "poll_symbol": ""
  },
  "0x1fd95d": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::rt::io::write_all::{async_fn#0}::{closure_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>>",
    "poll_symbol": ""
  },
  "0x1fd99a": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x1fd99a>",
    "poll_symbol": ""
  },
  "0x1fd9b8": {
    "name": "Pin<&mut futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x1fda15": {
    "name": "Pin<&mut tower_http::follow_redirect::ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy>>",
    "poll_symbol": ""
  },
  "0x1fda33": {
    "name": "Pin<alloc::boxed::Box<reqwest::async_impl::client::{impl#0}::call::{async_block_env#0}, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1fda51": {
    "name": "Pin<&mut hyper_util::client::legacy::client::ResponseFuture>",
    "poll_symbol": ""
  },
  "0x1fdaac": {
    "name": "Pin<&mut reqwest::async_impl::client::ResponseFuture>",
    "poll_symbol": ""
  },
  "0x1fdb63": {
    "name": "Pin<&reqwest::async_impl::client::ResponseFuture>",
    "poll_symbol": ""
  },
  "0x1fdbfa": {
    "name": "Pin<&mut reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}><0x1fdbfa>",
    "poll_symbol": ""
  },
  "0x1fdc74": {
    "name": "Pin<&mut tokio_native_tls::{impl#12}::connect::{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>>",
    "poll_symbol": ""
  },
  "0x1fdcb1": {
    "name": "Pin<&mut tokio::time::timeout::Timeout<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>><0x1fdcb1>",
    "poll_symbol": ""
  },
  "0x1fdcee": {
    "name": "Pin<&mut reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}><0x1fdcee>",
    "poll_symbol": ""
  },
  "0x1fdd2b": {
    "name": "Pin<&mut tokio::time::timeout::Timeout<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>><0x1fdd2b>",
    "poll_symbol": ""
  },
  "0x1fdd68": {
    "name": "Pin<alloc::boxed::Box<reqwest::connect::with_timeout::{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1fdd86": {
    "name": "Pin<alloc::boxed::Box<reqwest::connect::with_timeout::{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x1fdda4": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x1fdda4>",
    "poll_symbol": ""
  },
  "0x1fddc2": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x1fddc2>",
    "poll_symbol": ""
  },
  "0x1fdde0": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x1fdde0>",
    "poll_symbol": ""
  },
  "0x1fddfe": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x1fde1c": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::connect::dns::resolve::{async_fn#0}::{closure_env#0}<reqwest::dns::resolve::DynResolver>>>",
    "poll_symbol": ""
  },
  "0x1fde3a": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x201cc0": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x201cc0>",
    "poll_symbol": ""
  },
  "0x2021fd": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x2021fd>",
    "poll_symbol": ""
  },
  "0x20223c": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x20223c>",
    "poll_symbol": ""
  },
  "0x2023d1": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x2023d1>",
    "poll_symbol": ""
  },
  "0x202410": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x202410>",
    "poll_symbol": ""
  },
  "0x20244f": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x20244f>",
    "poll_symbol": ""
  },
  "0x202485": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x202485>",
    "poll_symbol": ""
  },
  "0x2024bb": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x2024bb>",
    "poll_symbol": ""
  },
  "0x2024fa": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x2024fa>",
    "poll_symbol": ""
  },
  "0x2028a7": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2028a7>",
    "poll_symbol": ""
  },
  "0x2028e6": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x2028e6>",
    "poll_symbol": ""
  },
  "0x20291c": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x20291c>",
    "poll_symbol": ""
  },
  "0x20295b": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x20295b>",
    "poll_symbol": ""
  },
  "0x2033f5": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2033f5>",
    "poll_symbol": ""
  },
  "0x203ad7": {
    "name": "<reqwest::async_impl::client::{impl#0}::call::{async_block_env#0} as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x203b28": {
    "name": "{async_block_env#0}<0x203b28>",
    "poll_symbol": ""
  },
  "0x2048f4": {
    "name": "ResponseFuture<0x2048f4>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x206528": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x20664b": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x206ae9": {
    "name": "{async_fn_env#0}<0x206ae9>",
    "poll_symbol": ""
  },
  "0x206e74": {
    "name": "{async_fn_env#0}<0x206e74>",
    "poll_symbol": ""
  },
  "0x2083d5": {
    "name": "ResponseFuture<0x2083d5>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x208c13": {
    "name": "SyncWrapper<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2091ee": {
    "name": "{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>",
    "poll_symbol": ""
  },
  "0x2094d0": {
    "name": "{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x2094d0>",
    "poll_symbol": ""
  },
  "0x209e6f": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x209e6f>",
    "poll_symbol": ""
  },
  "0x209f3e": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x209f3e>",
    "poll_symbol": ""
  },
  "0x20bac0": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x20bac0>",
    "poll_symbol": ""
  },
  "0x20bae7": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x20bae7>",
    "poll_symbol": ""
  },
  "0x20bb55": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x20bb55>",
    "poll_symbol": ""
  },
  "0x20bb5c": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x20bb5c>",
    "poll_symbol": ""
  },
  "0x20c6d4": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x20c6d4>",
    "poll_symbol": ""
  },
  "0x20c92b": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x20c92b>",
    "poll_symbol": ""
  },
  "0x20cbc5": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x20cbc5>",
    "poll_symbol": ""
  },
  "0x20cbef": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x20cbef>",
    "poll_symbol": ""
  },
  "0x21099d": {
    "name": "Timeout<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}><0x21099d>",
    "poll_symbol": ""
  },
  "0x2109c8": {
    "name": "Timeout<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}><0x2109c8>",
    "poll_symbol": ""
  },
  "0x210d80": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x210d80>",
    "poll_symbol": ""
  },
  "0x210db8": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x210ddf": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x21150a": {
    "name": "<reqwest::connect::with_timeout::{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x211b51": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x211b51>",
    "poll_symbol": ""
  },
  "0x211b78": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x211b78>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x211b92": {
    "name": "<reqwest::connect::with_timeout::{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x211c43": {
    "name": "{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x211c43>",
    "poll_symbol": ""
  },
  "0x211d7f": {
    "name": "{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x211d7f>",
    "poll_symbol": ""
  },
  "0x211ead": {
    "name": "StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x211ead>",
    "poll_symbol": ""
  },
  "0x211ed4": {
    "name": "StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x211ed4>",
    "poll_symbol": ""
  },
  "0x211ffc": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global><0x211ffc>",
    "poll_symbol": ""
  },
  "0x212023": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)<0x212023>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x212766": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x212766>",
    "poll_symbol": ""
  },
  "0x2128a2": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x2128a2>",
    "poll_symbol": ""
  },
  "0x2128ce": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x2128ce>",
    "poll_symbol": ""
  },
  "0x21294d": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x21294d>",
    "poll_symbol": ""
  },
  "0x2129cd": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x2129cd>",
    "poll_symbol": ""
  },
  "0x212aad": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x212aad>",
    "poll_symbol": ""
  },
  "0x212ad4": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x212ad4>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x216a57": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x216a57>",
    "poll_symbol": ""
  },
  "0x216a7e": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x216a7e>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x216ae0": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x216ae0>",
    "poll_symbol": ""
  },
  "0x216b07": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x216b07>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x217099": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x217099>",
    "poll_symbol": ""
  },
  "0x2170c1": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2170c1>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h9f5b4f64f11deecbE"
  },
  "0x21764a": {
    "name": "{async_fn_env#0}<0x21764a>",
    "poll_symbol": ""
  },
  "0x2177b4": {
    "name": "{async_block_env#0}<0x2177b4>",
    "poll_symbol": ""
  },
  "0x217cb1": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x217cb1>",
    "poll_symbol": ""
  },
  "0x2187bc": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x2187bc>",
    "poll_symbol": ""
  },
  "0x2187fb": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x2187fb>",
    "poll_symbol": ""
  },
  "0x21883a": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x21883a>",
    "poll_symbol": ""
  },
  "0x218870": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x218870>",
    "poll_symbol": ""
  },
  "0x2188a6": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x2188a6>",
    "poll_symbol": ""
  },
  "0x2188e5": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x2188e5>",
    "poll_symbol": ""
  },
  "0x218e66": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x218e66>",
    "poll_symbol": ""
  },
  "0x218ea5": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x218ea5>",
    "poll_symbol": ""
  },
  "0x218edb": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x218edb>",
    "poll_symbol": ""
  },
  "0x218f1a": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x218f1a>",
    "poll_symbol": ""
  },
  "0x218f50": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x218f50>",
    "poll_symbol": ""
  },
  "0x218f8f": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x218f8f>",
    "poll_symbol": ""
  },
  "0x21902e": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x21902e>",
    "poll_symbol": ""
  },
  "0x21906d": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x21906d>",
    "poll_symbol": ""
  },
  "0x21a4e0": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x21a4e0>",
    "poll_symbol": ""
  },
  "0x21a868": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x21a868>",
    "poll_symbol": ""
  },
  "0x21b014": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x21b014>",
    "poll_symbol": ""
  },
  "0x21b032": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x21b032>",
    "poll_symbol": ""
  },
  "0x21b050": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x21b050>",
    "poll_symbol": ""
  },
  "0x21b1f4": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x21b1f4>",
    "poll_symbol": ""
  },
  "0x21b212": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x21b212>",
    "poll_symbol": ""
  },
  "0x21b230": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x21b230>",
    "poll_symbol": ""
  },
  "0x21b26c": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x21b26c>",
    "poll_symbol": ""
  },
  "0x21b9fd": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x21b9fd>",
    "poll_symbol": ""
  },
  "0x21ba1b": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x21ba1b>",
    "poll_symbol": ""
  },
  "0x21ba63": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x21ba63>",
    "poll_symbol": ""
  },
  "0x21bb48": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x21bb48>",
    "poll_symbol": ""
  },
  "0x21bb84": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x21bb84>",
    "poll_symbol": ""
  },
  "0x21bbde": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x21bbde>",
    "poll_symbol": ""
  },
  "0x21bbfc": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x21bbfc>",
    "poll_symbol": ""
  },
  "0x21c607": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x21c607>",
    "poll_symbol": ""
  },
  "0x21c619": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x21c619>",
    "poll_symbol": ""
  },
  "0x21c62b": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x21c62b>",
    "poll_symbol": ""
  },
  "0x21c84f": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x21c84f>",
    "poll_symbol": ""
  },
  "0x21c861": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x21c861>",
    "poll_symbol": ""
  },
  "0x21c873": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x21c873>",
    "poll_symbol": ""
  },
  "0x21c885": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x21c885>",
    "poll_symbol": ""
  },
  "0x21c897": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x21c897>",
    "poll_symbol": ""
  },
  "0x21c8cd": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x21c8cd>",
    "poll_symbol": ""
  },
  "0x21d9b4": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x21d9b4>",
    "poll_symbol": ""
  },
  "0x21da77": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x21da77>",
    "poll_symbol": ""
  },
  "0x21e4ce": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x21e4ce>",
    "poll_symbol": ""
  },
  "0x21e52f": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x21e52f>",
    "poll_symbol": ""
  },
  "0x21e776": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x21e776>",
    "poll_symbol": ""
  },
  "0x21e9bc": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x21e9bc>",
    "poll_symbol": ""
  },
  "0x21f585": {
    "name": "Option<tokio_native_tls::StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>><0x21f585>",
    "poll_symbol": ""
  },
  "0x21f6b6": {
    "name": "Option<tokio_native_tls::StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": ""
  },
  "0x21fe4e": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>><0x21fe4e>",
    "poll_symbol": ""
  },
  "0x21feaf": {
    "name": "Option<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x21feaf>",
    "poll_symbol": ""
  },
  "0x21ff11": {
    "name": "Option<futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x21ff11>",
    "poll_symbol": ""
  },
  "0x220652": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)><0x220652>",
    "poll_symbol": ""
  },
  "0x2206b3": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x2206b3>",
    "poll_symbol": ""
  },
  "0x220714": {
    "name": "Option<(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)><0x220714>",
    "poll_symbol": ""
  },
  "0x220778": {
    "name": "Option<futures_channel::mpsc::Sender<core::convert::Infallible>><0x220778>",
    "poll_symbol": ""
  },
  "0x221590": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x221590>",
    "poll_symbol": ""
  },
  "0x221666": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x221666>",
    "poll_symbol": ""
  },
  "0x2216e0": {
    "name": "Pin<&mut tokio_native_tls::handshake::{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>>",
    "poll_symbol": ""
  },
  "0x22171d": {
    "name": "Pin<&mut tokio_native_tls::handshake::{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": ""
  },
  "0x2217d4": {
    "name": "Pin<&mut tokio_native_tls::StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>>",
    "poll_symbol": ""
  },
  "0x22186d": {
    "name": "Pin<&mut tokio_native_tls::StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": ""
  },
  "0x221906": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x221906>",
    "poll_symbol": ""
  },
  "0x221962": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x221962>",
    "poll_symbol": ""
  },
  "0x223c05": {
    "name": "Pin<&mut futures_util::stream::stream::into_future::StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>>>",
    "poll_symbol": ""
  },
  "0x223c9f": {
    "name": "Pin<&futures_util::stream::stream::into_future::StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>>>",
    "poll_symbol": ""
  },
  "0x223cdc": {
    "name": "Pin<&mut futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x223cdc>",
    "poll_symbol": ""
  },
  "0x223d19": {
    "name": "Pin<&futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x223f41": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x223f41>",
    "poll_symbol": ""
  },
  "0x2240b0": {
    "name": "Pin<&reqwest::async_impl::client::ResponseFuture><0x2240b0>",
    "poll_symbol": ""
  },
  "0x2242d8": {
    "name": "Pin<&mut futures_channel::mpsc::Receiver<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x224353": {
    "name": "Pin<&futures_channel::mpsc::Receiver<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x224448": {
    "name": "Pin<&mut futures_channel::oneshot::Receiver<core::convert::Infallible>><0x224448>",
    "poll_symbol": ""
  },
  "0x224485": {
    "name": "Pin<&futures_channel::oneshot::Receiver<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x224727": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x224764": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x224764>",
    "poll_symbol": ""
  },
  "0x2247c0": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x2247de": {
    "name": "Pin<&mut core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>",
    "poll_symbol": ""
  },
  "0x22481b": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}><0x22481b>",
    "poll_symbol": ""
  },
  "0x2248b4": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2248f1": {
    "name": "Pin<&mut hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x22490f": {
    "name": "Pin<&mut core::pin::Pin<&mut futures_util::stream::stream::into_future::StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>>>>",
    "poll_symbol": ""
  },
  "0x22494c": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x224989": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global>><0x224989>",
    "poll_symbol": ""
  },
  "0x2249e5": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x224a03": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x224a03>",
    "poll_symbol": ""
  },
  "0x224a40": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x224a5e": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global>>><0x224a5e>",
    "poll_symbol": ""
  },
  "0x224a9b": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global>><0x224a9b>",
    "poll_symbol": ""
  },
  "0x224af7": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x224b52": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x224b8f": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=()> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x224c46": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x224c83": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": ""
  },
  "0x224d3a": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x224e10": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x224e4d": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x224e4d>",
    "poll_symbol": ""
  },
  "0x224ea9": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x224ec7": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x224ec7>",
    "poll_symbol": ""
  },
  "0x224f7f": {
    "name": "Pin<&mut futures_util::future::poll_fn::PollFn<hyper::client::conn::http2::{impl#1}::ready::{async_fn#0}::{closure_env#0}<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x224fdb": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::rt::io::write_all::{async_fn#0}::{closure_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>><0x224fdb>",
    "poll_symbol": ""
  },
  "0x225037": {
    "name": "Pin<&mut futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>",
    "poll_symbol": ""
  },
  "0x22514b": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::rt::io::read::{async_fn#0}::{closure_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>><0x22514b>",
    "poll_symbol": ""
  },
  "0x225373": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x225373>",
    "poll_symbol": ""
  },
  "0x22542b": {
    "name": "Pin<&mut futures_util::future::select::Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>>><0x22542b>",
    "poll_symbol": ""
  },
  "0x225487": {
    "name": "Pin<&mut core::option::Option<futures_channel::oneshot::Sender<core::convert::Infallible>>>",
    "poll_symbol": ""
  },
  "0x22559b": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::connect::dns::resolve::{async_fn#0}::{closure_env#0}<reqwest::dns::resolve::DynResolver>>><0x22559b>",
    "poll_symbol": ""
  },
  "0x22587b": {
    "name": "Pin<&mut futures_util::future::select::Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>><0x22587b>",
    "poll_symbol": ""
  },
  "0x225933": {
    "name": "Pin<&mut futures_util::future::poll_fn::PollFn<hyper::client::conn::http1::{impl#1}::ready::{async_fn#0}::{closure_env#0}<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x2259eb": {
    "name": "Pin<&mut futures_util::future::select::Select<hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>><0x2259eb>",
    "poll_symbol": ""
  },
  "0x225a47": {
    "name": "Pin<&mut core::option::Option<futures_channel::mpsc::Sender<core::convert::Infallible>>>",
    "poll_symbol": ""
  },
  "0x225c2e": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x225c6a": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x225ce4": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x225d21": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x225d5e": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x225d9b": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x225dd7": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>>",
    "poll_symbol": ""
  },
  "0x225df5": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x225e31": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x225e6d": {
    "name": "ManuallyDrop<hyper_util::common::lazy::Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": ""
  },
  "0x225eaa": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>>",
    "poll_symbol": ""
  },
  "0x225f04": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x225f41": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x2265ab": {
    "name": "Poll<(core::option::Option<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)><0x2265ab>",
    "poll_symbol": ""
  },
  "0x227e93": {
    "name": "Result<futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::Error><0x227e93>",
    "poll_symbol": ""
  },
  "0x228a17": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, hyper_util::client::legacy::connect::http::ConnectError>, hyper_util::client::legacy::connect::http::connect::{async_block_env#0}><0x228a17>",
    "poll_symbol": ""
  },
  "0x22abe8": {
    "name": "ResponseFuture<0x22abe8>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x22c76f": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x22c76f>",
    "poll_symbol": ""
  },
  "0x22c835": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x22c835>",
    "poll_symbol": ""
  },
  "0x230c56": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x230c56>",
    "poll_symbol": ""
  },
  "0x230d66": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x230d66>",
    "poll_symbol": ""
  },
  "0x230e4d": {
    "name": "ResponseFuture<0x230e4d>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x231dbd": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x231dbd>",
    "poll_symbol": ""
  },
  "0x2324f5": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x2324f5>",
    "poll_symbol": ""
  },
  "0x23268e": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x23268e>",
    "poll_symbol": ""
  },
  "0x2327bd": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x2327bd>",
    "poll_symbol": ""
  },
  "0x23294e": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x23294e>",
    "poll_symbol": ""
  },
  "0x23304a": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x23304a>",
    "poll_symbol": ""
  },
  "0x23426a": {
    "name": "{closure_env#0}<tokio::task::spawn::spawn_inner::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>, tokio::runtime::task::join::JoinHandle<()>>",
    "poll_symbol": ""
  },
  "0x23427d": {
    "name": "{closure_env#0}<tokio::task::spawn::spawn_inner::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>, tokio::runtime::task::join::JoinHandle<()>>",
    "poll_symbol": ""
  },
  "0x23430f": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>>>",
    "poll_symbol": ""
  },
  "0x234322": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<tokio::net::tcp::stream::TcpStream, std::io::error::Error>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}>>>",
    "poll_symbol": ""
  },
  "0x234335": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>>>",
    "poll_symbol": ""
  },
  "0x2355c0": {
    "name": "{async_fn_env#0}<0x2355c0>",
    "poll_symbol": ""
  },
  "0x2356a6": {
    "name": "{async_fn_env#0}<0x2356a6>",
    "poll_symbol": ""
  },
  "0x2357ef": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>>",
    "poll_symbol": ""
  },
  "0x235802": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<tokio::net::tcp::stream::TcpStream, std::io::error::Error>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}>>",
    "poll_symbol": ""
  },
  "0x235815": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>>",
    "poll_symbol": ""
  },
  "0x235834": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x235852": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x235f73": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x235fc1": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x236011": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x236061": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x2360b1": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x236101": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x23614f": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>>",
    "poll_symbol": ""
  },
  "0x23619d": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x2361eb": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x236239": {
    "name": "UnsafeOverwriteGuard<hyper_util::common::lazy::Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": ""
  },
  "0x236289": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>>",
    "poll_symbol": ""
  },
  "0x2362d7": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x236327": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x236375": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x2363b2": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x2363ef": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>>",
    "poll_symbol": ""
  },
  "0x23642c": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x236469": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>>",
    "poll_symbol": ""
  },
  "0x2364a6": {
    "name": "UnsafeDropInPlaceGuard<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x2364e3": {
    "name": "UnsafeDropInPlaceGuard<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x236520": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>>",
    "poll_symbol": ""
  },
  "0x23655d": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x23659a": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>>",
    "poll_symbol": ""
  },
  "0x2365d7": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x236614": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x236651": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x236aff": {
    "name": "{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x236aff>",
    "poll_symbol": ""
  },
  "0x236d06": {
    "name": "{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>",
    "poll_symbol": ""
  },
  "0x23700e": {
    "name": "{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x23700e>",
    "poll_symbol": ""
  },
  "0x23713b": {
    "name": "{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>",
    "poll_symbol": ""
  },
  "0x2375bb": {
    "name": "StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x2375bb>",
    "poll_symbol": ""
  },
  "0x2375e2": {
    "name": "StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x2375e2>",
    "poll_symbol": ""
  },
  "0x2378b2": {
    "name": "StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>",
    "poll_symbol": ""
  },
  "0x2378d9": {
    "name": "StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>",
    "poll_symbol": ""
  },
  "0x239799": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x239799>",
    "poll_symbol": ""
  },
  "0x2397b7": {
    "name": "IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>><0x2397b7>",
    "poll_symbol": ""
  },
  "0x2397d6": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2397d6>",
    "poll_symbol": ""
  },
  "0x2397f4": {
    "name": "IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x2397f4>",
    "poll_symbol": ""
  },
  "0x239813": {
    "name": "IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>><0x239813>",
    "poll_symbol": ""
  },
  "0x239831": {
    "name": "IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x239831>",
    "poll_symbol": ""
  },
  "0x23984f": {
    "name": "IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>><0x23984f>",
    "poll_symbol": ""
  },
  "0x239896": {
    "name": "MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x239896>",
    "poll_symbol": ""
  },
  "0x2398be": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x2398be>",
    "poll_symbol": ""
  },
  "0x239916": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x239916>",
    "poll_symbol": ""
  },
  "0x23993e": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x23993e>",
    "poll_symbol": ""
  },
  "0x23996b": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x23996b>",
    "poll_symbol": ""
  },
  "0x239a3f": {
    "name": "MapErr<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}><0x239a3f>",
    "poll_symbol": ""
  },
  "0x239a66": {
    "name": "MapErr<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}><0x239a66>",
    "poll_symbol": ""
  },
  "0x23a064": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x23a064>",
    "poll_symbol": ""
  },
  "0x23a0e6": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x23a0e6>",
    "poll_symbol": ""
  },
  "0x23a169": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x23a169>",
    "poll_symbol": ""
  },
  "0x23a1ec": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x23a1ec>",
    "poll_symbol": ""
  },
  "0x23a26f": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x23a26f>",
    "poll_symbol": ""
  },
  "0x23a2f2": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x23a2f2>",
    "poll_symbol": ""
  },
  "0x23a375": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x23a375>",
    "poll_symbol": ""
  },
  "0x23a3f4": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x23a3f4>",
    "poll_symbol": ""
  },
  "0x23a473": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x23a473>",
    "poll_symbol": ""
  },
  "0x23a4f2": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x23a4f2>",
    "poll_symbol": ""
  },
  "0x23a571": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x23a571>",
    "poll_symbol": ""
  },
  "0x23a5f0": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x23a5f0>",
    "poll_symbol": ""
  },
  "0x23a670": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x23a670>",
    "poll_symbol": ""
  },
  "0x23a698": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x23a698>",
    "poll_symbol": ""
  },
  "0x23a6bf": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x23a6bf>",
    "poll_symbol": ""
  },
  "0x23a6e7": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x23a6e7>",
    "poll_symbol": ""
  },
  "0x23a70f": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x23a70f>",
    "poll_symbol": ""
  },
  "0x23a736": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x23a736>",
    "poll_symbol": ""
  },
  "0x23a75d": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x23a75d>",
    "poll_symbol": ""
  },
  "0x23a784": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x23a784>",
    "poll_symbol": ""
  },
  "0x23a7ac": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x23a7ac>",
    "poll_symbol": ""
  },
  "0x23a7d3": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x23a7d3>",
    "poll_symbol": ""
  },
  "0x23a7fb": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x23a7fb>",
    "poll_symbol": ""
  },
  "0x23a822": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x23a822>",
    "poll_symbol": ""
  },
  "0x23a84f": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x23a84f>",
    "poll_symbol": ""
  },
  "0x23a8d1": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x23a8d1>",
    "poll_symbol": ""
  },
  "0x23a950": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x23a950>",
    "poll_symbol": ""
  },
  "0x23aa54": {
    "name": "Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut tokio::time::sleep::Sleep>), ((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x23aa54>",
    "poll_symbol": ""
  },
  "0x23aad3": {
    "name": "Either<(core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::pool::Error>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>), (core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>, hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>)><0x23aad3>",
    "poll_symbol": ""
  },
  "0x23ab55": {
    "name": "Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>), (core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x23ab55>",
    "poll_symbol": ""
  },
  "0x23ac41": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>><0x23ac41>",
    "poll_symbol": ""
  },
  "0x23ac68": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>><0x23ac68>",
    "poll_symbol": ""
  },
  "0x23ac8f": {
    "name": "Select<hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x23ac8f>",
    "poll_symbol": ""
  },
  "0x23acc8": {
    "name": "StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x23acc8>",
    "poll_symbol": ""
  },
  "0x23ae92": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x23ae92>",
    "poll_symbol": ""
  },
  "0x23aebc": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x23aebc>",
    "poll_symbol": ""
  },
  "0x23b9b9": {
    "name": "ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x23b9b9>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x23babc": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x23babc>",
    "poll_symbol": ""
  },
  "0x23bae3": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x23bae3>",
    "poll_symbol": ""
  },
  "0x23baea": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x23baea>",
    "poll_symbol": ""
  },
  "0x23bb11": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x23bb11>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x23bd61": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x23bd61>",
    "poll_symbol": ""
  },
  "0x23bfa6": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x23bfa6>",
    "poll_symbol": ""
  },
  "0x23ccc6": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x23ccc6>",
    "poll_symbol": ""
  },
  "0x23ccf1": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x23ccf1>",
    "poll_symbol": ""
  },
  "0x23ccf8": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x23ccf8>",
    "poll_symbol": ""
  },
  "0x23ed8f": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x23ed8f>",
    "poll_symbol": ""
  },
  "0x23edb6": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x23edb6>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x24230f": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x24230f>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x242439": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x242439>",
    "poll_symbol": ""
  },
  "0x242460": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x242460>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x242a77": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x242a77>",
    "poll_symbol": ""
  },
  "0x242a9e": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x242a9e>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x242ac1": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x242d17": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global><0x242d17>",
    "poll_symbol": ""
  },
  "0x242d3e": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)<0x242d3e>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x242d61": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x242de0": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x242e43": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global><0x242e43>",
    "poll_symbol": ""
  },
  "0x242e6a": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)<0x242e6a>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x242e8d": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x242f6d": {
    "name": "&mut (dyn core::future::future::Future<Output=()> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x24305a": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x2431fa": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x2431fa>",
    "poll_symbol": ""
  },
  "0x243221": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x243221>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x243244": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x243a52": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)<0x243a52>",
    "poll_symbol": ""
  },
  "0x243f4f": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x243f4f>",
    "poll_symbol": ""
  },
  "0x2440b5": {
    "name": "(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)<0x2440b5>",
    "poll_symbol": ""
  },
  "0x245276": {
    "name": "((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x245276>",
    "poll_symbol": ""
  },
  "0x245294": {
    "name": "(core::option::Option<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)<0x245294>",
    "poll_symbol": ""
  },
  "0x2452b2": {
    "name": "(core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::pool::Error>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)<0x2452b2>",
    "poll_symbol": ""
  },
  "0x2452ef": {
    "name": "(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x2452ef>",
    "poll_symbol": ""
  },
  "0x24a1eb": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x24a1eb>",
    "poll_symbol": ""
  },
  "0x24b2e7": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x24b2e7>",
    "poll_symbol": ""
  },
  "0x24b326": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x24b326>",
    "poll_symbol": ""
  },
  "0x24b365": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x24b365>",
    "poll_symbol": ""
  },
  "0x24b39b": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x24b39b>",
    "poll_symbol": ""
  },
  "0x24b3d1": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x24b3d1>",
    "poll_symbol": ""
  },
  "0x24b410": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x24b410>",
    "poll_symbol": ""
  },
  "0x24b7bd": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x24b7bd>",
    "poll_symbol": ""
  },
  "0x24b7fc": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x24b7fc>",
    "poll_symbol": ""
  },
  "0x24b832": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x24b832>",
    "poll_symbol": ""
  },
  "0x24b871": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x24b871>",
    "poll_symbol": ""
  },
  "0x24b8a7": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x24b8a7>",
    "poll_symbol": ""
  },
  "0x24b8e6": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x24b8e6>",
    "poll_symbol": ""
  },
  "0x24bbce": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x24bbce>",
    "poll_symbol": ""
  },
  "0x24bc0d": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x24bc0d>",
    "poll_symbol": ""
  },
  "0x24bdec": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x24bdec>",
    "poll_symbol": ""
  },
  "0x24c7cc": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x24c7cc>",
    "poll_symbol": ""
  },
  "0x24c7ea": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x24c7ea>",
    "poll_symbol": ""
  },
  "0x24c808": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x24c808>",
    "poll_symbol": ""
  },
  "0x24c934": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x24c934>",
    "poll_symbol": ""
  },
  "0x24c952": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x24c952>",
    "poll_symbol": ""
  },
  "0x24c970": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x24c970>",
    "poll_symbol": ""
  },
  "0x24cb18": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x24cb36": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x24cb54": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x24cb72": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x24cd75": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x24cd75>",
    "poll_symbol": ""
  },
  "0x24e2b0": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x24e2b0>",
    "poll_symbol": ""
  },
  "0x24e2c2": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x24e2c2>",
    "poll_symbol": ""
  },
  "0x24e2d4": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x24e2d4>",
    "poll_symbol": ""
  },
  "0x24e460": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x24e460>",
    "poll_symbol": ""
  },
  "0x24e472": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x24e472>",
    "poll_symbol": ""
  },
  "0x24e484": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x24e484>",
    "poll_symbol": ""
  },
  "0x24e496": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x24e496>",
    "poll_symbol": ""
  },
  "0x24e4a8": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x24e4a8>",
    "poll_symbol": ""
  },
  "0x24e4f0": {
    "name": "PhantomData<futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x24e6a0": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x24e6a0>",
    "poll_symbol": ""
  },
  "0x24ea9d": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x24ea9d>",
    "poll_symbol": ""
  },
  "0x24eabb": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x24eabb>",
    "poll_symbol": ""
  },
  "0x24eaf7": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x24eaf7>",
    "poll_symbol": ""
  },
  "0x24ef18": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x24ef18>",
    "poll_symbol": ""
  },
  "0x24ef36": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x24ef36>",
    "poll_symbol": ""
  },
  "0x24ef54": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x24ef54>",
    "poll_symbol": ""
  },
  "0x24f137": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x24f137>",
    "poll_symbol": ""
  },
  "0x24f173": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x24f173>",
    "poll_symbol": ""
  },
  "0x24f191": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x24f191>",
    "poll_symbol": ""
  },
  "0x2500fd": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x2500fd>",
    "poll_symbol": ""
  },
  "0x2501c0": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x2501c0>",
    "poll_symbol": ""
  },
  "0x2508a2": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x2508a2>",
    "poll_symbol": ""
  },
  "0x251929": {
    "name": "Option<futures_channel::mpsc::Sender<core::convert::Infallible>><0x251929>",
    "poll_symbol": ""
  },
  "0x25198a": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x25198a>",
    "poll_symbol": ""
  },
  "0x251a4d": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>><0x251a4d>",
    "poll_symbol": ""
  },
  "0x251aae": {
    "name": "Option<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x251aae>",
    "poll_symbol": ""
  },
  "0x252128": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x252128>",
    "poll_symbol": ""
  },
  "0x252182": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x252182>",
    "poll_symbol": ""
  },
  "0x2521a0": {
    "name": "Pin<&mut hyper_util::common::lazy::Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": ""
  },
  "0x25221c": {
    "name": "Pin<&mut hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x25221c>",
    "poll_symbol": ""
  },
  "0x25223a": {
    "name": "Pin<&mut futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x252258": {
    "name": "Pin<&mut futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x252258>",
    "poll_symbol": ""
  },
  "0x252276": {
    "name": "Pin<&mut futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x252276>",
    "poll_symbol": ""
  },
  "0x252294": {
    "name": "Pin<&mut hyper::client::conn::http1::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x2522b2": {
    "name": "Pin<&mut hyper::client::conn::http2::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x2522d0": {
    "name": "Pin<&mut futures_util::future::either::Either<hyper::client::conn::http1::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>, hyper::client::conn::http2::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x252348": {
    "name": "Pin<&mut futures_util::future::either::Either<hyper::proto::h2::client::Conn<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, h2::client::Connection<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>>>>",
    "poll_symbol": ""
  },
  "0x252366": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x252366>",
    "poll_symbol": ""
  },
  "0x252384": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>><0x252384>",
    "poll_symbol": ""
  },
  "0x2523c0": {
    "name": "Pin<&mut futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>>><0x2523c0>",
    "poll_symbol": ""
  },
  "0x2523de": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>><0x2523de>",
    "poll_symbol": ""
  },
  "0x2523fc": {
    "name": "Pin<&mut futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x25241a": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}><0x25241a>",
    "poll_symbol": ""
  },
  "0x252438": {
    "name": "Pin<&mut core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>><0x252438>",
    "poll_symbol": ""
  },
  "0x252456": {
    "name": "Pin<&mut futures_util::future::either::Either<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>>",
    "poll_symbol": ""
  },
  "0x252474": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x252474>",
    "poll_symbol": ""
  },
  "0x252492": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x252492>",
    "poll_symbol": ""
  },
  "0x2524ed": {
    "name": "Pin<&mut core::option::Option<futures_channel::mpsc::Sender<core::convert::Infallible>>><0x2524ed>",
    "poll_symbol": ""
  },
  "0x252565": {
    "name": "Pin<&mut futures_util::stream::stream::into_future::StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>>><0x252565>",
    "poll_symbol": ""
  },
  "0x252583": {
    "name": "Pin<&mut core::option::Option<futures_channel::oneshot::Sender<core::convert::Infallible>>><0x252583>",
    "poll_symbol": ""
  },
  "0x2525fb": {
    "name": "Pin<&mut h2::client::ResponseFuture>",
    "poll_symbol": ""
  },
  "0x252673": {
    "name": "Pin<&mut hyper::proto::h2::client::H2ClientFuture<reqwest::async_impl::body::Body, reqwest::connect::sealed::Conn>>",
    "poll_symbol": ""
  },
  "0x252691": {
    "name": "Pin<&mut h2::client::{impl#6}::handshake2::{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>>>",
    "poll_symbol": ""
  },
  "0x2526ce": {
    "name": "Pin<&mut hyper::proto::h2::client::handshake::{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>",
    "poll_symbol": ""
  },
  "0x252748": {
    "name": "Pin<&mut futures_util::future::poll_fn::PollFn<hyper::client::conn::http2::{impl#1}::ready::{async_fn#0}::{closure_env#0}<reqwest::async_impl::body::Body>>><0x252748>",
    "poll_symbol": ""
  },
  "0x252785": {
    "name": "Pin<alloc::boxed::Box<tower::util::map_err::MapErrFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x2527a3": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x2527c1": {
    "name": "Pin<alloc::boxed::Box<tower::util::map_err::MapErrFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x2544b6": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x2544f2": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x2545a6": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x2545e2": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x25461e": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x25465a": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x254696": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x2546d2": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x25470e": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x25474a": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x254786": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x2547c2": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x2547fe": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x25483a": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x254876": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x2548b2": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x25492a": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x254966": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x2549a2": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x254a56": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x254a92": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x254ace": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x254b0a": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x254b82": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x254ce4": {
    "name": "ManuallyDrop<hyper_util::common::lazy::Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x254ce4>",
    "poll_symbol": ""
  },
  "0x25534d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x25536b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2553c5": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x255401": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x25541f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x25543d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x25545b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x255479": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x255497": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2554b5": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2554d3": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2554f1": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x25550f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x25552d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x25554b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x255569": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2555a5": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2555c3": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2555e1": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x25561d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x25563b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x255659": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x255677": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2556b3": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x2557b4": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, hyper_util::client::legacy::connect::http::ConnectError>, hyper_util::client::legacy::connect::http::connect::{async_block_env#0}><0x2557b4>",
    "poll_symbol": ""
  },
  "0x256d6c": {
    "name": "{async_fn_env#0}<0x256d6c>",
    "poll_symbol": ""
  },
  "0x256f03": {
    "name": "{async_block_env#0}<0x256f03>",
    "poll_symbol": ""
  },
  "0x257375": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x257375>",
    "poll_symbol": ""
  },
  "0x257bdb": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x257bdb>",
    "poll_symbol": ""
  },
  "0x257c2b": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x257c2b>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h9f5b4f64f11deecbE"
  },
  "0x257d31": {
    "name": "Projection<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x257d59": {
    "name": "InnerProjReplace<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x257e05": {
    "name": "InnerProj<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x25817a": {
    "name": "<tower::util::map_future::MapFuture<tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>>> as tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable>>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x2581d7": {
    "name": "MapFuture<tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x2581d7>",
    "poll_symbol": ""
  },
  "0x25820a": {
    "name": "MapFuture<tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>>>",
    "poll_symbol": ""
  },
  "0x25823d": {
    "name": "MapFuture<tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x25823d>",
    "poll_symbol": ""
  },
  "0x2582dc": {
    "name": "MapErrFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}><0x2582dc>",
    "poll_symbol": ""
  },
  "0x258303": {
    "name": "MapErrFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}><0x258303>",
    "poll_symbol": ""
  },
  "0x258c36": {
    "name": "ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x258c36>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x25a27d": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x25a27d>",
    "poll_symbol": ""
  },
  "0x25a2a4": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x25a2a4>",
    "poll_symbol": ""
  },
  "0x25a2d8": {
    "name": "<tower::util::map_future::MapFuture<tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>>> as tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable>>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x25aa00": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x25aa00>",
    "poll_symbol": ""
  },
  "0x25afce": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x25afce>",
    "poll_symbol": ""
  },
  "0x25e3c2": {
    "name": "<tower::util::map_future::MapFuture<tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>>> as tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable>>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x25e423": {
    "name": "<tower::util::map_err::MapErrFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x25e45b": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x25e45b>",
    "poll_symbol": ""
  },
  "0x25e482": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x25e482>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x25e529": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x25e529>",
    "poll_symbol": ""
  },
  "0x25ed11": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x25ed11>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x25ed51": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x25ed51>",
    "poll_symbol": ""
  },
  "0x25ed90": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x25ed90>",
    "poll_symbol": ""
  },
  "0x25edae": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x25edae>",
    "poll_symbol": ""
  },
  "0x25ee69": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x25ee69>",
    "poll_symbol": ""
  },
  "0x25eea8": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x25eea8>",
    "poll_symbol": ""
  },
  "0x25eec6": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x25eec6>",
    "poll_symbol": ""
  },
  "0x25ef54": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x25ef54>",
    "poll_symbol": ""
  },
  "0x25ef93": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x25ef93>",
    "poll_symbol": ""
  },
  "0x25efd2": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x25efd2>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x25f012": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x25f012>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x25f052": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x25f052>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x25f1f5": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x25f213": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x25f231": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x25f24f": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x25f26d": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x25f28b": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x25f2a9": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x25f2c7": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x25f2eb": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x25f2eb>",
    "poll_symbol": ""
  },
  "0x25f2fe": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x25f2fe>",
    "poll_symbol": ""
  },
  "0x25f311": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x25f311>",
    "poll_symbol": ""
  },
  "0x25f324": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x25f324>",
    "poll_symbol": ""
  },
  "0x25f339": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x25f365": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x25f365>",
    "poll_symbol": ""
  },
  "0x25f378": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x25f378>",
    "poll_symbol": ""
  },
  "0x25f38b": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x25f38b>",
    "poll_symbol": ""
  },
  "0x25f39e": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x25f39e>",
    "poll_symbol": ""
  },
  "0x25f3b7": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x25f3b7>",
    "poll_symbol": ""
  },
  "0x25f3d5": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x25f3d5>",
    "poll_symbol": ""
  },
  "0x25f3f3": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x25f3f3>",
    "poll_symbol": ""
  },
  "0x25f411": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x25f411>",
    "poll_symbol": ""
  },
  "0x25f42f": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x25f42f>",
    "poll_symbol": ""
  },
  "0x25f44d": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x25f44d>",
    "poll_symbol": ""
  },
  "0x25f46b": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x25f46b>",
    "poll_symbol": ""
  },
  "0x25f489": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x25f489>",
    "poll_symbol": ""
  },
  "0x25f4a8": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x25f4cf": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x25f4f6": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x26000a": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x26000a>",
    "poll_symbol": ""
  },
  "0x260028": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x260028>",
    "poll_symbol": ""
  },
  "0x260b2a": {
    "name": "{async_fn_env#0}<0x260b2a>",
    "poll_symbol": ""
  },
  "0x260c47": {
    "name": "{async_fn_env#0}<0x260c47>",
    "poll_symbol": ""
  },
  "0x2614e5": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x2614e5>",
    "poll_symbol": ""
  },
  "0x2616f1": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x2616f1>",
    "poll_symbol": ""
  },
  "0x261943": {
    "name": "MapErr<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}><0x261943>",
    "poll_symbol": ""
  },
  "0x26196f": {
    "name": "IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>><0x26196f>",
    "poll_symbol": ""
  },
  "0x26198d": {
    "name": "IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x26198d>",
    "poll_symbol": ""
  },
  "0x2619ab": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x2619ab>",
    "poll_symbol": ""
  },
  "0x2619c9": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2619c9>",
    "poll_symbol": ""
  },
  "0x2619e7": {
    "name": "IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x2619e7>",
    "poll_symbol": ""
  },
  "0x261a06": {
    "name": "IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>><0x261a06>",
    "poll_symbol": ""
  },
  "0x261a25": {
    "name": "MapErr<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}><0x261a25>",
    "poll_symbol": ""
  },
  "0x261a4c": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x261a4c>",
    "poll_symbol": ""
  },
  "0x261aa4": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x261aa4>",
    "poll_symbol": ""
  },
  "0x261acc": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x261acc>",
    "poll_symbol": ""
  },
  "0x261af9": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x261af9>",
    "poll_symbol": ""
  },
  "0x261c60": {
    "name": "MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x261c60>",
    "poll_symbol": ""
  },
  "0x261cb5": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x261cb5>",
    "poll_symbol": ""
  },
  "0x261ce1": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x261ce1>",
    "poll_symbol": ""
  },
  "0x261d60": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x261d60>",
    "poll_symbol": ""
  },
  "0x261ddf": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x261ddf>",
    "poll_symbol": ""
  },
  "0x261e61": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x261e61>",
    "poll_symbol": ""
  },
  "0x261ee4": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x261ee4>",
    "poll_symbol": ""
  },
  "0x261f67": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x261f67>",
    "poll_symbol": ""
  },
  "0x261fe7": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x261fe7>",
    "poll_symbol": ""
  },
  "0x26200e": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x26200e>",
    "poll_symbol": ""
  },
  "0x262035": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x262035>",
    "poll_symbol": ""
  },
  "0x2620a9": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2620a9>",
    "poll_symbol": ""
  },
  "0x2620d1": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2620d1>",
    "poll_symbol": ""
  },
  "0x2620fe": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x2620fe>",
    "poll_symbol": ""
  },
  "0x2621a7": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x2621a7>",
    "poll_symbol": ""
  },
  "0x26224d": {
    "name": "Either<core::pin::Pin<&mut futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, core::pin::Pin<&mut futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x2622cd": {
    "name": "Either<hyper::client::conn::http1::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>, hyper::client::conn::http2::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x262377": {
    "name": "Either<core::pin::Pin<&mut hyper::client::conn::http1::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>>, core::pin::Pin<&mut hyper::client::conn::http2::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x262520": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x262520>",
    "poll_symbol": ""
  },
  "0x2625c9": {
    "name": "Either<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, core::pin::Pin<&mut tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x262649": {
    "name": "Either<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>>, core::pin::Pin<&mut futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x2626c9": {
    "name": "Either<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>><0x2626c9>",
    "poll_symbol": ""
  },
  "0x262770": {
    "name": "Either<core::pin::Pin<&mut core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>, core::pin::Pin<&mut core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>>",
    "poll_symbol": ""
  },
  "0x2627f0": {
    "name": "Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>), (core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x2627f0>",
    "poll_symbol": ""
  },
  "0x262d0e": {
    "name": "StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x262d0e>",
    "poll_symbol": ""
  },
  "0x262d43": {
    "name": "<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x262d8e": {
    "name": "<tower::util::map_err::MapErrFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x263d43": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x263d43>",
    "poll_symbol": ""
  },
  "0x264532": {
    "name": "H2ClientFuture<reqwest::async_impl::body::Body, reqwest::connect::sealed::Conn><0x264532>",
    "poll_symbol": ""
  },
  "0x264612": {
    "name": "H2ClientFutureProject<reqwest::async_impl::body::Body, reqwest::connect::sealed::Conn>",
    "poll_symbol": ""
  },
  "0x2654f0": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x2654f0>",
    "poll_symbol": ""
  },
  "0x2657e3": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x2657e3>",
    "poll_symbol": ""
  },
  "0x26599c": {
    "name": "{async_block_env#0}<reqwest::async_impl::body::Body>",
    "poll_symbol": ""
  },
  "0x265ca4": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x265ca4>",
    "poll_symbol": ""
  },
  "0x265e3d": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x265e3d>",
    "poll_symbol": ""
  },
  "0x265f12": {
    "name": "{async_block_env#0}<reqwest::async_impl::body::Body><0x265f12>",
    "poll_symbol": ""
  },
  "0x267ee7": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x267ee7>",
    "poll_symbol": ""
  },
  "0x267ff7": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x267ff7>",
    "poll_symbol": ""
  },
  "0x2680dc": {
    "name": "ResponseFuture<0x2680dc>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x268cad": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x268cad>",
    "poll_symbol": ""
  },
  "0x268cd7": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x268cd7>",
    "poll_symbol": ""
  },
  "0x2695d0": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x2695d0>",
    "poll_symbol": ""
  },
  "0x2695fb": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x2695fb>",
    "poll_symbol": ""
  },
  "0x269602": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x269602>",
    "poll_symbol": ""
  },
  "0x26a8c9": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x26a8c9>",
    "poll_symbol": ""
  },
  "0x26a8f0": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x26a8f0>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x26aafe": {
    "name": "(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x26aafe>",
    "poll_symbol": ""
  },
  "0x26ab1c": {
    "name": "(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, futures_util::future::either::Either<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>)",
    "poll_symbol": ""
  },
  "0x26ac5b": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x26ac5b>",
    "poll_symbol": ""
  },
  "0x26ac82": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x26ac82>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x271b96": {
    "name": "UnsafeOverwriteGuard<hyper_util::common::lazy::Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x271b96>",
    "poll_symbol": ""
  },
  "0x2724c0": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x2724c0>",
    "poll_symbol": ""
  },
  "0x272550": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<()>>, alloc::alloc::Global>, std::hash::random::RandomState>",
    "poll_symbol": ""
  },
  "0x2725ef": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x2725ef>",
    "poll_symbol": ""
  },
  "0x272f13": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x272f13>",
    "poll_symbol": ""
  },
  "0x272f8b": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x272f8b>",
    "poll_symbol": ""
  },
  "0x272fa9": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x272fa9>",
    "poll_symbol": ""
  },
  "0x272fc7": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x272fc7>",
    "poll_symbol": ""
  },
  "0x2730f3": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x2730f3>",
    "poll_symbol": ""
  },
  "0x273111": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x273111>",
    "poll_symbol": ""
  },
  "0x273459": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<()>>>>",
    "poll_symbol": ""
  },
  "0x273656": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x273656>",
    "poll_symbol": ""
  },
  "0x2736ec": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2736ec>",
    "poll_symbol": ""
  },
  "0x27370a": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x27370a>",
    "poll_symbol": ""
  },
  "0x273728": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x273728>",
    "poll_symbol": ""
  },
  "0x273746": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x273746>",
    "poll_symbol": ""
  },
  "0x273984": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x273984>",
    "poll_symbol": ""
  },
  "0x2739f0": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x2739f0>",
    "poll_symbol": ""
  },
  "0x273a02": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x273a02>",
    "poll_symbol": ""
  },
  "0x273a14": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x273a14>",
    "poll_symbol": ""
  },
  "0x273bba": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x273bba>",
    "poll_symbol": ""
  },
  "0x273bcc": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x273bcc>",
    "poll_symbol": ""
  },
  "0x273bde": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x273bde>",
    "poll_symbol": ""
  },
  "0x273bf0": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x273bf0>",
    "poll_symbol": ""
  },
  "0x273fbc": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<()>>>>",
    "poll_symbol": ""
  },
  "0x273fce": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<()>>>",
    "poll_symbol": ""
  },
  "0x273fe0": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<()>>, alloc::alloc::Global>)>",
    "poll_symbol": ""
  },
  "0x274148": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x274148>",
    "poll_symbol": ""
  },
  "0x27423d": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x27423d>",
    "poll_symbol": ""
  },
  "0x274270": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x274270>",
    "poll_symbol": ""
  },
  "0x274330": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x274330>",
    "poll_symbol": ""
  },
  "0x2743cd": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2743cd>",
    "poll_symbol": ""
  },
  "0x274409": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x274409>",
    "poll_symbol": ""
  },
  "0x274427": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x274427>",
    "poll_symbol": ""
  },
  "0x274a62": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x274a62>",
    "poll_symbol": ""
  },
  "0x274a9f": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x274a9f>",
    "poll_symbol": ""
  },
  "0x274afa": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x274afa>",
    "poll_symbol": ""
  },
  "0x2751a5": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x2751a5>",
    "poll_symbol": ""
  },
  "0x275268": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x275268>",
    "poll_symbol": ""
  },
  "0x2759ae": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x2759ae>",
    "poll_symbol": ""
  },
  "0x275d0b": {
    "name": "Option<futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x275d0b>",
    "poll_symbol": ""
  },
  "0x275d6c": {
    "name": "Option<(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)><0x275d6c>",
    "poll_symbol": ""
  },
  "0x277959": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x277959>",
    "poll_symbol": ""
  },
  "0x277d8d": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x277d8d>",
    "poll_symbol": ""
  },
  "0x277dee": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x277dee>",
    "poll_symbol": ""
  },
  "0x27817a": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x27817a>",
    "poll_symbol": ""
  },
  "0x278198": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x278198>",
    "poll_symbol": ""
  },
  "0x2781d4": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x2781d4>",
    "poll_symbol": ""
  },
  "0x2781f2": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::send_request::{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x278210": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>><0x278210>",
    "poll_symbol": ""
  },
  "0x27822e": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x27824c": {
    "name": "Pin<&mut hyper::client::conn::http1::{impl#7}::handshake::{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x278289": {
    "name": "Pin<&mut hyper::client::conn::http2::{impl#7}::handshake::{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x2782c6": {
    "name": "Pin<&mut hyper::client::conn::http2::{impl#1}::ready::{async_fn_env#0}<reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x278303": {
    "name": "Pin<&mut hyper::client::conn::http1::{impl#1}::ready::{async_fn_env#0}<reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x27837d": {
    "name": "Pin<&mut hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x2783ba": {
    "name": "Pin<&mut hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x2783f7": {
    "name": "Pin<&mut hyper_util::client::legacy::client::{impl#1}::connection_for::{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x278434": {
    "name": "Pin<&mut futures_util::future::either::Either<hyper::client::conn::http1::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>, hyper::client::conn::http2::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>>><0x278434>",
    "poll_symbol": ""
  },
  "0x278471": {
    "name": "Pin<&mut hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x278471>",
    "poll_symbol": ""
  },
  "0x2784ae": {
    "name": "Pin<&mut futures_util::future::select::Select<hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>><0x2784ae>",
    "poll_symbol": ""
  },
  "0x278528": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global>><0x278528>",
    "poll_symbol": ""
  },
  "0x278546": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global>>><0x278546>",
    "poll_symbol": ""
  },
  "0x278582": {
    "name": "Pin<&mut hyper_util::rt::io::write_all::{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": ""
  },
  "0x2785bf": {
    "name": "Pin<&mut hyper_util::rt::io::read::{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": ""
  },
  "0x2785fc": {
    "name": "Pin<&mut tokio::sync::mpsc::unbounded::{impl#3}::recv::{async_fn_env#0}<hyper::client::dispatch::Envelope<http::request::Request<reqwest::async_impl::body::Body>, http::response::Response<hyper::body::incoming::Incoming>>>>",
    "poll_symbol": ""
  },
  "0x278639": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::connect::proxy::tunnel::{impl#1}::call::{async_block_env#0}<hyper_tls::client::HttpsConnector<hyper_util::client::legacy::connect::http::HttpConnector<reqwest::dns::resolve::DynResolver>>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x278694": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::proxy::tunnel::tunnel::{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": ""
  },
  "0x2786d1": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x2786d1>",
    "poll_symbol": ""
  },
  "0x2786ef": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x2786ef>",
    "poll_symbol": ""
  },
  "0x27870d": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::sync::mpsc::unbounded::{impl#3}::recv::{async_fn#0}::{closure_env#0}<hyper::client::dispatch::Envelope<http::request::Request<reqwest::async_impl::body::Body>, http::response::Response<hyper::body::incoming::Incoming>>>>>",
    "poll_symbol": ""
  },
  "0x27874a": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x27874a>",
    "poll_symbol": ""
  },
  "0x278786": {
    "name": "Pin<alloc::boxed::Box<core::future::ready::Ready<core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x2787a4": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x2787a4>",
    "poll_symbol": ""
  },
  "0x2787e0": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::net::tcp::stream::{impl#0}::connect_mio::{async_fn#0}::{closure_env#0}>><0x2787e0>",
    "poll_symbol": ""
  },
  "0x27bfd8": {
    "name": "<hyper_util::client::legacy::client::{impl#1}::send_request::{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x27c02e": {
    "name": "{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>",
    "poll_symbol": ""
  },
  "0x27c551": {
    "name": "{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x27c551>",
    "poll_symbol": ""
  },
  "0x27cdf0": {
    "name": "{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x27cdf0>",
    "poll_symbol": ""
  },
  "0x27d258": {
    "name": "{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x27d258>",
    "poll_symbol": ""
  },
  "0x27db67": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x27db67>",
    "poll_symbol": ""
  },
  "0x2806db": {
    "name": "ResponseFuture<0x2806db>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x280e92": {
    "name": "{async_block_env#0}<hyper_tls::client::HttpsConnector<hyper_util::client::legacy::connect::http::HttpConnector<reqwest::dns::resolve::DynResolver>>>",
    "poll_symbol": ""
  },
  "0x2813dd": {
    "name": "{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x2813dd>",
    "poll_symbol": ""
  },
  "0x2821a0": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2821a0>",
    "poll_symbol": ""
  },
  "0x2821c8": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2821c8>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h9f5b4f64f11deecbE"
  },
  "0x2822f8": {
    "name": "SyncWrapper<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>>><0x2822f8>",
    "poll_symbol": ""
  },
  "0x28247b": {
    "name": "{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x28247b>",
    "poll_symbol": ""
  },
  "0x28258c": {
    "name": "{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x28258c>",
    "poll_symbol": ""
  },
  "0x283c5d": {
    "name": "ResponseFuture<0x283c5d>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x284079": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x284079>",
    "poll_symbol": ""
  },
  "0x2840b8": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x2840b8>",
    "poll_symbol": ""
  },
  "0x28424d": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x28424d>",
    "poll_symbol": ""
  },
  "0x28428c": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x28428c>",
    "poll_symbol": ""
  },
  "0x2842cb": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x2842cb>",
    "poll_symbol": ""
  },
  "0x284301": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x284301>",
    "poll_symbol": ""
  },
  "0x284337": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x284337>",
    "poll_symbol": ""
  },
  "0x284376": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x284376>",
    "poll_symbol": ""
  },
  "0x284723": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x284723>",
    "poll_symbol": ""
  },
  "0x284762": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x284762>",
    "poll_symbol": ""
  },
  "0x284798": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x284798>",
    "poll_symbol": ""
  },
  "0x2847d7": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x2847d7>",
    "poll_symbol": ""
  },
  "0x285218": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<()>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x285257": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<()>>>",
    "poll_symbol": ""
  },
  "0x285498": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x285498>",
    "poll_symbol": ""
  },
  "0x2854d7": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x2854d7>",
    "poll_symbol": ""
  },
  "0x285de3": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x285de3>",
    "poll_symbol": ""
  },
  "0x285f48": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<()>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x286151": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x286151>",
    "poll_symbol": ""
  },
  "0x2861cf": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<()>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x28891a": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x28891a>",
    "poll_symbol": ""
  },
  "0x288941": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x288941>",
    "poll_symbol": ""
  },
  "0x2889af": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x2889af>",
    "poll_symbol": ""
  },
  "0x2889b6": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x2889b6>",
    "poll_symbol": ""
  },
  "0x288a82": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x288a82>",
    "poll_symbol": ""
  },
  "0x288c1b": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x288c1b>",
    "poll_symbol": ""
  },
  "0x288cf0": {
    "name": "{async_block_env#0}<reqwest::async_impl::body::Body><0x288cf0>",
    "poll_symbol": ""
  },
  "0x288e53": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x288e53>",
    "poll_symbol": ""
  },
  "0x288fe4": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x288fe4>",
    "poll_symbol": ""
  },
  "0x2890b9": {
    "name": "{async_block_env#0}<reqwest::async_impl::body::Body><0x2890b9>",
    "poll_symbol": ""
  },
  "0x289673": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x289673>",
    "poll_symbol": ""
  },
  "0x28a839": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x28a839>",
    "poll_symbol": ""
  },
  "0x28a908": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<()>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x28ab1a": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x28ab1a>",
    "poll_symbol": ""
  },
  "0x28abd7": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<()>>, alloc::alloc::Global>), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x28aea9": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x28aea9>",
    "poll_symbol": ""
  },
  "0x28aed3": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x28aed3>",
    "poll_symbol": ""
  },
  "0x28ce67": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x28ce67>",
    "poll_symbol": ""
  },
  "0x28cf77": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x28cf77>",
    "poll_symbol": ""
  },
  "0x28d05e": {
    "name": "ResponseFuture<0x28d05e>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x28db29": {
    "name": "{async_fn_env#0}<hyper::client::dispatch::Envelope<http::request::Request<reqwest::async_impl::body::Body>, http::response::Response<hyper::body::incoming::Incoming>>>",
    "poll_symbol": ""
  },
  "0x28e7da": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x28e7da>",
    "poll_symbol": ""
  },
  "0x28e816": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x28e816>",
    "poll_symbol": ""
  },
  "0x2904d9": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x2904d9>",
    "poll_symbol": ""
  },
  "0x290567": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x290567>",
    "poll_symbol": ""
  },
  "0x2905f5": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2905f5>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x290635": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x290635>",
    "poll_symbol": ""
  },
  "0x290674": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x290674>",
    "poll_symbol": ""
  },
  "0x2906bf": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2906bf>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x2906ff": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2906ff>",
    "poll_symbol": ""
  },
  "0x29073e": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x29073e>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x29077e": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x29077e>",
    "poll_symbol": ""
  },
  "0x2907bd": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x2907bd>",
    "poll_symbol": ""
  },
  "0x2907db": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2907db>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x29081b": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x29081b>",
    "poll_symbol": ""
  },
  "0x290a2e": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x290a2e>",
    "poll_symbol": ""
  },
  "0x290a55": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x290a55>",
    "poll_symbol": ""
  },
  "0x290a7c": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x290a7c>",
    "poll_symbol": ""
  },
  "0x290aa3": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x290aa3>",
    "poll_symbol": ""
  },
  "0x2915df": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x2915df>",
    "poll_symbol": ""
  },
  "0x291633": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x291633>",
    "poll_symbol": ""
  },
  "0x2916b5": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x2916b5>",
    "poll_symbol": ""
  },
  "0x291734": {
    "name": "Either<(core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::pool::Error>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>), (core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>, hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>)><0x291734>",
    "poll_symbol": ""
  },
  "0x2917b6": {
    "name": "Either<hyper::client::conn::http1::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>, hyper::client::conn::http2::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>><0x2917b6>",
    "poll_symbol": ""
  },
  "0x291839": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x291839>",
    "poll_symbol": ""
  },
  "0x2918c1": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x2918c1>",
    "poll_symbol": ""
  },
  "0x29191e": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x29191e>",
    "poll_symbol": ""
  },
  "0x29193c": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x29193c>",
    "poll_symbol": ""
  },
  "0x29195a": {
    "name": "IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x29195a>",
    "poll_symbol": ""
  },
  "0x29197a": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x29197a>",
    "poll_symbol": ""
  },
  "0x2919a2": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x2919a2>",
    "poll_symbol": ""
  },
  "0x2919cf": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2919cf>",
    "poll_symbol": ""
  },
  "0x291a7c": {
    "name": "MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x291a7c>",
    "poll_symbol": ""
  },
  "0x291aaa": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x291aaa>",
    "poll_symbol": ""
  },
  "0x291ad6": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x291ad6>",
    "poll_symbol": ""
  },
  "0x291b58": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x291b58>",
    "poll_symbol": ""
  },
  "0x291bdb": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x291bdb>",
    "poll_symbol": ""
  },
  "0x291c5a": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x291c5a>",
    "poll_symbol": ""
  },
  "0x291cd9": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x291cd9>",
    "poll_symbol": ""
  },
  "0x291d5c": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x291d5c>",
    "poll_symbol": ""
  },
  "0x291de0": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x291de0>",
    "poll_symbol": ""
  },
  "0x291f0e": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x291f0e>",
    "poll_symbol": ""
  },
  "0x291f35": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x291f35>",
    "poll_symbol": ""
  },
  "0x291f5c": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x291f5c>",
    "poll_symbol": ""
  },
  "0x291f84": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x291f84>",
    "poll_symbol": ""
  },
  "0x292036": {
    "name": "Select<hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x292036>",
    "poll_symbol": ""
  },
  "0x292404": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x292404>",
    "poll_symbol": ""
  },
  "0x29242b": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x29242b>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x29249e": {
    "name": "(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)<0x29249e>",
    "poll_symbol": ""
  },
  "0x2924bd": {
    "name": "(core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::pool::Error>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)<0x2924bd>",
    "poll_symbol": ""
  },
  "0x29250d": {
    "name": "<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x292684": {
    "name": "<hyper_util::client::legacy::connect::proxy::tunnel::{impl#1}::call::{async_block_env#0}<hyper_tls::client::HttpsConnector<hyper_util::client::legacy::connect::http::HttpConnector<reqwest::dns::resolve::DynResolver>>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x292caa": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x292caa>",
    "poll_symbol": ""
  },
  "0x292cd1": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x292cd1>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x293141": {
    "name": "<core::future::ready::Ready<core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x29372c": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global><0x29372c>",
    "poll_symbol": ""
  },
  "0x293753": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)<0x293753>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x294217": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<()>>, alloc::alloc::Global>)",
    "poll_symbol": ""
  },
  "0x2945e4": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global><0x2945e4>",
    "poll_symbol": ""
  },
  "0x29460b": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)<0x29460b>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x295ede": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x295ede>",
    "poll_symbol": ""
  },
  "0x295f05": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x295f05>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x296ac2": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x296ac2>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x296f8a": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x296f8a>",
    "poll_symbol": ""
  },
  "0x296fb1": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x296fb1>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x2977a9": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x2977a9>",
    "poll_symbol": ""
  },
  "0x2977d0": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x2977d0>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x298d14": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x298d14>",
    "poll_symbol": ""
  },
  "0x298d32": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x298d32>",
    "poll_symbol": ""
  },
  "0x298d50": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x298d50>",
    "poll_symbol": ""
  },
  "0x29918f": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x29918f>",
    "poll_symbol": ""
  },
  "0x2991ad": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x2991ad>",
    "poll_symbol": ""
  },
  "0x2991cb": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x2991cb>",
    "poll_symbol": ""
  },
  "0x29933e": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x29933e>",
    "poll_symbol": ""
  },
  "0x29948a": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x29948a>",
    "poll_symbol": ""
  },
  "0x2994a8": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x2994a8>",
    "poll_symbol": ""
  },
  "0x29980f": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x29980f>",
    "poll_symbol": ""
  },
  "0x29982d": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x29982d>",
    "poll_symbol": ""
  },
  "0x29984b": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x29984b>",
    "poll_symbol": ""
  },
  "0x2998c3": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x2998c3>",
    "poll_symbol": ""
  },
  "0x299a4b": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x299a4b>",
    "poll_symbol": ""
  },
  "0x299a69": {
    "name": "NonNull<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x299a69>",
    "poll_symbol": ""
  },
  "0x299b3d": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x299b3d>",
    "poll_symbol": ""
  },
  "0x299b7a": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x299b7a>",
    "poll_symbol": ""
  },
  "0x299bb7": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x299bb7>",
    "poll_symbol": ""
  },
  "0x299bf4": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x299bf4>",
    "poll_symbol": ""
  },
  "0x29a6c9": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x29a6c9>",
    "poll_symbol": ""
  },
  "0x29a6db": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x29a6db>",
    "poll_symbol": ""
  },
  "0x29a711": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x29a711>",
    "poll_symbol": ""
  },
  "0x29a81f": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x29a81f>",
    "poll_symbol": ""
  },
  "0x29a93f": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x29a93f>",
    "poll_symbol": ""
  },
  "0x29a951": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x29a951>",
    "poll_symbol": ""
  },
  "0x29a963": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x29a963>",
    "poll_symbol": ""
  },
  "0x29adad": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x29adad>",
    "poll_symbol": ""
  },
  "0x29adcb": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x29adcb>",
    "poll_symbol": ""
  },
  "0x29ae44": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x29ae44>",
    "poll_symbol": ""
  },
  "0x29ae62": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x29ae62>",
    "poll_symbol": ""
  },
  "0x29ae9e": {
    "name": "Pin<&mut futures_channel::mpsc::Receiver<core::convert::Infallible>><0x29ae9e>",
    "poll_symbol": ""
  },
  "0x29bab3": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x29bab3>",
    "poll_symbol": ""
  },
  "0x29bb76": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x29bb76>",
    "poll_symbol": ""
  },
  "0x29bfad": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>><0x29bfad>",
    "poll_symbol": ""
  },
  "0x29cb3f": {
    "name": "Option<alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x29cd32": {
    "name": "Option<&mut alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x29d09e": {
    "name": "Option<&alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x29d184": {
    "name": "Option<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x29d184>",
    "poll_symbol": ""
  },
  "0x29d1e6": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x29d1e6>",
    "poll_symbol": ""
  },
  "0x29de7c": {
    "name": "Result<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>, std::sync::poison::PoisonError<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>>>",
    "poll_symbol": ""
  },
  "0x2a1576": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2a1576>",
    "poll_symbol": ""
  },
  "0x2a1f56": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x2a1f56>",
    "poll_symbol": ""
  },
  "0x2a1f95": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x2a1f95>",
    "poll_symbol": ""
  },
  "0x2a1fd4": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x2a1fd4>",
    "poll_symbol": ""
  },
  "0x2a200a": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2a200a>",
    "poll_symbol": ""
  },
  "0x2a2040": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x2a2040>",
    "poll_symbol": ""
  },
  "0x2a207f": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x2a207f>",
    "poll_symbol": ""
  },
  "0x2a2215": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x2a2215>",
    "poll_symbol": ""
  },
  "0x2a2254": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x2a2254>",
    "poll_symbol": ""
  },
  "0x2a2462": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2a2462>",
    "poll_symbol": ""
  },
  "0x2a24a1": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x2a24a1>",
    "poll_symbol": ""
  },
  "0x2a2689": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2a2689>",
    "poll_symbol": ""
  },
  "0x2a46b6": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a46b6>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x2a472c": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a472c>",
    "poll_symbol": ""
  },
  "0x2a4836": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x2a4836>",
    "poll_symbol": ""
  },
  "0x2a48b8": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x2a48b8>",
    "poll_symbol": ""
  },
  "0x2a4973": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a4973>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x2a49e9": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a49e9>",
    "poll_symbol": ""
  },
  "0x2a4af3": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x2a4af3>",
    "poll_symbol": ""
  },
  "0x2a4b75": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x2a4b75>",
    "poll_symbol": ""
  },
  "0x2a4c03": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a4c03>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x2a4c79": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a4c79>",
    "poll_symbol": ""
  },
  "0x2a4d83": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a4d83>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x2a4df9": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a4df9>",
    "poll_symbol": ""
  },
  "0x2a5317": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a5317>",
    "poll_symbol": ""
  },
  "0x2a531e": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a531e>",
    "poll_symbol": ""
  },
  "0x2a5325": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a5325>",
    "poll_symbol": ""
  },
  "0x2a532c": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a532c>",
    "poll_symbol": ""
  },
  "0x2a546d": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a546d>",
    "poll_symbol": ""
  },
  "0x2a548b": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a548b>",
    "poll_symbol": ""
  },
  "0x2a54a9": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a54a9>",
    "poll_symbol": ""
  },
  "0x2a54c7": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a54c7>",
    "poll_symbol": ""
  },
  "0x2a57b3": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a57b3>",
    "poll_symbol": ""
  },
  "0x2a57c6": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a57c6>",
    "poll_symbol": ""
  },
  "0x2a57d9": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a57d9>",
    "poll_symbol": ""
  },
  "0x2a57ec": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a57ec>",
    "poll_symbol": ""
  },
  "0x2a5c0c": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a5c0c>",
    "poll_symbol": ""
  },
  "0x2a5c33": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a5c33>",
    "poll_symbol": ""
  },
  "0x2a5c5a": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a5c5a>",
    "poll_symbol": ""
  },
  "0x2a5c81": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a5c81>",
    "poll_symbol": ""
  },
  "0x2a6010": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a6010>",
    "poll_symbol": ""
  },
  "0x2a6017": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a6017>",
    "poll_symbol": ""
  },
  "0x2a601e": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a601e>",
    "poll_symbol": ""
  },
  "0x2a6025": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a6025>",
    "poll_symbol": ""
  },
  "0x2a602c": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a602c>",
    "poll_symbol": ""
  },
  "0x2a6033": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a6033>",
    "poll_symbol": ""
  },
  "0x2a603a": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a603a>",
    "poll_symbol": ""
  },
  "0x2a6041": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a6041>",
    "poll_symbol": ""
  },
  "0x2a6c6c": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a6c6c>",
    "poll_symbol": ""
  },
  "0x2a6ef6": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a6ef6>",
    "poll_symbol": ""
  },
  "0x2a7180": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a7180>",
    "poll_symbol": ""
  },
  "0x2a740a": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a740a>",
    "poll_symbol": ""
  },
  "0x2a825a": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x2a825a>",
    "poll_symbol": ""
  },
  "0x2a8410": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x2a8410>",
    "poll_symbol": ""
  },
  "0x2a92b5": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x2a92b5>",
    "poll_symbol": ""
  },
  "0x2a9358": {
    "name": "MutexGuard<futures_channel::mpsc::SenderTask>",
    "poll_symbol": ""
  },
  "0x2a941f": {
    "name": "PoisonError<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>>",
    "poll_symbol": ""
  },
  "0x2a9d74": {
    "name": "OccupiedEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x2a9dc3": {
    "name": "VacantEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x2a9e17": {
    "name": "Entry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry10TimerEntry12poll_elapsed17hdaf22dec527e1f33E"
  },
  "0x2aa269": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x2aa269>",
    "poll_symbol": ""
  },
  "0x2adde2": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x2adde2>",
    "poll_symbol": ""
  },
  "0x2ae1ba": {
    "name": "Bucket<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x2ae1ba>",
    "poll_symbol": ""
  },
  "0x2ae216": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x2ae216>",
    "poll_symbol": ""
  },
  "0x2ae59a": {
    "name": "RustcOccupiedEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x2ae607": {
    "name": "RustcVacantEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x2ae7a7": {
    "name": "RustcEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x2afba5": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x2afba5>",
    "poll_symbol": ""
  },
  "0x2afbcf": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x2afbcf>",
    "poll_symbol": ""
  },
  "0x2b2510": {
    "name": "ResponseFuture<0x2b2510>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x2b2a0d": {
    "name": "<std::sync::poison::PoisonError<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>> as core::fmt::Debug>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x2b2db7": {
    "name": "StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x2b2db7>",
    "poll_symbol": ""
  },
  "0x2b4a5b": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x2b4a5b>",
    "poll_symbol": ""
  },
  "0x2b7439": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x2b7439>",
    "poll_symbol": ""
  },
  "0x2b7460": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x2b7460>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x2ba7e1": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x2ba7e1>",
    "poll_symbol": ""
  },
  "0x2ba808": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x2ba808>",
    "poll_symbol": ""
  },
  "0x2ba80f": {
    "name": "(futures_channel::mpsc::Sender<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h2e71021a18a94d6fE"
  },
  "0x2badff": {
    "name": "<hyper_tls::client::{impl#5}::call::{async_block_env#1}<hyper_util::client::legacy::connect::http::HttpConnector<reqwest::dns::resolve::DynResolver>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x2bae66": {
    "name": "{async_block_env#1}<hyper_util::client::legacy::connect::http::HttpConnector<reqwest::dns::resolve::DynResolver>>",
    "poll_symbol": ""
  },
  "0x2bb306": {
    "name": "{async_block_env#0}<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>",
    "poll_symbol": ""
  },
  "0x2bb73a": {
    "name": "{async_fn_env#0}<0x2bb73a>",
    "poll_symbol": ""
  },
  "0x2bb8d1": {
    "name": "{async_block_env#0}<0x2bb8d1>",
    "poll_symbol": ""
  },
  "0x2bbdb4": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x2bbdb4>",
    "poll_symbol": ""
  },
  "0x2bc7d5": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2bc7d5>",
    "poll_symbol": ""
  },
  "0x2bc7fd": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2bc7fd>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h9f5b4f64f11deecbE"
  },
  "0x2bdd87": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x2bdd87>",
    "poll_symbol": ""
  },
  "0x2bddc6": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x2bddc6>",
    "poll_symbol": ""
  },
  "0x2bde05": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x2bde05>",
    "poll_symbol": ""
  },
  "0x2bde3b": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x2bde3b>",
    "poll_symbol": ""
  },
  "0x2bdee6": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x2bdee6>",
    "poll_symbol": ""
  },
  "0x2bdf25": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2bdf25>",
    "poll_symbol": ""
  },
  "0x2bdf5b": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x2bdf5b>",
    "poll_symbol": ""
  },
  "0x2bdf9a": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x2bdf9a>",
    "poll_symbol": ""
  },
  "0x2be308": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2be308>",
    "poll_symbol": ""
  },
  "0x2be347": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x2be347>",
    "poll_symbol": ""
  },
  "0x2be37d": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x2be37d>",
    "poll_symbol": ""
  },
  "0x2be3bc": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x2be3bc>",
    "poll_symbol": ""
  },
  "0x2be3f2": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x2be3f2>",
    "poll_symbol": ""
  },
  "0x2be431": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x2be431>",
    "poll_symbol": ""
  },
  "0x2bf278": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2bf278>",
    "poll_symbol": ""
  },
  "0x2bf45a": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2bf45a>",
    "poll_symbol": ""
  },
  "0x2bf952": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x2bf952>",
    "poll_symbol": ""
  },
  "0x2bf970": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x2bf970>",
    "poll_symbol": ""
  },
  "0x2bf9ac": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x2bf9ac>",
    "poll_symbol": ""
  },
  "0x2bf9ca": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x2bf9ca>",
    "poll_symbol": ""
  },
  "0x2bfaf6": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x2bfaf6>",
    "poll_symbol": ""
  },
  "0x2bfb14": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x2bfb14>",
    "poll_symbol": ""
  },
  "0x2bfb32": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x2bfb32>",
    "poll_symbol": ""
  },
  "0x2c0b1e": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x2c0b1e>",
    "poll_symbol": ""
  },
  "0x2c0b3c": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x2c0b3c>",
    "poll_symbol": ""
  },
  "0x2c0b78": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2c0b78>",
    "poll_symbol": ""
  },
  "0x2c101c": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x2c101c>",
    "poll_symbol": ""
  },
  "0x2c103a": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x2c103a>",
    "poll_symbol": ""
  },
  "0x2c1058": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x2c1058>",
    "poll_symbol": ""
  },
  "0x2c10f0": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2c10f0>",
    "poll_symbol": ""
  },
  "0x2c174b": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x2c174b>",
    "poll_symbol": ""
  },
  "0x2c175d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x2c175d>",
    "poll_symbol": ""
  },
  "0x2c17ff": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x2c17ff>",
    "poll_symbol": ""
  },
  "0x2c1811": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x2c1811>",
    "poll_symbol": ""
  },
  "0x2c1967": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x2c1967>",
    "poll_symbol": ""
  },
  "0x2c1979": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x2c1979>",
    "poll_symbol": ""
  },
  "0x2c198b": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x2c198b>",
    "poll_symbol": ""
  },
  "0x2c199d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x2c199d>",
    "poll_symbol": ""
  },
  "0x2c19af": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x2c19af>",
    "poll_symbol": ""
  },
  "0x2c1bf5": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global>><0x2c1bf5>",
    "poll_symbol": ""
  },
  "0x2c1c31": {
    "name": "Pin<alloc::boxed::Box<hyper_tls::client::{impl#5}::call::{async_block_env#1}<hyper_util::client::legacy::connect::http::HttpConnector<reqwest::dns::resolve::DynResolver>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x2c1c8c": {
    "name": "Pin<&mut tokio_native_tls::{impl#12}::connect::{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": ""
  },
  "0x2c1e16": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x2c1e16>",
    "poll_symbol": ""
  },
  "0x2c1e34": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x2c1e34>",
    "poll_symbol": ""
  },
  "0x2c1e70": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}><0x2c1e70>",
    "poll_symbol": ""
  },
  "0x2c1e8e": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x2c1e8e>",
    "poll_symbol": ""
  },
  "0x2c1eac": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x2c1eac>",
    "poll_symbol": ""
  },
  "0x2c1eca": {
    "name": "Pin<&mut futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>>><0x2c1eca>",
    "poll_symbol": ""
  },
  "0x2c1ee8": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x2c1ee8>",
    "poll_symbol": ""
  },
  "0x2c1f06": {
    "name": "Pin<alloc::boxed::Box<hyper_tls::client::err::{async_block_env#0}<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x2c1f60": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x2c1f60>",
    "poll_symbol": ""
  },
  "0x2c1f7e": {
    "name": "Pin<&mut futures_util::stream::stream::into_future::StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>>><0x2c1f7e>",
    "poll_symbol": ""
  },
  "0x2c1f9c": {
    "name": "Pin<&mut futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x2c1f9c>",
    "poll_symbol": ""
  },
  "0x2c2e76": {
    "name": "Option<tokio_native_tls::StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x2c2e76>",
    "poll_symbol": ""
  },
  "0x2c3447": {
    "name": "Option<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x2c3447>",
    "poll_symbol": ""
  },
  "0x2c3549": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>><0x2c3549>",
    "poll_symbol": ""
  },
  "0x2c36b5": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x2c36b5>",
    "poll_symbol": ""
  },
  "0x2c3b78": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x2c3b78>",
    "poll_symbol": ""
  },
  "0x2c44bb": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x2c44bb>",
    "poll_symbol": ""
  },
  "0x2c7b96": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2c7b96>",
    "poll_symbol": ""
  },
  "0x2c7bf7": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x2c7bf7>",
    "poll_symbol": ""
  },
  "0x2c7f40": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x2c7f40>",
    "poll_symbol": ""
  },
  "0x2c807e": {
    "name": "Option<futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x2c807e>",
    "poll_symbol": ""
  },
  "0x2c827a": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)><0x2c827a>",
    "poll_symbol": ""
  },
  "0x2c8444": {
    "name": "Option<(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)><0x2c8444>",
    "poll_symbol": ""
  },
  "0x2c86b8": {
    "name": "Option<futures_channel::mpsc::Sender<core::convert::Infallible>><0x2c86b8>",
    "poll_symbol": ""
  },
  "0x2c8761": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x2c8761>",
    "poll_symbol": ""
  },
  "0x2c87c2": {
    "name": "Option<tokio_native_tls::StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>><0x2c87c2>",
    "poll_symbol": ""
  },
  "0x2c891b": {
    "name": "Option<&mut (core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)>",
    "poll_symbol": ""
  },
  "0x2c8a90": {
    "name": "Option<&mut (core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)>",
    "poll_symbol": ""
  },
  "0x2c8b7b": {
    "name": "Option<&mut alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x2c8bdc": {
    "name": "Option<&mut futures_channel::mpsc::Receiver<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x2c8d9f": {
    "name": "Option<&mut (hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)>",
    "poll_symbol": ""
  },
  "0x2c905a": {
    "name": "Option<&alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>><0x2c905a>",
    "poll_symbol": ""
  },
  "0x2cb74c": {
    "name": "Poll<(core::option::Option<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)><0x2cb74c>",
    "poll_symbol": ""
  },
  "0x2ced04": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, hyper_util::client::legacy::connect::http::ConnectError>, hyper_util::client::legacy::connect::http::connect::{async_block_env#0}><0x2ced04>",
    "poll_symbol": ""
  },
  "0x2cf8b1": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global><0x2cf8b1>",
    "poll_symbol": ""
  },
  "0x2cf8d8": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)<0x2cf8d8>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x2cf90a": {
    "name": "{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x2cf90a>",
    "poll_symbol": ""
  },
  "0x2cfa64": {
    "name": "{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x2cfa64>",
    "poll_symbol": ""
  },
  "0x2cfb92": {
    "name": "StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x2cfb92>",
    "poll_symbol": ""
  },
  "0x2cfbb9": {
    "name": "StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x2cfbb9>",
    "poll_symbol": ""
  },
  "0x2cfcc6": {
    "name": "StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x2cfcc6>",
    "poll_symbol": ""
  },
  "0x2d0288": {
    "name": "{async_fn_env#0}<0x2d0288>",
    "poll_symbol": ""
  },
  "0x2d036e": {
    "name": "{async_fn_env#0}<0x2d036e>",
    "poll_symbol": ""
  },
  "0x2d1e7c": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x2d1e7c>",
    "poll_symbol": ""
  },
  "0x2d24be": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x2d24be>",
    "poll_symbol": ""
  },
  "0x2d24dc": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x2d24dc>",
    "poll_symbol": ""
  },
  "0x2d2be7": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x2d2be7>",
    "poll_symbol": ""
  },
  "0x2d348f": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x2d348f>",
    "poll_symbol": ""
  },
  "0x2d3e6a": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x2d3e6a>",
    "poll_symbol": ""
  },
  "0x2d4076": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x2d4076>",
    "poll_symbol": ""
  },
  "0x2d6f1a": {
    "name": "ResponseFuture<0x2d6f1a>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x2d6fba": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x2d6fba>",
    "poll_symbol": ""
  },
  "0x2d70ca": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x2d70ca>",
    "poll_symbol": ""
  },
  "0x2d8f87": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x2d8f87>",
    "poll_symbol": ""
  },
  "0x2d95e7": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x2d95e7>",
    "poll_symbol": ""
  },
  "0x2d9780": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x2d9780>",
    "poll_symbol": ""
  },
  "0x2d98af": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x2d98af>",
    "poll_symbol": ""
  },
  "0x2d9a40": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x2d9a40>",
    "poll_symbol": ""
  },
  "0x2db021": {
    "name": "<hyper_tls::client::err::{async_block_env#0}<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x2db35c": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x2db35c>",
    "poll_symbol": ""
  },
  "0x2db386": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x2db386>",
    "poll_symbol": ""
  },
  "0x2db8fe": {
    "name": "StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x2db8fe>",
    "poll_symbol": ""
  },
  "0x2db9f4": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x2db9f4>",
    "poll_symbol": ""
  },
  "0x2dba76": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x2dba76>",
    "poll_symbol": ""
  },
  "0x2dbaf5": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x2dbaf5>",
    "poll_symbol": ""
  },
  "0x2dbb7d": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x2dbb7d>",
    "poll_symbol": ""
  },
  "0x2dbbda": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x2dbbda>",
    "poll_symbol": ""
  },
  "0x2dbbf8": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2dbbf8>",
    "poll_symbol": ""
  },
  "0x2dbc17": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2dbc17>",
    "poll_symbol": ""
  },
  "0x2dbc3f": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x2dbc3f>",
    "poll_symbol": ""
  },
  "0x2dbc6c": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2dbc6c>",
    "poll_symbol": ""
  },
  "0x2dbd1f": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2dbd1f>",
    "poll_symbol": ""
  },
  "0x2dbd4b": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2dbd4b>",
    "poll_symbol": ""
  },
  "0x2dbdcd": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2dbdcd>",
    "poll_symbol": ""
  },
  "0x2dbe51": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2dbe51>",
    "poll_symbol": ""
  },
  "0x2dc9e9": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x2dc9e9>",
    "poll_symbol": ""
  },
  "0x2dca14": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x2dca14>",
    "poll_symbol": ""
  },
  "0x2dca1b": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x2dca1b>",
    "poll_symbol": ""
  },
  "0x2de648": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x2de648>",
    "poll_symbol": ""
  },
  "0x2de66f": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x2de66f>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x2deae1": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x2deae1>",
    "poll_symbol": ""
  },
  "0x2deb08": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x2deb08>",
    "poll_symbol": ""
  },
  "0x2dfa06": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x2dfa06>",
    "poll_symbol": ""
  },
  "0x2dfce3": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)<0x2dfce3>",
    "poll_symbol": ""
  },
  "0x2e010e": {
    "name": "(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)<0x2e010e>",
    "poll_symbol": ""
  },
  "0x2e012d": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x2e012d>",
    "poll_symbol": ""
  },
  "0x2e0154": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x2e0154>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x2e2f91": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x2e2f91>",
    "poll_symbol": ""
  },
  "0x2e2fb8": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x2e2fb8>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x2e6373": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x2e6373>",
    "poll_symbol": ""
  },
  "0x2e639a": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x2e639a>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x2e63a1": {
    "name": "(core::option::Option<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)<0x2e63a1>",
    "poll_symbol": ""
  },
  "0x2e6e21": {
    "name": "{async_block_env#0}<0x2e6e21>",
    "poll_symbol": ""
  },
  "0x2e707e": {
    "name": "{async_fn_env#0}<0x2e707e>",
    "poll_symbol": ""
  },
  "0x2e7315": {
    "name": "{async_fn_env#0}<0x2e7315>",
    "poll_symbol": ""
  },
  "0x2e748d": {
    "name": "{async_fn_env#0}<reqwest::dns::resolve::DynResolver><0x2e748d>",
    "poll_symbol": ""
  },
  "0x2e7640": {
    "name": "{async_block_env#0}<reqwest::dns::resolve::DynResolver><0x2e7640>",
    "poll_symbol": ""
  },
  "0x2e78dc": {
    "name": "{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x2e78dc>",
    "poll_symbol": ""
  },
  "0x2e7af4": {
    "name": "{async_block_env#0}<hyper_tls::client::HttpsConnector<hyper_util::client::legacy::connect::http::HttpConnector<reqwest::dns::resolve::DynResolver>>><0x2e7af4>",
    "poll_symbol": ""
  },
  "0x2e7c99": {
    "name": "GaiFuture<0x2e7c99>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x2e7cb3": {
    "name": "{async_fn_env#0}<reqwest::dns::resolve::DynResolver><0x2e7cb3>",
    "poll_symbol": ""
  },
  "0x2e80bd": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x2e80bd>",
    "poll_symbol": ""
  },
  "0x2e86b6": {
    "name": "{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x2e86b6>",
    "poll_symbol": ""
  },
  "0x2e8812": {
    "name": "{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x2e8812>",
    "poll_symbol": ""
  },
  "0x2e8a18": {
    "name": "{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x2e8a18>",
    "poll_symbol": ""
  },
  "0x2e8b1a": {
    "name": "{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x2e8b1a>",
    "poll_symbol": ""
  },
  "0x2e8dc1": {
    "name": "ResponseFuture<0x2e8dc1>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x2e92db": {
    "name": "{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x2e92db>",
    "poll_symbol": ""
  },
  "0x2e93e1": {
    "name": "{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x2e93e1>",
    "poll_symbol": ""
  },
  "0x2e95e3": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2e95e3>",
    "poll_symbol": ""
  },
  "0x2e960b": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2e960b>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h9f5b4f64f11deecbE"
  },
  "0x2e96b7": {
    "name": "InnerProjReplace<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2e96b7>",
    "poll_symbol": ""
  },
  "0x2e9769": {
    "name": "SyncWrapper<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>>><0x2e9769>",
    "poll_symbol": ""
  },
  "0x2e99d1": {
    "name": "{async_block_env#0}<0x2e99d1>",
    "poll_symbol": ""
  },
  "0x2e9d47": {
    "name": "ResponseFuture<0x2e9d47>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x2ea0ef": {
    "name": "{async_fn_env#0}<0x2ea0ef>",
    "poll_symbol": ""
  },
  "0x2ea43d": {
    "name": "{async_fn_env#0}<0x2ea43d>",
    "poll_symbol": ""
  },
  "0x2ea796": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}><0x2ea796>",
    "poll_symbol": ""
  },
  "0x2ea8b9": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}><0x2ea8b9>",
    "poll_symbol": ""
  },
  "0x2eaaeb": {
    "name": "{async_block_env#0}<0x2eaaeb>",
    "poll_symbol": ""
  },
  "0x2ec0bb": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x2ec0bb>",
    "poll_symbol": ""
  },
  "0x2ec17e": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x2ec17e>",
    "poll_symbol": ""
  },
  "0x2ecab5": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x2ecab5>",
    "poll_symbol": ""
  },
  "0x2ed316": {
    "name": "Option<tokio_native_tls::StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>><0x2ed316>",
    "poll_symbol": ""
  },
  "0x2ed750": {
    "name": "Option<futures_channel::mpsc::Sender<core::convert::Infallible>><0x2ed750>",
    "poll_symbol": ""
  },
  "0x2ed7b1": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x2ed7b1>",
    "poll_symbol": ""
  },
  "0x2ed873": {
    "name": "Option<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x2ed873>",
    "poll_symbol": ""
  },
  "0x2ed8d5": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>><0x2ed8d5>",
    "poll_symbol": ""
  },
  "0x2ed997": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)><0x2ed997>",
    "poll_symbol": ""
  },
  "0x2ed9f8": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x2ed9f8>",
    "poll_symbol": ""
  },
  "0x2ee754": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2ee754>",
    "poll_symbol": ""
  },
  "0x2ee7b5": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x2ee7b5>",
    "poll_symbol": ""
  },
  "0x2eea66": {
    "name": "Option<futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x2eea66>",
    "poll_symbol": ""
  },
  "0x2eeac7": {
    "name": "Option<(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)><0x2eeac7>",
    "poll_symbol": ""
  },
  "0x2eecb9": {
    "name": "Option<tokio_native_tls::StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x2eecb9>",
    "poll_symbol": ""
  },
  "0x2eed7f": {
    "name": "Option<alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>><0x2eed7f>",
    "poll_symbol": ""
  },
  "0x2ef97a": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x2ef97a>",
    "poll_symbol": ""
  },
  "0x2ef998": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x2ef998>",
    "poll_symbol": ""
  },
  "0x2ef9b6": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x2ef9b6>",
    "poll_symbol": ""
  },
  "0x2efaa6": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x2efaa6>",
    "poll_symbol": ""
  },
  "0x2efac4": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2efac4>",
    "poll_symbol": ""
  },
  "0x2efae2": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2efae2>",
    "poll_symbol": ""
  },
  "0x2efb00": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2efb00>",
    "poll_symbol": ""
  },
  "0x2efb1e": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x2efb1e>",
    "poll_symbol": ""
  },
  "0x2efb3c": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x2efb3c>",
    "poll_symbol": ""
  },
  "0x2efbb4": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2efbb4>",
    "poll_symbol": ""
  },
  "0x2efca4": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x2efca4>",
    "poll_symbol": ""
  },
  "0x2fc0d3": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x2fc0d3>",
    "poll_symbol": ""
  },
  "0x2fc0e5": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x2fc0e5>",
    "poll_symbol": ""
  },
  "0x2fc0f7": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x2fc0f7>",
    "poll_symbol": ""
  },
  "0x2fc187": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x2fc187>",
    "poll_symbol": ""
  },
  "0x2fc199": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x2fc199>",
    "poll_symbol": ""
  },
  "0x2fc1ab": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x2fc1ab>",
    "poll_symbol": ""
  },
  "0x2fc205": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x2fc205>",
    "poll_symbol": ""
  },
  "0x2fc217": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x2fc217>",
    "poll_symbol": ""
  },
  "0x2fc36d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x2fc36d>",
    "poll_symbol": ""
  },
  "0x2fc4c3": {
    "name": "PhantomData<futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2fc4c3>",
    "poll_symbol": ""
  },
  "0x2fc577": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x2fc59b": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": ""
  },
  "0x2fc7cb": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2fc7cb>",
    "poll_symbol": ""
  },
  "0x2fc7e9": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x2fc7e9>",
    "poll_symbol": ""
  },
  "0x2fc843": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x2fc843>",
    "poll_symbol": ""
  },
  "0x2fced5": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2fced5>",
    "poll_symbol": ""
  },
  "0x2fcef3": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x2fcef3>",
    "poll_symbol": ""
  },
  "0x2fcf11": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x2fcf11>",
    "poll_symbol": ""
  },
  "0x2fd099": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x2fd099>",
    "poll_symbol": ""
  },
  "0x2fd0d5": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x2fd0d5>",
    "poll_symbol": ""
  },
  "0x2fd489": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x2fd489>",
    "poll_symbol": ""
  },
  "0x2fdb76": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, hyper_util::client::legacy::connect::http::ConnectError>, hyper_util::client::legacy::connect::http::connect::{async_block_env#0}><0x2fdb76>",
    "poll_symbol": ""
  },
  "0x301656": {
    "name": "Result<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, futures_channel::oneshot::Canceled><0x301656>",
    "poll_symbol": ""
  },
  "0x30243c": {
    "name": "Poll<(core::option::Option<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)><0x30243c>",
    "poll_symbol": ""
  },
  "0x302561": {
    "name": "Poll<core::result::Result<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, futures_channel::oneshot::Canceled>><0x302561>",
    "poll_symbol": ""
  },
  "0x3028b8": {
    "name": "ManuallyDrop<hyper_util::common::lazy::Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x3028b8>",
    "poll_symbol": ""
  },
  "0x3028d7": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x3028d7>",
    "poll_symbol": ""
  },
  "0x3028f6": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3028f6>",
    "poll_symbol": ""
  },
  "0x302915": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x302915>",
    "poll_symbol": ""
  },
  "0x302933": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x302933>",
    "poll_symbol": ""
  },
  "0x302951": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x302951>",
    "poll_symbol": ""
  },
  "0x30296f": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x30296f>",
    "poll_symbol": ""
  },
  "0x30298d": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x30298d>",
    "poll_symbol": ""
  },
  "0x3029ac": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x3029ac>",
    "poll_symbol": ""
  },
  "0x3029ca": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x3029ca>",
    "poll_symbol": ""
  },
  "0x3029e8": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x3029e8>",
    "poll_symbol": ""
  },
  "0x302a07": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x302a07>",
    "poll_symbol": ""
  },
  "0x302a26": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x302a26>",
    "poll_symbol": ""
  },
  "0x302ac3": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x302ac3>",
    "poll_symbol": ""
  },
  "0x302ae1": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x302ae1>",
    "poll_symbol": ""
  },
  "0x302aff": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x302aff>",
    "poll_symbol": ""
  },
  "0x302b1d": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global>><0x302b1d>",
    "poll_symbol": ""
  },
  "0x302b3b": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x302b3b>",
    "poll_symbol": ""
  },
  "0x302b59": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}><0x302b59>",
    "poll_symbol": ""
  },
  "0x302b95": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x302b95>",
    "poll_symbol": ""
  },
  "0x302bb3": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global>><0x302bb3>",
    "poll_symbol": ""
  },
  "0x302c0d": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x302c0d>",
    "poll_symbol": ""
  },
  "0x302c2b": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x302c2b>",
    "poll_symbol": ""
  },
  "0x302c49": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>><0x302c49>",
    "poll_symbol": ""
  },
  "0x303e4a": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x303e4a>",
    "poll_symbol": ""
  },
  "0x304cd8": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x304cd8>",
    "poll_symbol": ""
  },
  "0x304d17": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x304d17>",
    "poll_symbol": ""
  },
  "0x304d56": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x304d56>",
    "poll_symbol": ""
  },
  "0x304d8c": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x304d8c>",
    "poll_symbol": ""
  },
  "0x304dc2": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x304dc2>",
    "poll_symbol": ""
  },
  "0x304e01": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x304e01>",
    "poll_symbol": ""
  },
  "0x305084": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x305084>",
    "poll_symbol": ""
  },
  "0x3050c3": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x3050c3>",
    "poll_symbol": ""
  },
  "0x305138": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x305138>",
    "poll_symbol": ""
  },
  "0x305177": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x305177>",
    "poll_symbol": ""
  },
  "0x3051ad": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x3051ad>",
    "poll_symbol": ""
  },
  "0x3051ec": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x3051ec>",
    "poll_symbol": ""
  },
  "0x305691": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x305691>",
    "poll_symbol": ""
  },
  "0x3056d0": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x3056d0>",
    "poll_symbol": ""
  },
  "0x30597f": {
    "name": "Weak<futures_channel::oneshot::Inner<core::convert::Infallible>, &alloc::alloc::Global><0x30597f>",
    "poll_symbol": ""
  },
  "0x3059b2": {
    "name": "Weak<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, &alloc::alloc::Global><0x3059b2>",
    "poll_symbol": ""
  },
  "0x305b35": {
    "name": "Weak<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, &alloc::alloc::Global><0x305b35>",
    "poll_symbol": ""
  },
  "0x305c01": {
    "name": "Weak<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), &alloc::alloc::Global><0x305c01>",
    "poll_symbol": ""
  },
  "0x305f21": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x305f21>",
    "poll_symbol": ""
  },
  "0x3060a2": {
    "name": "Dropper<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x3060a2>",
    "poll_symbol": ""
  },
  "0x3060cc": {
    "name": "Dropper<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x3060cc>",
    "poll_symbol": ""
  },
  "0x3073c5": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x3073c5>",
    "poll_symbol": ""
  },
  "0x3076a8": {
    "name": "H2ClientFuture<reqwest::async_impl::body::Body, reqwest::connect::sealed::Conn><0x3076a8>",
    "poll_symbol": ""
  },
  "0x307b09": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x307b09>",
    "poll_symbol": ""
  },
  "0x307ca2": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x307ca2>",
    "poll_symbol": ""
  },
  "0x307d9f": {
    "name": "{async_block_env#0}<reqwest::async_impl::body::Body><0x307d9f>",
    "poll_symbol": ""
  },
  "0x307eea": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x307eea>",
    "poll_symbol": ""
  },
  "0x30807b": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x30807b>",
    "poll_symbol": ""
  },
  "0x308150": {
    "name": "{async_block_env#0}<reqwest::async_impl::body::Body><0x308150>",
    "poll_symbol": ""
  },
  "0x30abb3": {
    "name": "ResponseFuture<0x30abb3>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x30ac85": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x30ac85>",
    "poll_symbol": ""
  },
  "0x30ad95": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x30ad95>",
    "poll_symbol": ""
  },
  "0x30c11c": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x30c11c>",
    "poll_symbol": ""
  },
  "0x30c477": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x30c477>",
    "poll_symbol": ""
  },
  "0x30c4fe": {
    "name": "VacantEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>><0x30c4fe>",
    "poll_symbol": ""
  },
  "0x30cb2c": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x30cb2c>",
    "poll_symbol": ""
  },
  "0x30cb56": {
    "name": "Timeout<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}><0x30cb56>",
    "poll_symbol": ""
  },
  "0x30cb81": {
    "name": "Timeout<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}><0x30cb81>",
    "poll_symbol": ""
  },
  "0x30d649": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30d649>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x30d689": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30d689>",
    "poll_symbol": ""
  },
  "0x30d6c8": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x30d6c8>",
    "poll_symbol": ""
  },
  "0x30d6e6": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x30d6e6>",
    "poll_symbol": ""
  },
  "0x30d7a1": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30d7a1>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x30d7e1": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30d7e1>",
    "poll_symbol": ""
  },
  "0x30d820": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x30d820>",
    "poll_symbol": ""
  },
  "0x30d83e": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x30d83e>",
    "poll_symbol": ""
  },
  "0x30d8cc": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30d8cc>",
    "poll_symbol": ""
  },
  "0x30d90b": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30d90b>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x30d94b": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30d94b>",
    "poll_symbol": ""
  },
  "0x30d98a": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30d98a>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x30d9d4": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30d9d4>",
    "poll_symbol": ""
  },
  "0x30d9e7": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30d9e7>",
    "poll_symbol": ""
  },
  "0x30d9fa": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30d9fa>",
    "poll_symbol": ""
  },
  "0x30da0d": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30da0d>",
    "poll_symbol": ""
  },
  "0x30db85": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30db85>",
    "poll_symbol": ""
  },
  "0x30db98": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30db98>",
    "poll_symbol": ""
  },
  "0x30dbab": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30dbab>",
    "poll_symbol": ""
  },
  "0x30dbbe": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30dbbe>",
    "poll_symbol": ""
  },
  "0x30dbd7": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30dbd7>",
    "poll_symbol": ""
  },
  "0x30dbf5": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30dbf5>",
    "poll_symbol": ""
  },
  "0x30dc13": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30dc13>",
    "poll_symbol": ""
  },
  "0x30dc31": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30dc31>",
    "poll_symbol": ""
  },
  "0x30dc4f": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30dc4f>",
    "poll_symbol": ""
  },
  "0x30dc6d": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30dc6d>",
    "poll_symbol": ""
  },
  "0x30dc8b": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30dc8b>",
    "poll_symbol": ""
  },
  "0x30dca9": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30dca9>",
    "poll_symbol": ""
  },
  "0x30dcc9": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30dcc9>",
    "poll_symbol": ""
  },
  "0x30dcf0": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30dcf0>",
    "poll_symbol": ""
  },
  "0x30dd1c": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30dd1c>",
    "poll_symbol": ""
  },
  "0x30dd2f": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30dd2f>",
    "poll_symbol": ""
  },
  "0x30dd42": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30dd42>",
    "poll_symbol": ""
  },
  "0x30dd55": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30dd55>",
    "poll_symbol": ""
  },
  "0x30dd69": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30dd69>",
    "poll_symbol": ""
  },
  "0x30dd90": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30dd90>",
    "poll_symbol": ""
  },
  "0x30ddc1": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30ddc1>",
    "poll_symbol": ""
  },
  "0x30dde8": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30dde8>",
    "poll_symbol": ""
  },
  "0x30de0f": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30de0f>",
    "poll_symbol": ""
  },
  "0x30de36": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30de36>",
    "poll_symbol": ""
  },
  "0x30e502": {
    "name": "{closure_env#0}<tokio::task::spawn::spawn_inner::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>, tokio::runtime::task::join::JoinHandle<()>><0x30e502>",
    "poll_symbol": ""
  },
  "0x30e515": {
    "name": "{closure_env#0}<tokio::task::spawn::spawn_inner::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>, tokio::runtime::task::join::JoinHandle<()>><0x30e515>",
    "poll_symbol": ""
  },
  "0x30e99c": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x30e99c>",
    "poll_symbol": ""
  },
  "0x30e9ba": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x30e9ba>",
    "poll_symbol": ""
  },
  "0x30f39d": {
    "name": "{async_fn_env#0}<hyper::client::dispatch::Envelope<http::request::Request<reqwest::async_impl::body::Body>, http::response::Response<hyper::body::incoming::Incoming>>><0x30f39d>",
    "poll_symbol": ""
  },
  "0x30f7f8": {
    "name": "{async_fn_env#0}<0x30f7f8>",
    "poll_symbol": ""
  },
  "0x30f8de": {
    "name": "{async_fn_env#0}<0x30f8de>",
    "poll_symbol": ""
  },
  "0x30fa18": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x30fa18>",
    "poll_symbol": ""
  },
  "0x30fa36": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x30fa36>",
    "poll_symbol": ""
  },
  "0x3105bd": {
    "name": "{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), (http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>><0x3105bd>",
    "poll_symbol": ""
  },
  "0x310635": {
    "name": "{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x310635>",
    "poll_symbol": ""
  },
  "0x3106e6": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x3106e6>",
    "poll_symbol": ""
  },
  "0x310905": {
    "name": "{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), (http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>><0x310905>",
    "poll_symbol": ""
  },
  "0x310923": {
    "name": "{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::rustc_entry::{impl#0}::rustc_entry::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global>><0x310923>",
    "poll_symbol": ""
  },
  "0x310a21": {
    "name": "{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::map::make_hasher::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState>><0x310a21>",
    "poll_symbol": ""
  },
  "0x310a5c": {
    "name": "{closure_env#1}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::map::make_hasher::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState>><0x310a5c>",
    "poll_symbol": ""
  },
  "0x310af0": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x310af0>",
    "poll_symbol": ""
  },
  "0x310c39": {
    "name": "{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x310c39>",
    "poll_symbol": ""
  },
  "0x310cbc": {
    "name": "RustcVacantEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, alloc::alloc::Global><0x310cbc>",
    "poll_symbol": ""
  },
  "0x312877": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x312877>",
    "poll_symbol": ""
  },
  "0x312af8": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x312af8>",
    "poll_symbol": ""
  },
  "0x312b22": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x312b22>",
    "poll_symbol": ""
  },
  "0x313284": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x313284>",
    "poll_symbol": ""
  },
  "0x3132ab": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x3132ab>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x31341e": {
    "name": "{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x31341e>",
    "poll_symbol": ""
  },
  "0x313571": {
    "name": "{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x313571>",
    "poll_symbol": ""
  },
  "0x313689": {
    "name": "{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x313689>",
    "poll_symbol": ""
  },
  "0x3137b6": {
    "name": "{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x3137b6>",
    "poll_symbol": ""
  },
  "0x3138e4": {
    "name": "StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x3138e4>",
    "poll_symbol": ""
  },
  "0x31390b": {
    "name": "StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x31390b>",
    "poll_symbol": ""
  },
  "0x313a48": {
    "name": "StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x313a48>",
    "poll_symbol": ""
  },
  "0x313a6f": {
    "name": "StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x313a6f>",
    "poll_symbol": ""
  },
  "0x313dff": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x313dff>",
    "poll_symbol": ""
  },
  "0x313e06": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x313e06>",
    "poll_symbol": ""
  },
  "0x313ffd": {
    "name": "{async_block_env#0}<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>><0x313ffd>",
    "poll_symbol": ""
  },
  "0x31408a": {
    "name": "{async_block_env#1}<hyper_util::client::legacy::connect::http::HttpConnector<reqwest::dns::resolve::DynResolver>><0x31408a>",
    "poll_symbol": ""
  },
  "0x31467c": {
    "name": "MapFuture<tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x31467c>",
    "poll_symbol": ""
  },
  "0x3146af": {
    "name": "MapFuture<tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x3146af>",
    "poll_symbol": ""
  },
  "0x3146e2": {
    "name": "MapFuture<tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>>><0x3146e2>",
    "poll_symbol": ""
  },
  "0x314781": {
    "name": "MapErrFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}><0x314781>",
    "poll_symbol": ""
  },
  "0x3147a8": {
    "name": "MapErrFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}><0x3147a8>",
    "poll_symbol": ""
  },
  "0x3149c1": {
    "name": "ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x3149c1>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x314a75": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x314a75>",
    "poll_symbol": ""
  },
  "0x314a9c": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x314a9c>",
    "poll_symbol": ""
  },
  "0x314c50": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x314c50>",
    "poll_symbol": ""
  },
  "0x314c77": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x314c77>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x314c7e": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global><0x314c7e>",
    "poll_symbol": ""
  },
  "0x314ca5": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)<0x314ca5>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x314ce0": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x314ce0>",
    "poll_symbol": ""
  },
  "0x314d07": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x314d07>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x314d6f": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x314d6f>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x315117": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>><0x315117>",
    "poll_symbol": ""
  },
  "0x31513e": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>><0x31513e>",
    "poll_symbol": ""
  },
  "0x315165": {
    "name": "Select<hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x315165>",
    "poll_symbol": ""
  },
  "0x315193": {
    "name": "Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut tokio::time::sleep::Sleep>), ((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x315193>",
    "poll_symbol": ""
  },
  "0x315212": {
    "name": "Either<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>><0x315212>",
    "poll_symbol": ""
  },
  "0x315292": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x315292>",
    "poll_symbol": ""
  },
  "0x315393": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x315393>",
    "poll_symbol": ""
  },
  "0x315415": {
    "name": "Either<(core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::pool::Error>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>), (core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>, hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>)><0x315415>",
    "poll_symbol": ""
  },
  "0x315497": {
    "name": "Either<hyper::client::conn::http1::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>, hyper::client::conn::http2::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>><0x315497>",
    "poll_symbol": ""
  },
  "0x31551a": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x31551a>",
    "poll_symbol": ""
  },
  "0x3155a2": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x3155a2>",
    "poll_symbol": ""
  },
  "0x3155ff": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x3155ff>",
    "poll_symbol": ""
  },
  "0x31561d": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x31561d>",
    "poll_symbol": ""
  },
  "0x31563b": {
    "name": "IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x31563b>",
    "poll_symbol": ""
  },
  "0x31565a": {
    "name": "IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>><0x31565a>",
    "poll_symbol": ""
  },
  "0x315679": {
    "name": "IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>><0x315679>",
    "poll_symbol": ""
  },
  "0x315697": {
    "name": "IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x315697>",
    "poll_symbol": ""
  },
  "0x3156b5": {
    "name": "IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>><0x3156b5>",
    "poll_symbol": ""
  },
  "0x3156d4": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x3156d4>",
    "poll_symbol": ""
  },
  "0x3156fc": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x3156fc>",
    "poll_symbol": ""
  },
  "0x315729": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x315729>",
    "poll_symbol": ""
  },
  "0x3157d6": {
    "name": "MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x3157d6>",
    "poll_symbol": ""
  },
  "0x3157fe": {
    "name": "MapErr<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}><0x3157fe>",
    "poll_symbol": ""
  },
  "0x315874": {
    "name": "MapErr<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}><0x315874>",
    "poll_symbol": ""
  },
  "0x3158a1": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3158a1>",
    "poll_symbol": ""
  },
  "0x3158cd": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3158cd>",
    "poll_symbol": ""
  },
  "0x31594f": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x31594f>",
    "poll_symbol": ""
  },
  "0x3159d2": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3159d2>",
    "poll_symbol": ""
  },
  "0x315a55": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x315a55>",
    "poll_symbol": ""
  },
  "0x315ad8": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x315ad8>",
    "poll_symbol": ""
  },
  "0x315b57": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x315b57>",
    "poll_symbol": ""
  },
  "0x315bda": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x315bda>",
    "poll_symbol": ""
  },
  "0x315c59": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x315c59>",
    "poll_symbol": ""
  },
  "0x315cd8": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x315cd8>",
    "poll_symbol": ""
  },
  "0x315d57": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x315d57>",
    "poll_symbol": ""
  },
  "0x315dd6": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x315e56": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x315ed9": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x315ed9>",
    "poll_symbol": ""
  },
  "0x315f5c": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x315f5c>",
    "poll_symbol": ""
  },
  "0x315fdc": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x315fdc>",
    "poll_symbol": ""
  },
  "0x316004": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x316004>",
    "poll_symbol": ""
  },
  "0x31602c": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x31602c>",
    "poll_symbol": ""
  },
  "0x316054": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x316054>",
    "poll_symbol": ""
  },
  "0x31607b": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x31607b>",
    "poll_symbol": ""
  },
  "0x3160a3": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3160a3>",
    "poll_symbol": ""
  },
  "0x3160ca": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x3160ca>",
    "poll_symbol": ""
  },
  "0x3160f1": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x3160f1>",
    "poll_symbol": ""
  },
  "0x316118": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x316118>",
    "poll_symbol": ""
  },
  "0x31613f": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x31613f>",
    "poll_symbol": ""
  },
  "0x316167": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x316167>",
    "poll_symbol": ""
  },
  "0x31631d": {
    "name": "StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x31631d>",
    "poll_symbol": ""
  },
  "0x316359": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)<0x316359>",
    "poll_symbol": ""
  },
  "0x316395": {
    "name": "((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x316395>",
    "poll_symbol": ""
  },
  "0x3163b3": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x3163b3>",
    "poll_symbol": ""
  },
  "0x31641f": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global><0x31641f>",
    "poll_symbol": ""
  },
  "0x316446": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)<0x316446>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x3168a5": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x3168a5>",
    "poll_symbol": ""
  },
  "0x3168cc": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x3168cc>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x31691f": {
    "name": "(core::option::Option<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)<0x31691f>",
    "poll_symbol": ""
  },
  "0x316a00": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x316a00>",
    "poll_symbol": ""
  },
  "0x316a27": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x316a27>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x316a38": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x316a38>",
    "poll_symbol": ""
  },
  "0x316a56": {
    "name": "UnsafeOverwriteGuard<hyper_util::common::lazy::Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x316a56>",
    "poll_symbol": ""
  },
  "0x316a82": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>><0x316a82>",
    "poll_symbol": ""
  },
  "0x316aa0": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x316aa0>",
    "poll_symbol": ""
  },
  "0x316abe": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x316abe>",
    "poll_symbol": ""
  },
  "0x316aea": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x316aea>",
    "poll_symbol": ""
  },
  "0x316b16": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>><0x316b16>",
    "poll_symbol": ""
  },
  "0x316b34": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>><0x316b34>",
    "poll_symbol": ""
  },
  "0x316b52": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>><0x316b52>",
    "poll_symbol": ""
  },
  "0x316b70": {
    "name": "UnsafeDropInPlaceGuard<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x316b70>",
    "poll_symbol": ""
  },
  "0x316b8e": {
    "name": "UnsafeDropInPlaceGuard<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x316b8e>",
    "poll_symbol": ""
  },
  "0x316bac": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>><0x316bac>",
    "poll_symbol": ""
  },
  "0x316bca": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x316bca>",
    "poll_symbol": ""
  },
  "0x316be8": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>><0x316be8>",
    "poll_symbol": ""
  },
  "0x316c06": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x316c06>",
    "poll_symbol": ""
  },
  "0x316c30": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x316c30>",
    "poll_symbol": ""
  },
  "0x316c4e": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x316c4e>",
    "poll_symbol": ""
  },
  "0x316c6c": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x316c6c>",
    "poll_symbol": ""
  },
  "0x316c96": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x316c96>",
    "poll_symbol": ""
  },
  "0x316cc0": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x316cc0>",
    "poll_symbol": ""
  },
  "0x316cea": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x316cea>",
    "poll_symbol": ""
  },
  "0x316d16": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x316d16>",
    "poll_symbol": ""
  },
  "0x316d40": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x316d40>",
    "poll_symbol": ""
  },
  "0x316d6a": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x316d6a>",
    "poll_symbol": ""
  },
  "0x316d96": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x316d96>",
    "poll_symbol": ""
  },
  "0x316dc2": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x316dc2>",
    "poll_symbol": ""
  },
  "0x316e08": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)",
    "poll_symbol": ""
  },
  "0x316ec8": {
    "name": "(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)<0x316ec8>",
    "poll_symbol": ""
  },
  "0x316ee7": {
    "name": "(core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::pool::Error>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)<0x316ee7>",
    "poll_symbol": ""
  },
  "0x316f72": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>>, ())",
    "poll_symbol": ""
  },
  "0x316feb": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, ())",
    "poll_symbol": ""
  },
  "0x317009": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global><0x317009>",
    "poll_symbol": ""
  },
  "0x317030": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)<0x317030>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x3170e8": {
    "name": "&mut [futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>]<0x3170e8>",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h2e71021a18a94d6fE"
  },
  "0x31715d": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>>, ())",
    "poll_symbol": ""
  },
  "0x31720a": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>>, ())",
    "poll_symbol": ""
  },
  "0x317235": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>>, ())",
    "poll_symbol": ""
  },
  "0x317287": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, ())",
    "poll_symbol": ""
  },
  "0x3172a5": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, ())",
    "poll_symbol": ""
  },
  "0x317426": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, ())",
    "poll_symbol": ""
  },
  "0x3174bd": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>, ())",
    "poll_symbol": ""
  },
  "0x317564": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>>, ())",
    "poll_symbol": ""
  },
  "0x3175dd": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, ())",
    "poll_symbol": ""
  },
  "0x31762f": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, ())",
    "poll_symbol": ""
  },
  "0x317c4e": {
    "name": "*mut (dyn core::future::future::Future<Output=()> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x3181ab": {
    "name": "*mut [futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>]<0x3181ab>",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h2e71021a18a94d6fE"
  },
  "0x318b5a": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x318b78": {
    "name": "*mut (dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": ""
  },
  "0x318bed": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x318daf": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x318dcd": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x3191e1": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x3193c6": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x3194ce": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x319fb4": {
    "name": "*mut (dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": ""
  },
  "0x31b469": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x31b469>",
    "poll_symbol": ""
  },
  "0x31b52c": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x31b52c>",
    "poll_symbol": ""
  },
  "0x31bc72": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x31bc72>",
    "poll_symbol": ""
  },
  "0x31c285": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x31c285>",
    "poll_symbol": ""
  },
  "0x31c2e6": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x31c2e6>",
    "poll_symbol": ""
  },
  "0x31c7e4": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x31c7e4>",
    "poll_symbol": ""
  },
  "0x31e087": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x31e087>",
    "poll_symbol": ""
  },
  "0x31e0a5": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x31e0a5>",
    "poll_symbol": ""
  },
  "0x31e0c3": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x31e0c3>",
    "poll_symbol": ""
  },
  "0x31e1ef": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x31e1ef>",
    "poll_symbol": ""
  },
  "0x31e20d": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x31e20d>",
    "poll_symbol": ""
  },
  "0x31e22b": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x31e22b>",
    "poll_symbol": ""
  },
  "0x31e357": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x31e357>",
    "poll_symbol": ""
  },
  "0x320a2a": {
    "name": "Result<futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::Error><0x320a2a>",
    "poll_symbol": ""
  },
  "0x3211bb": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x3211bb>",
    "poll_symbol": ""
  },
  "0x3211cd": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x3211cd>",
    "poll_symbol": ""
  },
  "0x3211df": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x3211df>",
    "poll_symbol": ""
  },
  "0x321385": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x321385>",
    "poll_symbol": ""
  },
  "0x321397": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x321397>",
    "poll_symbol": ""
  },
  "0x3213a9": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x3213a9>",
    "poll_symbol": ""
  },
  "0x3213bb": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x3213bb>",
    "poll_symbol": ""
  },
  "0x3213cd": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x3213cd>",
    "poll_symbol": ""
  },
  "0x3214ff": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x3214ff>",
    "poll_symbol": ""
  },
  "0x32183b": {
    "name": "PhantomData<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x32184d": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>><0x32184d>",
    "poll_symbol": ""
  },
  "0x32185f": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>>",
    "poll_symbol": ""
  },
  "0x321871": {
    "name": "PhantomData<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x321883": {
    "name": "PhantomData<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x321895": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>>",
    "poll_symbol": ""
  },
  "0x3218a7": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x3218b9": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>>",
    "poll_symbol": ""
  },
  "0x3218cb": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>>",
    "poll_symbol": ""
  },
  "0x3218dd": {
    "name": "PhantomData<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x3218ef": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x3218ef>",
    "poll_symbol": ""
  },
  "0x321901": {
    "name": "PhantomData<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x321ae0": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x321ae0>",
    "poll_symbol": ""
  },
  "0x321b13": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x321b13>",
    "poll_symbol": ""
  },
  "0x321b64": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x321b64>",
    "poll_symbol": ""
  },
  "0x321c70": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x321c70>",
    "poll_symbol": ""
  },
  "0x321cac": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x321cac>",
    "poll_symbol": ""
  },
  "0x321cca": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x321cca>",
    "poll_symbol": ""
  },
  "0x321ee9": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x321ee9>",
    "poll_symbol": ""
  },
  "0x322f0d": {
    "name": "Pin<&mut futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x322f0d>",
    "poll_symbol": ""
  },
  "0x322f87": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x322f87>",
    "poll_symbol": ""
  },
  "0x322fe3": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x322fe3>",
    "poll_symbol": ""
  },
  "0x323001": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x323001>",
    "poll_symbol": ""
  },
  "0x32307b": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x32307b>",
    "poll_symbol": ""
  },
  "0x3230d7": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x3230d7>",
    "poll_symbol": ""
  },
  "0x323133": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x323133>",
    "poll_symbol": ""
  },
  "0x323151": {
    "name": "Pin<&mut futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x323151>",
    "poll_symbol": ""
  },
  "0x3231ad": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3231ad>",
    "poll_symbol": ""
  },
  "0x323209": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x323209>",
    "poll_symbol": ""
  },
  "0x323265": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x323265>",
    "poll_symbol": ""
  },
  "0x3232c1": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x3232c1>",
    "poll_symbol": ""
  },
  "0x32333b": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x32333b>",
    "poll_symbol": ""
  },
  "0x323397": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x323397>",
    "poll_symbol": ""
  },
  "0x3233f3": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3233f3>",
    "poll_symbol": ""
  },
  "0x323411": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x323411>",
    "poll_symbol": ""
  },
  "0x32342f": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>><0x32342f>",
    "poll_symbol": ""
  },
  "0x32344d": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x32344d>",
    "poll_symbol": ""
  },
  "0x32346b": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>><0x32346b>",
    "poll_symbol": ""
  },
  "0x323489": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>><0x323489>",
    "poll_symbol": ""
  },
  "0x3234a7": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3234a7>",
    "poll_symbol": ""
  },
  "0x3234c5": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>><0x3234c5>",
    "poll_symbol": ""
  },
  "0x3234e3": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>><0x3234e3>",
    "poll_symbol": ""
  },
  "0x323501": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x323501>",
    "poll_symbol": ""
  },
  "0x32351f": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>><0x32351f>",
    "poll_symbol": ""
  },
  "0x32353d": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x32353d>",
    "poll_symbol": ""
  },
  "0x323598": {
    "name": "Pin<&mut futures_util::future::poll_fn::PollFn<hyper::client::conn::http1::{impl#1}::ready::{async_fn#0}::{closure_env#0}<reqwest::async_impl::body::Body>>><0x323598>",
    "poll_symbol": ""
  },
  "0x3235d5": {
    "name": "Pin<&mut tokio::net::tcp::stream::{impl#0}::connect_mio::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x323612": {
    "name": "Pin<&mut core::future::ready::Ready<core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>>",
    "poll_symbol": ""
  },
  "0x323731": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x323731>",
    "poll_symbol": ""
  },
  "0x32374f": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x32374f>",
    "poll_symbol": ""
  },
  "0x323c80": {
    "name": "Poll<core::result::Result<futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::Error>><0x323c80>",
    "poll_symbol": ""
  },
  "0x324274": {
    "name": "ManuallyDrop<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x3242ce": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3242ce>",
    "poll_symbol": ""
  },
  "0x3242ec": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x3242ec>",
    "poll_symbol": ""
  },
  "0x32430b": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x32430b>",
    "poll_symbol": ""
  },
  "0x324329": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x324329>",
    "poll_symbol": ""
  },
  "0x324348": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x324348>",
    "poll_symbol": ""
  },
  "0x324366": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x324366>",
    "poll_symbol": ""
  },
  "0x324385": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x324385>",
    "poll_symbol": ""
  },
  "0x3243a3": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x3243a3>",
    "poll_symbol": ""
  },
  "0x3243c1": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x3243c1>",
    "poll_symbol": ""
  },
  "0x3243df": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3243df>",
    "poll_symbol": ""
  },
  "0x3243fd": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x3243fd>",
    "poll_symbol": ""
  },
  "0x32441c": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x32441c>",
    "poll_symbol": ""
  },
  "0x329d37": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x329d37>",
    "poll_symbol": ""
  },
  "0x329e47": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x329e47>",
    "poll_symbol": ""
  },
  "0x329f2e": {
    "name": "ResponseFuture<0x329f2e>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x32a16d": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x32a16d>",
    "poll_symbol": ""
  },
  "0x32b059": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x32b059>",
    "poll_symbol": ""
  },
  "0x32b3b5": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x32b3b5>",
    "poll_symbol": ""
  },
  "0x32b56e": {
    "name": "{async_block_env#0}<reqwest::async_impl::body::Body><0x32b56e>",
    "poll_symbol": ""
  },
  "0x32b7f9": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x32b7f9>",
    "poll_symbol": ""
  },
  "0x32b98a": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x32b98a>",
    "poll_symbol": ""
  },
  "0x32c9a9": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x32c9a9>",
    "poll_symbol": ""
  },
  "0x32cf4b": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x32cf4b>",
    "poll_symbol": ""
  },
  "0x32cf8a": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x32cf8a>",
    "poll_symbol": ""
  },
  "0x32cfc9": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x32cfc9>",
    "poll_symbol": ""
  },
  "0x32cfff": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x32cfff>",
    "poll_symbol": ""
  },
  "0x32d035": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x32d035>",
    "poll_symbol": ""
  },
  "0x32d074": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x32d074>",
    "poll_symbol": ""
  },
  "0x32d3e2": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x32d3e2>",
    "poll_symbol": ""
  },
  "0x32d421": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x32d421>",
    "poll_symbol": ""
  },
  "0x32d457": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x32d457>",
    "poll_symbol": ""
  },
  "0x32d496": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x32d496>",
    "poll_symbol": ""
  },
  "0x32d4cc": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x32d4cc>",
    "poll_symbol": ""
  },
  "0x32d50b": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x32d50b>",
    "poll_symbol": ""
  },
  "0x32d991": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x32d991>",
    "poll_symbol": ""
  },
  "0x32d9d0": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x32d9d0>",
    "poll_symbol": ""
  },
  "0x32e45a": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x32e45a>",
    "poll_symbol": ""
  },
  "0x32ea3f": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x32ea3f>",
    "poll_symbol": ""
  },
  "0x32eade": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x32eade>",
    "poll_symbol": ""
  },
  "0x330cd5": {
    "name": "{async_fn_env#0}<0x330cd5>",
    "poll_symbol": ""
  },
  "0x330d91": {
    "name": "{async_fn_env#0}<0x330d91>",
    "poll_symbol": ""
  },
  "0x330ea9": {
    "name": "{async_fn_env#0}<0x330ea9>",
    "poll_symbol": ""
  },
  "0x330f75": {
    "name": "{async_fn_env#0}<0x330f75>",
    "poll_symbol": ""
  },
  "0x3312d2": {
    "name": "{async_fn_env#0}<0x3312d2>",
    "poll_symbol": ""
  },
  "0x3320a6": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x3320a6>",
    "poll_symbol": ""
  },
  "0x332b01": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x332b01>",
    "poll_symbol": ""
  },
  "0x332b29": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x332b29>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h9f5b4f64f11deecbE"
  },
  "0x3350d0": {
    "name": "{async_fn_env#0}<0x3350d0>",
    "poll_symbol": ""
  },
  "0x335303": {
    "name": "{async_fn_env#0}<0x335303>",
    "poll_symbol": ""
  },
  "0x335422": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x335422>",
    "poll_symbol": ""
  },
  "0x335440": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x335440>",
    "poll_symbol": ""
  },
  "0x335799": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x335799>",
    "poll_symbol": ""
  },
  "0x33628b": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x33628b>",
    "poll_symbol": ""
  },
  "0x33638b": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x33638b>",
    "poll_symbol": ""
  },
  "0x33648f": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x33648f>",
    "poll_symbol": ""
  },
  "0x336593": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x336593>",
    "poll_symbol": ""
  },
  "0x336696": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x336696>",
    "poll_symbol": ""
  },
  "0x33679a": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x33679a>",
    "poll_symbol": ""
  },
  "0x33689a": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x33689a>",
    "poll_symbol": ""
  },
  "0x33699e": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x33699e>",
    "poll_symbol": ""
  },
  "0x336a9e": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x336a9e>",
    "poll_symbol": ""
  },
  "0x336b9e": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x336b9e>",
    "poll_symbol": ""
  },
  "0x336ca2": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x336ca2>",
    "poll_symbol": ""
  },
  "0x336da2": {
    "name": "MapProjReplace<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x336e22": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x336e22>",
    "poll_symbol": ""
  },
  "0x336ea2": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x336f22": {
    "name": "MapProjReplace<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x336fa2": {
    "name": "MapProjReplace<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x337022": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x3370a2": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>",
    "poll_symbol": ""
  },
  "0x337122": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>",
    "poll_symbol": ""
  },
  "0x3371a2": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x337222": {
    "name": "MapProjReplace<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x3372a2": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3372a2>",
    "poll_symbol": ""
  },
  "0x337325": {
    "name": "MapProjReplace<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x3373a5": {
    "name": "MapProj<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x337424": {
    "name": "MapProj<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x3374a3": {
    "name": "MapProj<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x337522": {
    "name": "MapProj<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x3375a1": {
    "name": "MapProj<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x337620": {
    "name": "MapProj<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x33769f": {
    "name": "MapProj<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x33771e": {
    "name": "MapProj<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>",
    "poll_symbol": ""
  },
  "0x33779d": {
    "name": "MapProj<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x33781c": {
    "name": "MapProj<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x33789b": {
    "name": "MapProj<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>",
    "poll_symbol": ""
  },
  "0x33791a": {
    "name": "MapProj<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": ""
  },
  "0x33799a": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x33799a>",
    "poll_symbol": ""
  },
  "0x3379c1": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3379c1>",
    "poll_symbol": ""
  },
  "0x3379e9": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3379e9>",
    "poll_symbol": ""
  },
  "0x337a11": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x337a11>",
    "poll_symbol": ""
  },
  "0x337a39": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x337a39>",
    "poll_symbol": ""
  },
  "0x337a6b": {
    "name": "IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x337a6b>",
    "poll_symbol": ""
  },
  "0x337a89": {
    "name": "IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>><0x337a89>",
    "poll_symbol": ""
  },
  "0x337aa8": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x337aa8>",
    "poll_symbol": ""
  },
  "0x337ac6": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x337ac6>",
    "poll_symbol": ""
  },
  "0x337ae4": {
    "name": "IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x337ae4>",
    "poll_symbol": ""
  },
  "0x337b03": {
    "name": "IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>><0x337b03>",
    "poll_symbol": ""
  },
  "0x337b21": {
    "name": "IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>><0x337b21>",
    "poll_symbol": ""
  },
  "0x337b67": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x337b67>",
    "poll_symbol": ""
  },
  "0x337b98": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x337b98>",
    "poll_symbol": ""
  },
  "0x337bc0": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x337bc0>",
    "poll_symbol": ""
  },
  "0x337bed": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x337bed>",
    "poll_symbol": ""
  },
  "0x337c9a": {
    "name": "MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x337c9a>",
    "poll_symbol": ""
  },
  "0x337d17": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x337d17>",
    "poll_symbol": ""
  },
  "0x337d99": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x337d99>",
    "poll_symbol": ""
  },
  "0x338271": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x338271>",
    "poll_symbol": ""
  },
  "0x338483": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x338483>",
    "poll_symbol": ""
  },
  "0x3386de": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x3386de>",
    "poll_symbol": ""
  },
  "0x338708": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x338708>",
    "poll_symbol": ""
  },
  "0x339227": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x339227>",
    "poll_symbol": ""
  },
  "0x339252": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x339252>",
    "poll_symbol": ""
  },
  "0x339259": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x339259>",
    "poll_symbol": ""
  },
  "0x33930b": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x33930b>",
    "poll_symbol": ""
  },
  "0x339332": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x339332>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x339aaf": {
    "name": "MapFuture<tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>>><0x339aaf>",
    "poll_symbol": ""
  },
  "0x339aee": {
    "name": "ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x339aee>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x339b1b": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x339b1b>",
    "poll_symbol": ""
  },
  "0x339b42": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x339b42>",
    "poll_symbol": ""
  },
  "0x341522": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x341522>",
    "poll_symbol": ""
  },
  "0x341549": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x341549>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x34158e": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x34158e>",
    "poll_symbol": ""
  },
  "0x3415b8": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x3415b8>",
    "poll_symbol": ""
  },
  "0x3415e4": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x3415e4>",
    "poll_symbol": ""
  },
  "0x34160e": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x34160e>",
    "poll_symbol": ""
  },
  "0x34163a": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x34163a>",
    "poll_symbol": ""
  },
  "0x341664": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x341664>",
    "poll_symbol": ""
  },
  "0x341690": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x341690>",
    "poll_symbol": ""
  },
  "0x3416ba": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x3416ba>",
    "poll_symbol": ""
  },
  "0x3416e4": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x3416e4>",
    "poll_symbol": ""
  },
  "0x34170e": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x34170e>",
    "poll_symbol": ""
  },
  "0x341738": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x341738>",
    "poll_symbol": ""
  },
  "0x341764": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x341764>",
    "poll_symbol": ""
  },
  "0x342487": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x342487>",
    "poll_symbol": ""
  },
  "0x342eb8": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x342eb8>",
    "poll_symbol": ""
  },
  "0x342f00": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x342f00>",
    "poll_symbol": ""
  },
  "0x343021": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x343021>",
    "poll_symbol": ""
  },
  "0x34307b": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x34307b>",
    "poll_symbol": ""
  },
  "0x343099": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x343099>",
    "poll_symbol": ""
  },
  "0x343588": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x343588>",
    "poll_symbol": ""
  },
  "0x3435c4": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x3435c4>",
    "poll_symbol": ""
  },
  "0x343ceb": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x343ceb>",
    "poll_symbol": ""
  },
  "0x343d09": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x343d09>",
    "poll_symbol": ""
  },
  "0x343d27": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x343d27>",
    "poll_symbol": ""
  },
  "0x3444bb": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x3444bb>",
    "poll_symbol": ""
  },
  "0x344501": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x344501>",
    "poll_symbol": ""
  },
  "0x344547": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x344547>",
    "poll_symbol": ""
  },
  "0x34458d": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34458d>",
    "poll_symbol": ""
  },
  "0x3447f8": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x3447f8>",
    "poll_symbol": ""
  },
  "0x344816": {
    "name": "NonNull<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x344816>",
    "poll_symbol": ""
  },
  "0x345525": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x345525>",
    "poll_symbol": ""
  },
  "0x345537": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x345537>",
    "poll_symbol": ""
  },
  "0x345549": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x345549>",
    "poll_symbol": ""
  },
  "0x345b5d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x345b5d>",
    "poll_symbol": ""
  },
  "0x345b6f": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x345b6f>",
    "poll_symbol": ""
  },
  "0x345b81": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x345b81>",
    "poll_symbol": ""
  },
  "0x34667c": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x34667c>",
    "poll_symbol": ""
  },
  "0x34673f": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x34673f>",
    "poll_symbol": ""
  },
  "0x347196": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x347196>",
    "poll_symbol": ""
  },
  "0x3471f7": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x3471f7>",
    "poll_symbol": ""
  },
  "0x348935": {
    "name": "Option<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x348935>",
    "poll_symbol": ""
  },
  "0x348a5f": {
    "name": "Option<&mut ((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)>",
    "poll_symbol": ""
  },
  "0x348bf1": {
    "name": "Option<alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>><0x348bf1>",
    "poll_symbol": ""
  },
  "0x349f00": {
    "name": "Result<(h2::client::ResponseFuture, h2::share::SendStream<hyper::proto::h2::SendBuf<bytes::bytes::Bytes>>), h2::error::Error><0x349f00>",
    "poll_symbol": ""
  },
  "0x34cd1f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x34cd1f>",
    "poll_symbol": ""
  },
  "0x34cd3d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34cd3d>",
    "poll_symbol": ""
  },
  "0x34cd5b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34cd5b>",
    "poll_symbol": ""
  },
  "0x34cd79": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x34cd79>",
    "poll_symbol": ""
  },
  "0x34cd97": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34cd97>",
    "poll_symbol": ""
  },
  "0x34cdb5": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34cdb5>",
    "poll_symbol": ""
  },
  "0x34cdd3": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34cdd3>",
    "poll_symbol": ""
  },
  "0x34ce0f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x34ce0f>",
    "poll_symbol": ""
  },
  "0x34ce2d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x34ce2d>",
    "poll_symbol": ""
  },
  "0x34ce4b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x34ce4b>",
    "poll_symbol": ""
  },
  "0x34ce69": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x34ce69>",
    "poll_symbol": ""
  },
  "0x34ce87": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x34ce87>",
    "poll_symbol": ""
  },
  "0x34cea5": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x34cea5>",
    "poll_symbol": ""
  },
  "0x34cec3": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x34cec3>",
    "poll_symbol": ""
  },
  "0x34ceff": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34ceff>",
    "poll_symbol": ""
  },
  "0x34cf1d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34cf1d>",
    "poll_symbol": ""
  },
  "0x34cf3b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34cf3b>",
    "poll_symbol": ""
  },
  "0x34cf77": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x34cf77>",
    "poll_symbol": ""
  },
  "0x34cf95": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34cf95>",
    "poll_symbol": ""
  },
  "0x34cfb3": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34cfb3>",
    "poll_symbol": ""
  },
  "0x34cfef": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34cfef>",
    "poll_symbol": ""
  },
  "0x34d02b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x34d02b>",
    "poll_symbol": ""
  },
  "0x34d049": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34d049>",
    "poll_symbol": ""
  },
  "0x34d067": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x34d067>",
    "poll_symbol": ""
  },
  "0x34d193": {
    "name": "Pin<&mut h2::client::bind_connection::{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>>>",
    "poll_symbol": ""
  },
  "0x34d1ee": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x34d1ee>",
    "poll_symbol": ""
  },
  "0x34d20c": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x34d20c>",
    "poll_symbol": ""
  },
  "0x351ba8": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x351ba8>",
    "poll_symbol": ""
  },
  "0x351cd4": {
    "name": "ResponseFuture<0x351cd4>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x351e80": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x351e80>",
    "poll_symbol": ""
  },
  "0x3550b6": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x3550b6>",
    "poll_symbol": ""
  },
  "0x35582d": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x35582d>",
    "poll_symbol": ""
  },
  "0x35586c": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x35586c>",
    "poll_symbol": ""
  },
  "0x3558ab": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x3558ab>",
    "poll_symbol": ""
  },
  "0x3558e1": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x3558e1>",
    "poll_symbol": ""
  },
  "0x355917": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x355917>",
    "poll_symbol": ""
  },
  "0x355956": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x355956>",
    "poll_symbol": ""
  },
  "0x35670d": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x35670d>",
    "poll_symbol": ""
  },
  "0x35674c": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x35674c>",
    "poll_symbol": ""
  },
  "0x356973": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x356973>",
    "poll_symbol": ""
  },
  "0x358ab3": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x358ab3>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x358af3": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x358af3>",
    "poll_symbol": ""
  },
  "0x358b32": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x358b32>",
    "poll_symbol": ""
  },
  "0x358b50": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x358b50>",
    "poll_symbol": ""
  },
  "0x358c0b": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x358c0b>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x358c4b": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x358c4b>",
    "poll_symbol": ""
  },
  "0x358c8a": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x358c8a>",
    "poll_symbol": ""
  },
  "0x358ca8": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x358ca8>",
    "poll_symbol": ""
  },
  "0x358d36": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x358d36>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x358d76": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x358d76>",
    "poll_symbol": ""
  },
  "0x358db5": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x358db5>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x358df5": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x358df5>",
    "poll_symbol": ""
  },
  "0x359156": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x359156>",
    "poll_symbol": ""
  },
  "0x359174": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x359174>",
    "poll_symbol": ""
  },
  "0x359192": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x359192>",
    "poll_symbol": ""
  },
  "0x3591b0": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3591b0>",
    "poll_symbol": ""
  },
  "0x3591ce": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3591ce>",
    "poll_symbol": ""
  },
  "0x3591ec": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3591ec>",
    "poll_symbol": ""
  },
  "0x35920a": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x35920a>",
    "poll_symbol": ""
  },
  "0x359228": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x359228>",
    "poll_symbol": ""
  },
  "0x35924c": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x35924c>",
    "poll_symbol": ""
  },
  "0x35925f": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x35925f>",
    "poll_symbol": ""
  },
  "0x359272": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x359272>",
    "poll_symbol": ""
  },
  "0x359285": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x359285>",
    "poll_symbol": ""
  },
  "0x3592a3": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3592a3>",
    "poll_symbol": ""
  },
  "0x3592c1": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3592c1>",
    "poll_symbol": ""
  },
  "0x3592df": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3592df>",
    "poll_symbol": ""
  },
  "0x3592fd": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3592fd>",
    "poll_symbol": ""
  },
  "0x35931b": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x35931b>",
    "poll_symbol": ""
  },
  "0x359339": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x359339>",
    "poll_symbol": ""
  },
  "0x359357": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x359357>",
    "poll_symbol": ""
  },
  "0x359375": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x359375>",
    "poll_symbol": ""
  },
  "0x359399": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x359399>",
    "poll_symbol": ""
  },
  "0x3593ac": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3593ac>",
    "poll_symbol": ""
  },
  "0x3593bf": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3593bf>",
    "poll_symbol": ""
  },
  "0x3593d2": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3593d2>",
    "poll_symbol": ""
  },
  "0x3593e7": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3593e7>",
    "poll_symbol": ""
  },
  "0x35940e": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x35940e>",
    "poll_symbol": ""
  },
  "0x359435": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x359435>",
    "poll_symbol": ""
  },
  "0x35945c": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x35945c>",
    "poll_symbol": ""
  },
  "0x35a4a1": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x35a4a1>",
    "poll_symbol": ""
  },
  "0x35a4bf": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x35a4bf>",
    "poll_symbol": ""
  },
  "0x35adc2": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>><0x35adc2>",
    "poll_symbol": ""
  },
  "0x35add5": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<tokio::net::tcp::stream::TcpStream, std::io::error::Error>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}>><0x35add5>",
    "poll_symbol": ""
  },
  "0x35ade8": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>><0x35ade8>",
    "poll_symbol": ""
  },
  "0x35bd97": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x35bd97>",
    "poll_symbol": ""
  },
  "0x35bdbe": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x35bdbe>",
    "poll_symbol": ""
  },
  "0x35c51b": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x35c51b>",
    "poll_symbol": ""
  },
  "0x35ce41": {
    "name": "{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), (http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>><0x35ce41>",
    "poll_symbol": ""
  },
  "0x35d8f2": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x35d8f2>",
    "poll_symbol": ""
  },
  "0x35d96c": {
    "name": "Bucket<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x35d96c>",
    "poll_symbol": ""
  },
  "0x35df8e": {
    "name": "RustcEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, alloc::alloc::Global><0x35df8e>",
    "poll_symbol": ""
  },
  "0x35e01f": {
    "name": "RustcOccupiedEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, alloc::alloc::Global><0x35e01f>",
    "poll_symbol": ""
  },
  "0x35e05b": {
    "name": "RustcVacantEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, alloc::alloc::Global><0x35e05b>",
    "poll_symbol": ""
  },
  "0x35e3f0": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x35e3f0>",
    "poll_symbol": ""
  },
  "0x35e41a": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x35e41a>",
    "poll_symbol": ""
  },
  "0x35ef21": {
    "name": "IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>><0x35ef21>",
    "poll_symbol": ""
  },
  "0x35ef47": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x35ef47>",
    "poll_symbol": ""
  },
  "0x35ef74": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x35ef74>",
    "poll_symbol": ""
  },
  "0x363c6a": {
    "name": "(h2::client::ResponseFuture, h2::share::SendStream<hyper::proto::h2::SendBuf<bytes::bytes::Bytes>>)<0x363c6a>",
    "poll_symbol": ""
  },
  "0x364a93": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x364a93>",
    "poll_symbol": ""
  },
  "0x364aba": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x364aba>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x365e36": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x365e36>",
    "poll_symbol": ""
  },
  "0x3697c4": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x3697c4>",
    "poll_symbol": ""
  },
  "0x3698d4": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x3698d4>",
    "poll_symbol": ""
  },
  "0x369be5": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x369be5>",
    "poll_symbol": ""
  },
  "0x369c03": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x369c03>",
    "poll_symbol": ""
  },
  "0x369c21": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x369c21>",
    "poll_symbol": ""
  },
  "0x369de3": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x369de3>",
    "poll_symbol": ""
  },
  "0x369e01": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x369e01>",
    "poll_symbol": ""
  },
  "0x369e1f": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x369e1f>",
    "poll_symbol": ""
  },
  "0x36a440": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x36a440>",
    "poll_symbol": ""
  },
  "0x36a4a4": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x36a4a4>",
    "poll_symbol": ""
  },
  "0x36a508": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x36a508>",
    "poll_symbol": ""
  },
  "0x36a56c": {
    "name": "NonNull<futures_channel::mpsc::queue::Node<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x36a5d0": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x36a5d0>",
    "poll_symbol": ""
  },
  "0x36abbf": {
    "name": "NonNull<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x36ac05": {
    "name": "NonNull<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x36ac91": {
    "name": "NonNull<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x36acd7": {
    "name": "NonNull<(dyn core::future::future::Future<Output=()> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x36ad1d": {
    "name": "NonNull<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x36ad63": {
    "name": "NonNull<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x36ada9": {
    "name": "NonNull<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": ""
  },
  "0x36ae7b": {
    "name": "NonNull<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x36af4d": {
    "name": "NonNull<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": ""
  },
  "0x36afd9": {
    "name": "NonNull<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x36b01f": {
    "name": "NonNull<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x36b422": {
    "name": "Unique<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x36b491": {
    "name": "Unique<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x36b500": {
    "name": "Unique<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x36b56f": {
    "name": "Unique<futures_channel::mpsc::queue::Node<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x36b5de": {
    "name": "Unique<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x36bbab": {
    "name": "Unique<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x36bbfc": {
    "name": "Unique<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x36bc9e": {
    "name": "Unique<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x36bcef": {
    "name": "Unique<(dyn core::future::future::Future<Output=()> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x36bd40": {
    "name": "Unique<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x36bd91": {
    "name": "Unique<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x36bde2": {
    "name": "Unique<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": ""
  },
  "0x36bed5": {
    "name": "Unique<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x36bfc8": {
    "name": "Unique<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": ""
  },
  "0x36c06a": {
    "name": "Unique<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x36c0bb": {
    "name": "Unique<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x36c755": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x36c755>",
    "poll_symbol": ""
  },
  "0x36c79d": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x36c79d>",
    "poll_symbol": ""
  },
  "0x36c821": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x36c821>",
    "poll_symbol": ""
  },
  "0x36c8a0": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x36c8a0>",
    "poll_symbol": ""
  },
  "0x36c8fa": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x36c8fa>",
    "poll_symbol": ""
  },
  "0x36c918": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x36c918>",
    "poll_symbol": ""
  },
  "0x36ce43": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x36ce43>",
    "poll_symbol": ""
  },
  "0x36ce7f": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x36ce7f>",
    "poll_symbol": ""
  },
  "0x36ce9d": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x36ce9d>",
    "poll_symbol": ""
  },
  "0x36cf69": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x36cf69>",
    "poll_symbol": ""
  },
  "0x36cf7b": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x36cf7b>",
    "poll_symbol": ""
  },
  "0x36cf8d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x36cf8d>",
    "poll_symbol": ""
  },
  "0x36d1f9": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x36d1f9>",
    "poll_symbol": ""
  },
  "0x36d20b": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x36d20b>",
    "poll_symbol": ""
  },
  "0x36d21d": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x36d21d>",
    "poll_symbol": ""
  },
  "0x36d22f": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x36d22f>",
    "poll_symbol": ""
  },
  "0x36d241": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x36d241>",
    "poll_symbol": ""
  },
  "0x36d60d": {
    "name": "PhantomData<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x36d61f": {
    "name": "PhantomData<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x36d631": {
    "name": "PhantomData<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x36d643": {
    "name": "PhantomData<futures_channel::mpsc::queue::Node<core::convert::Infallible>>",
    "poll_symbol": ""
  },
  "0x36d655": {
    "name": "PhantomData<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x36d7ab": {
    "name": "PhantomData<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": ""
  },
  "0x36d7bd": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x36d7e1": {
    "name": "PhantomData<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x36d7f3": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=()> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x36d805": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x36d817": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x36d829": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": ""
  },
  "0x36d85f": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x36d895": {
    "name": "PhantomData<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": ""
  },
  "0x36d8b9": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x36d8cb": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x36dc7f": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x36dc7f>",
    "poll_symbol": ""
  },
  "0x36dc9d": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x36dc9d>",
    "poll_symbol": ""
  },
  "0x36dcbb": {
    "name": "Pin<&mut futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x36dcbb>",
    "poll_symbol": ""
  },
  "0x36dcd9": {
    "name": "Pin<&mut futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x36dcd9>",
    "poll_symbol": ""
  },
  "0x36dcf7": {
    "name": "Pin<&mut futures_util::future::try_future::try_flatten::TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x36dcf7>",
    "poll_symbol": ""
  },
  "0x36df17": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x36df17>",
    "poll_symbol": ""
  },
  "0x36df35": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x36df35>",
    "poll_symbol": ""
  },
  "0x36e00a": {
    "name": "Pin<&mut futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x36e00a>",
    "poll_symbol": ""
  },
  "0x36e028": {
    "name": "Pin<&mut futures_channel::oneshot::Receiver<core::convert::Infallible>><0x36e028>",
    "poll_symbol": ""
  },
  "0x36e1ef": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x36e1ef>",
    "poll_symbol": ""
  },
  "0x36e2b2": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x36e2b2>",
    "poll_symbol": ""
  },
  "0x36f5a9": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x36f5a9>",
    "poll_symbol": ""
  },
  "0x3714b0": {
    "name": "Poll<core::result::Result<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, futures_channel::oneshot::Canceled>><0x3714b0>",
    "poll_symbol": ""
  },
  "0x371511": {
    "name": "Poll<core::result::Result<core::convert::Infallible, futures_channel::oneshot::Canceled>>",
    "poll_symbol": ""
  },
  "0x371bbe": {
    "name": "Result<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, futures_channel::oneshot::Canceled><0x371bbe>",
    "poll_symbol": ""
  },
  "0x371c3d": {
    "name": "Result<core::convert::Infallible, futures_channel::oneshot::Canceled>",
    "poll_symbol": ""
  },
  "0x377c25": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x377c25>",
    "poll_symbol": ""
  },
  "0x377c43": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x377c43>",
    "poll_symbol": ""
  },
  "0x378974": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x378974>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x3789b4": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3789b4>",
    "poll_symbol": ""
  },
  "0x3789f3": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x3789f3>",
    "poll_symbol": ""
  },
  "0x378a11": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x378a11>",
    "poll_symbol": ""
  },
  "0x378acc": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x378acc>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x378b0c": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x378b0c>",
    "poll_symbol": ""
  },
  "0x378b4b": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x378b4b>",
    "poll_symbol": ""
  },
  "0x378b69": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x378b69>",
    "poll_symbol": ""
  },
  "0x378bf7": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x378bf7>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x378c37": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x378c37>",
    "poll_symbol": ""
  },
  "0x378c76": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x378c76>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x378cb6": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x378cb6>",
    "poll_symbol": ""
  },
  "0x379be8": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x379be8>",
    "poll_symbol": ""
  },
  "0x379d81": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x379d81>",
    "poll_symbol": ""
  },
  "0x379eb0": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x379eb0>",
    "poll_symbol": ""
  },
  "0x37a041": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x37a041>",
    "poll_symbol": ""
  },
  "0x37a6bd": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x37a6bd>",
    "poll_symbol": ""
  },
  "0x37e071": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x37e071>",
    "poll_symbol": ""
  },
  "0x37e251": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x37e251>",
    "poll_symbol": ""
  },
  "0x37e290": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x37e290>",
    "poll_symbol": ""
  },
  "0x37e2cf": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x37e2cf>",
    "poll_symbol": ""
  },
  "0x37e305": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x37e305>",
    "poll_symbol": ""
  },
  "0x37e33b": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x37e33b>",
    "poll_symbol": ""
  },
  "0x37e37a": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x37e37a>",
    "poll_symbol": ""
  },
  "0x37e931": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x37e931>",
    "poll_symbol": ""
  },
  "0x37e970": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x37e970>",
    "poll_symbol": ""
  },
  "0x37e9a6": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x37e9a6>",
    "poll_symbol": ""
  },
  "0x37e9e5": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x37e9e5>",
    "poll_symbol": ""
  },
  "0x37ea1b": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x37ea1b>",
    "poll_symbol": ""
  },
  "0x37ea5a": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x37ea5a>",
    "poll_symbol": ""
  },
  "0x3849de": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x3849de>",
    "poll_symbol": ""
  },
  "0x385c7d": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x385c7d>",
    "poll_symbol": ""
  },
  "0x385d1c": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x385d1c>",
    "poll_symbol": ""
  },
  "0x3868cb": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x3868cb>",
    "poll_symbol": ""
  },
  "0x386add": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x386add>",
    "poll_symbol": ""
  },
  "0x386d38": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x386d38>",
    "poll_symbol": ""
  },
  "0x386d62": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x386d62>",
    "poll_symbol": ""
  },
  "0x3884d8": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x3884d8>",
    "poll_symbol": ""
  },
  "0x389de3": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x389de3>",
    "poll_symbol": ""
  },
  "0x389ede": {
    "name": "TryFlattenProj<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": ""
  },
  "0x38a0fe": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x38a0fe>",
    "poll_symbol": ""
  },
  "0x38a152": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x38a152>",
    "poll_symbol": ""
  },
  "0x38a170": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x38a170>",
    "poll_symbol": ""
  },
  "0x38a195": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x38a195>",
    "poll_symbol": ""
  },
  "0x38a1c1": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x38a1c1>",
    "poll_symbol": ""
  },
  "0x38a243": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x38a243>",
    "poll_symbol": ""
  },
  "0x38a2c7": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x38a2c7>",
    "poll_symbol": ""
  },
  "0x38a2f5": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x38a2f5>",
    "poll_symbol": ""
  },
  "0x38a5f5": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x38a5f5>",
    "poll_symbol": ""
  },
  "0x38a61c": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x38a61c>",
    "poll_symbol": ""
  },
  "0x38a623": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x38a623>",
    "poll_symbol": ""
  },
  "0x38a64a": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x38a64a>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x38a9ee": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x38a9ee>",
    "poll_symbol": ""
  },
  "0x38aa19": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x38aa19>",
    "poll_symbol": ""
  },
  "0x38aa20": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x38aa20>",
    "poll_symbol": ""
  },
  "0x38c670": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x38c670>",
    "poll_symbol": ""
  },
  "0x38c697": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x38c697>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x38d62a": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)<0x38d62a>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x38d631": {
    "name": "*const (dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x38da62": {
    "name": "*const (dyn core::future::future::Future<Output=()> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x38dba0": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x38dba0>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x38dba7": {
    "name": "*const (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x38dc5e": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)<0x38dc5e>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x38dc65": {
    "name": "*const (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x38dd1c": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x38dd1c>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x38dd23": {
    "name": "*const (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x38dfc6": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)<0x38dfc6>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x38dfcd": {
    "name": "*const (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x38e429": {
    "name": "*const (dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": ""
  },
  "0x38e604": {
    "name": "*const (dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x38e7d2": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x38e7d2>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x38e7d9": {
    "name": "*const (dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x38f7f8": {
    "name": "(futures_channel::oneshot::Sender<core::convert::Infallible>, futures_channel::oneshot::Receiver<core::convert::Infallible>)",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h2e71021a18a94d6fE"
  },
  "0x38f816": {
    "name": "(futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>)",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h2e71021a18a94d6fE"
  },
  "0x38f97d": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)<0x38f97d>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x38f9b9": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x38f9b9>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x38f9d7": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x38f9d7>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x38fa02": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)<0x38fa02>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x38fa20": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x38fa20>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x38fa4b": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x38fa4b>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x38fd8e": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global><0x38fd8e>",
    "poll_symbol": ""
  },
  "0x38fe2e": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x38fe2e>",
    "poll_symbol": ""
  },
  "0x38fe59": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global><0x38fe59>",
    "poll_symbol": ""
  },
  "0x38fe84": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x38fe84>",
    "poll_symbol": ""
  },
  "0x38fec9": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global><0x38fec9>",
    "poll_symbol": ""
  },
  "0x38ff83": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x38ff83>",
    "poll_symbol": ""
  },
  "0x392798": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x392798>",
    "poll_symbol": ""
  },
  "0x39285b": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x39285b>",
    "poll_symbol": ""
  },
  "0x3935c0": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x3935c0>",
    "poll_symbol": ""
  },
  "0x3935de": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x3935de>",
    "poll_symbol": ""
  },
  "0x3935fc": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x3935fc>",
    "poll_symbol": ""
  },
  "0x39361a": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x39361a>",
    "poll_symbol": ""
  },
  "0x3936ce": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x3936ce>",
    "poll_symbol": ""
  },
  "0x3936ec": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x3936ec>",
    "poll_symbol": ""
  },
  "0x39370a": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x39370a>",
    "poll_symbol": ""
  },
  "0x3937be": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x3937be>",
    "poll_symbol": ""
  },
  "0x395b05": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x395b05>",
    "poll_symbol": ""
  },
  "0x395b17": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x395b17>",
    "poll_symbol": ""
  },
  "0x395b29": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x395b29>",
    "poll_symbol": ""
  },
  "0x395b95": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x395b95>",
    "poll_symbol": ""
  },
  "0x395ba7": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x395ba7>",
    "poll_symbol": ""
  },
  "0x39609e": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x39609e>",
    "poll_symbol": ""
  },
  "0x3960bc": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x3960bc>",
    "poll_symbol": ""
  },
  "0x3965b0": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x3965b0>",
    "poll_symbol": ""
  },
  "0x3965ec": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x3965ec>",
    "poll_symbol": ""
  },
  "0x396664": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x396664>",
    "poll_symbol": ""
  },
  "0x396682": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x396682>",
    "poll_symbol": ""
  },
  "0x3966a0": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x3966a0>",
    "poll_symbol": ""
  },
  "0x39694e": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x39694e>",
    "poll_symbol": ""
  },
  "0x39698a": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x39698a>",
    "poll_symbol": ""
  },
  "0x396a02": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x396a02>",
    "poll_symbol": ""
  },
  "0x396a20": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x396a20>",
    "poll_symbol": ""
  },
  "0x396a5c": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x396a5c>",
    "poll_symbol": ""
  },
  "0x396a7a": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x396a7a>",
    "poll_symbol": ""
  },
  "0x396a98": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x396a98>",
    "poll_symbol": ""
  },
  "0x396ab6": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x396ab6>",
    "poll_symbol": ""
  },
  "0x396ad4": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x396ad4>",
    "poll_symbol": ""
  },
  "0x396b2e": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x396b2e>",
    "poll_symbol": ""
  },
  "0x396b4c": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x396b4c>",
    "poll_symbol": ""
  },
  "0x396b6a": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x396b6a>",
    "poll_symbol": ""
  },
  "0x396ba6": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x396ba6>",
    "poll_symbol": ""
  },
  "0x396bc4": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x396bc4>",
    "poll_symbol": ""
  },
  "0x396c3c": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x396c3c>",
    "poll_symbol": ""
  },
  "0x396c5a": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x396c5a>",
    "poll_symbol": ""
  },
  "0x396c96": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x396c96>",
    "poll_symbol": ""
  },
  "0x396cb4": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x396cb4>",
    "poll_symbol": ""
  },
  "0x396cd2": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x396cd2>",
    "poll_symbol": ""
  },
  "0x396d0e": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x396d0e>",
    "poll_symbol": ""
  },
  "0x396d2c": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x396d2c>",
    "poll_symbol": ""
  },
  "0x396d4a": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x396d4a>",
    "poll_symbol": ""
  },
  "0x396e58": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x396e58>",
    "poll_symbol": ""
  },
  "0x396e94": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x396e94>",
    "poll_symbol": ""
  },
  "0x397b67": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::connect::dns::resolve::{async_fn#0}::{closure_env#0}<reqwest::dns::resolve::DynResolver>>><0x397b67>",
    "poll_symbol": ""
  },
  "0x397ba4": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x397ba4>",
    "poll_symbol": ""
  },
  "0x397be1": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x397be1>",
    "poll_symbol": ""
  },
  "0x397c1d": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x397c1d>",
    "poll_symbol": ""
  },
  "0x397c3b": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x397c3b>",
    "poll_symbol": ""
  },
  "0x397c95": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x397c95>",
    "poll_symbol": ""
  },
  "0x397cb3": {
    "name": "Pin<&mut futures_util::future::poll_fn::PollFn<hyper::client::conn::http2::{impl#1}::ready::{async_fn#0}::{closure_env#0}<reqwest::async_impl::body::Body>>><0x397cb3>",
    "poll_symbol": ""
  },
  "0x397cd1": {
    "name": "Pin<&mut futures_util::future::poll_fn::PollFn<hyper::client::conn::http1::{impl#1}::ready::{async_fn#0}::{closure_env#0}<reqwest::async_impl::body::Body>>><0x397cd1>",
    "poll_symbol": ""
  },
  "0x397f8b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x397f8b>",
    "poll_symbol": ""
  },
  "0x397fa9": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x397fa9>",
    "poll_symbol": ""
  },
  "0x397fc7": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x397fc7>",
    "poll_symbol": ""
  },
  "0x397fe5": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x397fe5>",
    "poll_symbol": ""
  },
  "0x398003": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x398003>",
    "poll_symbol": ""
  },
  "0x398021": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x398021>",
    "poll_symbol": ""
  },
  "0x39803f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x39803f>",
    "poll_symbol": ""
  },
  "0x39805d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x39805d>",
    "poll_symbol": ""
  },
  "0x39807b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x39807b>",
    "poll_symbol": ""
  },
  "0x3980b7": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x3980b7>",
    "poll_symbol": ""
  },
  "0x3980d5": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x3980d5>",
    "poll_symbol": ""
  },
  "0x3980f3": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x3980f3>",
    "poll_symbol": ""
  },
  "0x398111": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x398111>",
    "poll_symbol": ""
  },
  "0x39812f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x39812f>",
    "poll_symbol": ""
  },
  "0x39816b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x39816b>",
    "poll_symbol": ""
  },
  "0x398189": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x398189>",
    "poll_symbol": ""
  },
  "0x3981a7": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x3981a7>",
    "poll_symbol": ""
  },
  "0x3981c5": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x3981c5>",
    "poll_symbol": ""
  },
  "0x3981e3": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x3981e3>",
    "poll_symbol": ""
  },
  "0x398201": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x398201>",
    "poll_symbol": ""
  },
  "0x39821f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x39821f>",
    "poll_symbol": ""
  },
  "0x39823d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x39823d>",
    "poll_symbol": ""
  },
  "0x3982b5": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x3982b5>",
    "poll_symbol": ""
  },
  "0x3982d3": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x3982d3>",
    "poll_symbol": ""
  },
  "0x399fb7": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x399fb7>",
    "poll_symbol": ""
  },
  "0x39b3e5": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x39b3e5>",
    "poll_symbol": ""
  },
  "0x39b424": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x39b424>",
    "poll_symbol": ""
  },
  "0x39b463": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x39b463>",
    "poll_symbol": ""
  },
  "0x39b499": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x39b499>",
    "poll_symbol": ""
  },
  "0x39b4cf": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x39b4cf>",
    "poll_symbol": ""
  },
  "0x39b50e": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x39b50e>",
    "poll_symbol": ""
  },
  "0x39b71c": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x39b71c>",
    "poll_symbol": ""
  },
  "0x39b75b": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x39b75b>",
    "poll_symbol": ""
  },
  "0x39c9f0": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x39c9f0>",
    "poll_symbol": ""
  },
  "0x39fc10": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x39fc10>",
    "poll_symbol": ""
  },
  "0x39fc2e": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x39fc2e>",
    "poll_symbol": ""
  },
  "0x3a0000": {
    "name": "{closure_env#0}<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x3a0000>",
    "poll_symbol": ""
  },
  "0x3a001e": {
    "name": "{closure_env#0}<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}><0x3a001e>",
    "poll_symbol": ""
  },
  "0x3a003c": {
    "name": "{closure_env#0}<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}><0x3a003c>",
    "poll_symbol": ""
  },
  "0x3a09c1": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a09c1>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x3a0a01": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a0a01>",
    "poll_symbol": ""
  },
  "0x3a0a40": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x3a0a40>",
    "poll_symbol": ""
  },
  "0x3a0a5e": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x3a0a5e>",
    "poll_symbol": ""
  },
  "0x3a0b19": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a0b19>",
    "poll_symbol": ""
  },
  "0x3a0b58": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a0b58>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x3a0b98": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a0b98>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x3a0bd8": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a0bd8>",
    "poll_symbol": ""
  },
  "0x3a0c17": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x3a0c17>",
    "poll_symbol": ""
  },
  "0x3a0c35": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x3a0c35>",
    "poll_symbol": ""
  },
  "0x3a0cc3": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a0cc3>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE"
  },
  "0x3a0d03": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a0d03>",
    "poll_symbol": ""
  },
  "0x3a0fcd": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a0fcd>",
    "poll_symbol": ""
  },
  "0x3a0feb": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a0feb>",
    "poll_symbol": ""
  },
  "0x3a1009": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a1009>",
    "poll_symbol": ""
  },
  "0x3a1027": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a1027>",
    "poll_symbol": ""
  },
  "0x3a1045": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a1045>",
    "poll_symbol": ""
  },
  "0x3a1063": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a1063>",
    "poll_symbol": ""
  },
  "0x3a1081": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a1081>",
    "poll_symbol": ""
  },
  "0x3a109f": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a109f>",
    "poll_symbol": ""
  },
  "0x3a10c3": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a10c3>",
    "poll_symbol": ""
  },
  "0x3a10d6": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a10d6>",
    "poll_symbol": ""
  },
  "0x3a10e9": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a10e9>",
    "poll_symbol": ""
  },
  "0x3a10fc": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a10fc>",
    "poll_symbol": ""
  },
  "0x3a1111": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a1111>",
    "poll_symbol": ""
  },
  "0x3a113d": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a113d>",
    "poll_symbol": ""
  },
  "0x3a115b": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a115b>",
    "poll_symbol": ""
  },
  "0x3a1179": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a1179>",
    "poll_symbol": ""
  },
  "0x3a1197": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a1197>",
    "poll_symbol": ""
  },
  "0x3a11b5": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a11b5>",
    "poll_symbol": ""
  },
  "0x3a11d3": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a11d3>",
    "poll_symbol": ""
  },
  "0x3a11f1": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a11f1>",
    "poll_symbol": ""
  },
  "0x3a120f": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a120f>",
    "poll_symbol": ""
  },
  "0x3a122e": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a122e>",
    "poll_symbol": ""
  },
  "0x3a125a": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a125a>",
    "poll_symbol": ""
  },
  "0x3a126d": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a126d>",
    "poll_symbol": ""
  },
  "0x3a1280": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a1280>",
    "poll_symbol": ""
  },
  "0x3a1293": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a1293>",
    "poll_symbol": ""
  },
  "0x3a12a7": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a12a7>",
    "poll_symbol": ""
  },
  "0x3a12ce": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a12ce>",
    "poll_symbol": ""
  },
  "0x3a9223": {
    "name": "<tower::util::map_future::MapFuture<tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>>> as tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable>>::{vtable_type}<0x3a9223>",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x3a9280": {
    "name": "MapFuture<tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x3a9280>",
    "poll_symbol": ""
  },
  "0x3a92df": {
    "name": "MapFuture<tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>>><0x3a92df>",
    "poll_symbol": ""
  },
  "0x3a933e": {
    "name": "MapFuture<tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x3a933e>",
    "poll_symbol": ""
  },
  "0x3a9995": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x3a9995>",
    "poll_symbol": ""
  },
  "0x3a99bc": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x3a99bc>",
    "poll_symbol": ""
  },
  "0x3a99d6": {
    "name": "<tower::util::map_future::MapFuture<tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>>> as tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable>>::{vtable_type}<0x3a99d6>",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x3a9d68": {
    "name": "{async_fn_env#0}<reqwest::dns::resolve::DynResolver><0x3a9d68>",
    "poll_symbol": ""
  },
  "0x3a9f4e": {
    "name": "GaiFuture<0x3a9f4e>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x3aa7fd": {
    "name": "<tower::util::map_future::MapFuture<tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>>> as tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable>>::{vtable_type}<0x3aa7fd>",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x3aaf05": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x3aaf05>",
    "poll_symbol": ""
  },
  "0x3aaf2c": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x3aaf2c>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x3b12c5": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x3b12c5>",
    "poll_symbol": ""
  },
  "0x3b12ec": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x3b12ec>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x3b1dfa": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x3b1dfa>",
    "poll_symbol": ""
  },
  "0x3b1e24": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x3b1e24>",
    "poll_symbol": ""
  },
  "0x3b35d4": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x3b35d4>",
    "poll_symbol": ""
  },
  "0x3b35fb": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x3b35fb>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x59f4f9": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x59f4f9>",
    "poll_symbol": ""
  },
  "0x59f538": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x59f538>",
    "poll_symbol": ""
  },
  "0x59ff77": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x59ff77>",
    "poll_symbol": ""
  },
  "0x5a1260": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x5a1260>",
    "poll_symbol": ""
  },
  "0x5a431a": {
    "name": "{async_fn_env#0}<0x5a431a>",
    "poll_symbol": ""
  },
  "0x5a4943": {
    "name": "{async_fn_env#0}<core::option::Option<hyper_util::client::legacy::connect::Connected>>",
    "poll_symbol": ""
  },
  "0x5a49fe": {
    "name": "{async_fn_env#0}<core::option::Option<hyper_util::client::legacy::connect::Connected>><0x5a49fe>",
    "poll_symbol": ""
  },
  "0x5a5abb": {
    "name": "Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<core::option::Option<hyper_util::client::legacy::connect::Connected>>>",
    "poll_symbol": ""
  },
  "0x5a9068": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x5a9068>",
    "poll_symbol": ""
  },
  "0x5a906f": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x5a906f>",
    "poll_symbol": ""
  },
  "0x5ab3f7": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x5ab3f7>",
    "poll_symbol": ""
  },
  "0x5ab4ba": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5ab4ba>",
    "poll_symbol": ""
  },
  "0x5ac2cb": {
    "name": "Unique<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>>",
    "poll_symbol": ""
  },
  "0x5ac966": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x5ac966>",
    "poll_symbol": ""
  },
  "0x5ac9fc": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x5ac9fc>",
    "poll_symbol": ""
  },
  "0x5aca1a": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x5aca1a>",
    "poll_symbol": ""
  },
  "0x5aca38": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x5aca38>",
    "poll_symbol": ""
  },
  "0x5acab0": {
    "name": "NonNull<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>>",
    "poll_symbol": ""
  },
  "0x5ad0ef": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x5ad0ef>",
    "poll_symbol": ""
  },
  "0x5ad15b": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x5ad15b>",
    "poll_symbol": ""
  },
  "0x5ad16d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x5ad16d>",
    "poll_symbol": ""
  },
  "0x5ad1a3": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x5ad1a3>",
    "poll_symbol": ""
  },
  "0x5ad2b1": {
    "name": "PhantomData<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>>",
    "poll_symbol": ""
  },
  "0x5ae3d7": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5ae3d7>",
    "poll_symbol": ""
  },
  "0x5ae3f5": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x5ae3f5>",
    "poll_symbol": ""
  },
  "0x5ae413": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x5ae413>",
    "poll_symbol": ""
  },
  "0x5ae53c": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5ae53c>",
    "poll_symbol": ""
  },
  "0x5ae55a": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x5ae55a>",
    "poll_symbol": ""
  },
  "0x5b2251": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x5b2251>",
    "poll_symbol": ""
  },
  "0x5b63f5": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x5b63f5>",
    "poll_symbol": ""
  },
  "0x5b6434": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x5b6434>",
    "poll_symbol": ""
  },
  "0x5b6554": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x5b6554>",
    "poll_symbol": ""
  },
  "0x5b6593": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x5b6593>",
    "poll_symbol": ""
  },
  "0x5b65d2": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x5b65d2>",
    "poll_symbol": ""
  },
  "0x5b6608": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5b6608>",
    "poll_symbol": ""
  },
  "0x5b663e": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x5b663e>",
    "poll_symbol": ""
  },
  "0x5b667d": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x5b667d>",
    "poll_symbol": ""
  },
  "0x5b8a13": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x5b8a13>",
    "poll_symbol": ""
  },
  "0x5b8a1a": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x5b8a1a>",
    "poll_symbol": ""
  },
  "0x5b912f": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5b912f>",
    "poll_symbol": ""
  },
  "0x5b9159": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5b9159>",
    "poll_symbol": ""
  },
  "0x5b9cae": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)<0x5b9cae>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x5b9cb5": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x5b9e33": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global><0x5b9e33>",
    "poll_symbol": ""
  },
  "0x5bb909": {
    "name": "SyncWrapper<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>>><0x5bb909>",
    "poll_symbol": ""
  },
  "0x5beb8c": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0x5bebc8": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0x5bec22": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0x5becf4": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0x5bfb35": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0x5bfbad": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0x5bfc61": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0x5bfe05": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0x5c0d2b": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>><0x5c0d2b>",
    "poll_symbol": ""
  },
  "0x5c32a7": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global><0x5c32a7>",
    "poll_symbol": ""
  },
  "0x5c32ce": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)<0x5c32ce>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x5c387f": {
    "name": "{async_fn_env#0}<0x5c387f>",
    "poll_symbol": ""
  },
  "0x5c3adc": {
    "name": "{async_block_env#0}<0x5c3adc>",
    "poll_symbol": ""
  },
  "0x5c508b": {
    "name": "{async_fn_env#0}<0x5c508b>",
    "poll_symbol": ""
  },
  "0x5c794b": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)><0x5c794b>",
    "poll_symbol": ""
  },
  "0x5c79ac": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x5c79ac>",
    "poll_symbol": ""
  },
  "0x5c8cdc": {
    "name": "Result<hyper_util::client::legacy::connect::http::connect::{async_block_env#0}, hyper_util::client::legacy::connect::http::ConnectError><0x5c8cdc>",
    "poll_symbol": ""
  },
  "0x5ca430": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}><0x5ca430>",
    "poll_symbol": ""
  },
  "0x5ca50f": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, hyper_util::client::legacy::connect::http::ConnectError>, hyper_util::client::legacy::connect::http::connect::{async_block_env#0}><0x5ca50f>",
    "poll_symbol": ""
  },
  "0x5cdd4d": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x5cdd4d>",
    "poll_symbol": ""
  },
  "0x5cf9e2": {
    "name": "{async_fn_env#0}<0x5cf9e2>",
    "poll_symbol": ""
  },
  "0x5cfaff": {
    "name": "{async_fn_env#0}<0x5cfaff>",
    "poll_symbol": ""
  },
  "0x5d175f": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>><0x5d175f>",
    "poll_symbol": ""
  },
  "0x5d1786": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>><0x5d1786>",
    "poll_symbol": ""
  },
  "0x5d17b3": {
    "name": "Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut tokio::time::sleep::Sleep>), ((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x5d17b3>",
    "poll_symbol": ""
  },
  "0x5d1832": {
    "name": "Either<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>><0x5d1832>",
    "poll_symbol": ""
  },
  "0x5d18cf": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)<0x5d18cf>",
    "poll_symbol": ""
  },
  "0x5d190b": {
    "name": "((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x5d190b>",
    "poll_symbol": ""
  },
  "0x5d1929": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x5d1929>",
    "poll_symbol": ""
  },
  "0x5d36c2": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x5d36c2>",
    "poll_symbol": ""
  },
  "0x5d484c": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x5d484c>",
    "poll_symbol": ""
  },
  "0x5d488b": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x5d488b>",
    "poll_symbol": ""
  },
  "0x5d48ca": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x5d48ca>",
    "poll_symbol": ""
  },
  "0x5d4900": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5d4900>",
    "poll_symbol": ""
  },
  "0x5d4936": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x5d4936>",
    "poll_symbol": ""
  },
  "0x5d4975": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x5d4975>",
    "poll_symbol": ""
  },
  "0x5d4e96": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x5d4e96>",
    "poll_symbol": ""
  },
  "0x5d4eb4": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x5d4eb4>",
    "poll_symbol": ""
  },
  "0x5d4ed2": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x5d4ed2>",
    "poll_symbol": ""
  },
  "0x5d518f": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x5d518f>",
    "poll_symbol": ""
  },
  "0x5d51a1": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x5d51a1>",
    "poll_symbol": ""
  },
  "0x5d51d7": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x5d51d7>",
    "poll_symbol": ""
  },
  "0x5d5da2": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x5d5da2>",
    "poll_symbol": ""
  },
  "0x5d5e65": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5d5e65>",
    "poll_symbol": ""
  },
  "0x5d728c": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5d728c>",
    "poll_symbol": ""
  },
  "0x5d72aa": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x5d72aa>",
    "poll_symbol": ""
  },
  "0x5d7493": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5d7493>",
    "poll_symbol": ""
  },
  "0x5d74b1": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x5d74b1>",
    "poll_symbol": ""
  },
  "0x5d74cf": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x5d74cf>",
    "poll_symbol": ""
  },
  "0x5d89e9": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0x5d89e9>",
    "poll_symbol": ""
  },
  "0x5d8b33": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0x5d8b33>",
    "poll_symbol": ""
  },
  "0x5d8bc9": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0x5d8bc9>",
    "poll_symbol": ""
  },
  "0x5d8c23": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0x5d8c23>",
    "poll_symbol": ""
  },
  "0x5d8cc5": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0x5d8cc5>",
    "poll_symbol": ""
  },
  "0x5d8d79": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0x5d8d79>",
    "poll_symbol": ""
  },
  "0x5d8df1": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0x5d8df1>",
    "poll_symbol": ""
  },
  "0x5d8e2d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0x5d8e2d>",
    "poll_symbol": ""
  },
  "0x5d9a89": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x5d9ac6": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>, alloc::alloc::Global>><0x5d9ac6>",
    "poll_symbol": ""
  },
  "0x5d9b22": {
    "name": "Pin<&mut futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>>",
    "poll_symbol": ""
  },
  "0x5d9dc3": {
    "name": "Pin<&mut hyper_util::client::legacy::client::ResponseFuture><0x5d9dc3>",
    "poll_symbol": ""
  },
  "0x5d9e1f": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>><0x5d9e1f>",
    "poll_symbol": ""
  },
  "0x5d9e99": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::dns::GaiFuture><0x5d9e99>",
    "poll_symbol": ""
  },
  "0x5da34c": {
    "name": "GaiFuture<0x5da34c>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x5da812": {
    "name": "ResponseFuture<0x5da812>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x5da834": {
    "name": "SyncWrapper<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>>><0x5da834>",
    "poll_symbol": ""
  },
  "0x5de2ff": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5de2ff>",
    "poll_symbol": ""
  },
  "0x5de329": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5de329>",
    "poll_symbol": ""
  },
  "0x5dea3b": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global><0x5dea3b>",
    "poll_symbol": ""
  },
  "0x5dea62": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)<0x5dea62>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x5e0245": {
    "name": "<core::pin::Pin<alloc::boxed::Box<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>, alloc::alloc::Global>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x5e0287": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>, alloc::alloc::Global>><0x5e0287>",
    "poll_symbol": ""
  },
  "0x5e02c3": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>, alloc::alloc::Global>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x5e02e1": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>><0x5e02e1>",
    "poll_symbol": ""
  },
  "0x5e031e": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x5e0410": {
    "name": "Pin<&mut hyper_util::client::legacy::client::ResponseFuture><0x5e0410>",
    "poll_symbol": ""
  },
  "0x5e042e": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::dns::GaiFuture><0x5e042e>",
    "poll_symbol": ""
  },
  "0x5e2377": {
    "name": "Result<hyper_util::client::legacy::connect::http::connect::{async_block_env#0}, hyper_util::client::legacy::connect::http::ConnectError><0x5e2377>",
    "poll_symbol": ""
  },
  "0x5e2b02": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5e2b02>",
    "poll_symbol": ""
  },
  "0x5e2b4a": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x5e2b4a>",
    "poll_symbol": ""
  },
  "0x5e2c2f": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5e2c2f>",
    "poll_symbol": ""
  },
  "0x5e2c89": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x5e2c89>",
    "poll_symbol": ""
  },
  "0x5e2ca7": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x5e2ca7>",
    "poll_symbol": ""
  },
  "0x5e3203": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x5e3203>",
    "poll_symbol": ""
  },
  "0x5e32c6": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5e32c6>",
    "poll_symbol": ""
  },
  "0x5e4f84": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x5e4f84>",
    "poll_symbol": ""
  },
  "0x5e4fa2": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x5e4fa2>",
    "poll_symbol": ""
  },
  "0x5e4fc0": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x5e4fc0>",
    "poll_symbol": ""
  },
  "0x5e5308": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x5e5308>",
    "poll_symbol": ""
  },
  "0x5e53db": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x5e53db>",
    "poll_symbol": ""
  },
  "0x5e53ed": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x5e53ed>",
    "poll_symbol": ""
  },
  "0x5e5423": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x5e5423>",
    "poll_symbol": ""
  },
  "0x5e58ab": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x5e58ab>",
    "poll_symbol": ""
  },
  "0x5e714f": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x5e714f>",
    "poll_symbol": ""
  },
  "0x5e718e": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x5e718e>",
    "poll_symbol": ""
  },
  "0x5e71cd": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x5e71cd>",
    "poll_symbol": ""
  },
  "0x5e7203": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5e7203>",
    "poll_symbol": ""
  },
  "0x5e7239": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x5e7239>",
    "poll_symbol": ""
  },
  "0x5e7278": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x5e7278>",
    "poll_symbol": ""
  },
  "0x5e7c83": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x5e7c83>",
    "poll_symbol": ""
  },
  "0x5e7cc2": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x5e7cc2>",
    "poll_symbol": ""
  },
  "0x5e85c4": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5e85c4>",
    "poll_symbol": ""
  },
  "0x5e85ee": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5e85ee>",
    "poll_symbol": ""
  },
  "0x5e8a2b": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x5e8a2b>",
    "poll_symbol": ""
  },
  "0x5eadd9": {
    "name": "ResponseFuture<0x5eadd9>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x5ebdd4": {
    "name": "{async_block_env#0}<0x5ebdd4>",
    "poll_symbol": ""
  },
  "0x5ec44b": {
    "name": "GaiFuture<0x5ec44b>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x5ecd00": {
    "name": "SyncWrapper<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>>><0x5ecd00>",
    "poll_symbol": ""
  },
  "0x5ed14a": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x5ed14a>",
    "poll_symbol": ""
  },
  "0x5ef2a7": {
    "name": "{async_fn_env#0}<0x5ef2a7>",
    "poll_symbol": ""
  },
  "0x5ef3c4": {
    "name": "{async_fn_env#0}<0x5ef3c4>",
    "poll_symbol": ""
  },
  "0x5f16e3": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global><0x5f16e3>",
    "poll_symbol": ""
  },
  "0x5f170a": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)<0x5f170a>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x5f19c2": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)<0x5f19c2>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x5f1a09": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x5f1a09>",
    "poll_symbol": ""
  },
  "0x5f1a10": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x5f1a10>",
    "poll_symbol": ""
  },
  "0x5ffb37": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5ffb37>",
    "poll_symbol": ""
  },
  "0x5ffb6a": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x5ffb6a>",
    "poll_symbol": ""
  },
  "0x5ffc4f": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5ffc4f>",
    "poll_symbol": ""
  },
  "0x5ffc8b": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x5ffc8b>",
    "poll_symbol": ""
  },
  "0x5ffca9": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x5ffca9>",
    "poll_symbol": ""
  },
  "0x6001d1": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x6001d1>",
    "poll_symbol": ""
  },
  "0x6001ef": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x6001ef>",
    "poll_symbol": ""
  },
  "0x60020d": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x60020d>",
    "poll_symbol": ""
  },
  "0x602082": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x602082>",
    "poll_symbol": ""
  },
  "0x602094": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x602094>",
    "poll_symbol": ""
  },
  "0x6020ca": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x6020ca>",
    "poll_symbol": ""
  },
  "0x6034d9": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0x6034d9>",
    "poll_symbol": ""
  },
  "0x603515": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0x603515>",
    "poll_symbol": ""
  },
  "0x603533": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0x603533>",
    "poll_symbol": ""
  },
  "0x60356f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0x60356f>",
    "poll_symbol": ""
  },
  "0x6043da": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x6043da>",
    "poll_symbol": ""
  },
  "0x60449d": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x60449d>",
    "poll_symbol": ""
  },
  "0x6076eb": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>, alloc::alloc::Global>><0x6076eb>",
    "poll_symbol": ""
  },
  "0x608284": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x608284>",
    "poll_symbol": ""
  },
  "0x6082c3": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x6082c3>",
    "poll_symbol": ""
  },
  "0x608302": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x608302>",
    "poll_symbol": ""
  },
  "0x608338": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x608338>",
    "poll_symbol": ""
  },
  "0x60836e": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x60836e>",
    "poll_symbol": ""
  },
  "0x6083ad": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x6083ad>",
    "poll_symbol": ""
  },
  "0x609d87": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x609d87>",
    "poll_symbol": ""
  },
  "0x60ef09": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x60ef09>",
    "poll_symbol": ""
  },
  "0x60ef33": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x60ef33>",
    "poll_symbol": ""
  },
  "0x6517bc": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x6517bc>",
    "poll_symbol": ""
  },
  "0x651a44": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x651a44>",
    "poll_symbol": ""
  },
  "0x651abf": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x651abf>",
    "poll_symbol": ""
  },
  "0x6527f1": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6527f1>",
    "poll_symbol": ""
  },
  "0x65280f": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x65280f>",
    "poll_symbol": ""
  },
  "0x653307": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x653307>",
    "poll_symbol": ""
  },
  "0x65333d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x65333d>",
    "poll_symbol": ""
  },
  "0x65334f": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x65334f>",
    "poll_symbol": ""
  },
  "0x6534c7": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x6534c7>",
    "poll_symbol": ""
  },
  "0x653599": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x653599>",
    "poll_symbol": ""
  },
  "0x6535b7": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x6535b7>",
    "poll_symbol": ""
  },
  "0x6541e0": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x6541e0>",
    "poll_symbol": ""
  },
  "0x6598e9": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x6598e9>",
    "poll_symbol": ""
  },
  "0x65991f": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x65991f>",
    "poll_symbol": ""
  },
  "0x659b89": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x659b89>",
    "poll_symbol": ""
  },
  "0x659bbf": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x659bbf>",
    "poll_symbol": ""
  },
  "0x659c69": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x659c69>",
    "poll_symbol": ""
  },
  "0x659c9f": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x659c9f>",
    "poll_symbol": ""
  },
  "0x65aff3": {
    "name": "Weak<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, &alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x65c38b": {
    "name": "Weak<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, &alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x65c441": {
    "name": "Weak<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, &alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x65ef3d": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x65ef3d>",
    "poll_symbol": ""
  },
  "0x6618c6": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x6618c6>",
    "poll_symbol": ""
  },
  "0x6618f0": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x6618f0>",
    "poll_symbol": ""
  },
  "0x661a12": {
    "name": "(*mut alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>, alloc::alloc::Global)",
    "poll_symbol": ""
  },
  "0x661f49": {
    "name": "(*mut alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>, alloc::alloc::Global)",
    "poll_symbol": ""
  },
  "0x662178": {
    "name": "(*mut alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>, alloc::alloc::Global)",
    "poll_symbol": ""
  },
  "0x6667b3": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6667b3>",
    "poll_symbol": ""
  },
  "0x666862": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x666862>",
    "poll_symbol": ""
  },
  "0x666f10": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x666f10>",
    "poll_symbol": ""
  },
  "0x666f6c": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x666f6c>",
    "poll_symbol": ""
  },
  "0x666fa9": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x666fa9>",
    "poll_symbol": ""
  },
  "0x667132": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x667132>",
    "poll_symbol": ""
  },
  "0x667150": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x667150>",
    "poll_symbol": ""
  },
  "0x667353": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x667353>",
    "poll_symbol": ""
  },
  "0x667365": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x667365>",
    "poll_symbol": ""
  },
  "0x667c88": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x667c88>",
    "poll_symbol": ""
  },
  "0x667d4b": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x667d4b>",
    "poll_symbol": ""
  },
  "0x667dac": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x667dac>",
    "poll_symbol": ""
  },
  "0x6682bf": {
    "name": "Option<&alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x668bc2": {
    "name": "Poll<core::result::Result<(), futures_channel::mpsc::SendError>>",
    "poll_symbol": ""
  },
  "0x669b5a": {
    "name": "Result<(), futures_channel::mpsc::SendError>",
    "poll_symbol": ""
  },
  "0x669bd9": {
    "name": "Result<(), futures_channel::mpsc::TrySendError<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": ""
  },
  "0x669c58": {
    "name": "Result<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>, std::sync::poison::PoisonError<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>>><0x669c58>",
    "poll_symbol": ""
  },
  "0x66a2ff": {
    "name": "Result<core::convert::Infallible, futures_channel::mpsc::SendError>",
    "poll_symbol": ""
  },
  "0x66afab": {
    "name": "Pin<&mut futures_channel::mpsc::Receiver<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": ""
  },
  "0x66b49b": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x66b49b>",
    "poll_symbol": ""
  },
  "0x66b4da": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x66b4da>",
    "poll_symbol": ""
  },
  "0x66b519": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x66b519>",
    "poll_symbol": ""
  },
  "0x66b54f": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x66b54f>",
    "poll_symbol": ""
  },
  "0x66c8b9": {
    "name": "MutexGuard<futures_channel::mpsc::SenderTask><0x66c8b9>",
    "poll_symbol": ""
  },
  "0x66c902": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x66c902>",
    "poll_symbol": ""
  },
  "0x66cb15": {
    "name": "{closure_env#0}<futures_channel::mpsc::SenderTask>",
    "poll_symbol": ""
  },
  "0x66cfab": {
    "name": "PoisonError<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>><0x66cfab>",
    "poll_symbol": ""
  },
  "0x66e5b0": {
    "name": "<std::sync::poison::PoisonError<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>> as core::fmt::Debug>::{vtable_type}<0x66e5b0>",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x66e8b9": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x66e8b9>",
    "poll_symbol": ""
  },
  "0x66e8e3": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x66e8e3>",
    "poll_symbol": ""
  },
  "0x67230c": {
    "name": "(futures_channel::mpsc::Sender<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, futures_channel::mpsc::Receiver<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>)",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h2e71021a18a94d6fE"
  },
  "0x675e2b": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x675e2b>",
    "poll_symbol": ""
  },
  "0x676fd9": {
    "name": "Result<(), futures_channel::mpsc::TrySendError<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x676fd9>",
    "poll_symbol": ""
  },
  "0x67756c": {
    "name": "Result<(), futures_channel::mpsc::SendError><0x67756c>",
    "poll_symbol": ""
  },
  "0x6775eb": {
    "name": "Result<core::convert::Infallible, futures_channel::mpsc::SendError><0x6775eb>",
    "poll_symbol": ""
  },
  "0x6778bc": {
    "name": "Result<&mut futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, futures_channel::mpsc::SendError>",
    "poll_symbol": ""
  },
  "0x6779a4": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6779a4>",
    "poll_symbol": ""
  },
  "0x6779c2": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x6779c2>",
    "poll_symbol": ""
  },
  "0x677ad7": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x677ad7>",
    "poll_symbol": ""
  },
  "0x677af5": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x677af5>",
    "poll_symbol": ""
  },
  "0x677b13": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x677b13>",
    "poll_symbol": ""
  },
  "0x677c5c": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x677c5c>",
    "poll_symbol": ""
  },
  "0x677c7a": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x677c7a>",
    "poll_symbol": ""
  },
  "0x677ee7": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x677ee7>",
    "poll_symbol": ""
  },
  "0x677ef9": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x677ef9>",
    "poll_symbol": ""
  },
  "0x67a0db": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, futures_channel::mpsc::SendError>, &mut futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": ""
  },
  "0x67ab5d": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x67ab5d>",
    "poll_symbol": ""
  },
  "0x67bc6f": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x67bc6f>",
    "poll_symbol": ""
  },
  "0x67bcae": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x67bcae>",
    "poll_symbol": ""
  },
  "0x67bced": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x67bced>",
    "poll_symbol": ""
  },
  "0x67bd23": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x67bd23>",
    "poll_symbol": ""
  },
  "0x67c07d": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x67c07d>",
    "poll_symbol": ""
  },
  "0x67c0a7": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x67c0a7>",
    "poll_symbol": ""
  },
  "0x67fdc9": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x67fdc9>",
    "poll_symbol": ""
  },
  "0x6800b3": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x6800b3>",
    "poll_symbol": ""
  },
  "0x6800d1": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x6800d1>",
    "poll_symbol": ""
  },
  "0x6800ef": {
    "name": "NonNull<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": ""
  },
  "0x680153": {
    "name": "NonNull<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x68027f": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x68027f>",
    "poll_symbol": ""
  },
  "0x680503": {
    "name": "Unique<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": ""
  },
  "0x680572": {
    "name": "Unique<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x68102d": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x68102d>",
    "poll_symbol": ""
  },
  "0x681087": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x681087>",
    "poll_symbol": ""
  },
  "0x6810bd": {
    "name": "PhantomData<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": ""
  },
  "0x6810cf": {
    "name": "PhantomData<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x681129": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x681129>",
    "poll_symbol": ""
  },
  "0x681329": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x681329>",
    "poll_symbol": ""
  },
  "0x681371": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x681371>",
    "poll_symbol": ""
  },
  "0x6813d2": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6813d2>",
    "poll_symbol": ""
  },
  "0x68142c": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x68142c>",
    "poll_symbol": ""
  },
  "0x68144a": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x68144a>",
    "poll_symbol": ""
  },
  "0x681932": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x681932>",
    "poll_symbol": ""
  },
  "0x681b9d": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x681b9d>",
    "poll_symbol": ""
  },
  "0x683539": {
    "name": "Result<http::header::map::HeaderMap<http::header::value::HeaderValue>, futures_channel::oneshot::Canceled>",
    "poll_symbol": ""
  },
  "0x683c12": {
    "name": "Poll<core::result::Result<http::header::map::HeaderMap<http::header::value::HeaderValue>, futures_channel::oneshot::Canceled>>",
    "poll_symbol": ""
  },
  "0x684d24": {
    "name": "Pin<&mut futures_channel::mpsc::Receiver<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x684d24>",
    "poll_symbol": ""
  },
  "0x684d9f": {
    "name": "Pin<&futures_channel::mpsc::Receiver<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": ""
  },
  "0x684f3b": {
    "name": "Pin<&mut futures_channel::oneshot::Receiver<http::header::map::HeaderMap<http::header::value::HeaderValue>>>",
    "poll_symbol": ""
  },
  "0x684f78": {
    "name": "Pin<&futures_channel::oneshot::Receiver<http::header::map::HeaderMap<http::header::value::HeaderValue>>>",
    "poll_symbol": ""
  },
  "0x68a170": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x68a170>",
    "poll_symbol": ""
  },
  "0x68a1af": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x68a1af>",
    "poll_symbol": ""
  },
  "0x68a1e5": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x68a1e5>",
    "poll_symbol": ""
  },
  "0x68a224": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x68a224>",
    "poll_symbol": ""
  },
  "0x68a25a": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x68a25a>",
    "poll_symbol": ""
  },
  "0x68a299": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x68a299>",
    "poll_symbol": ""
  },
  "0x68b9f3": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x68b9f3>",
    "poll_symbol": ""
  },
  "0x68ba3b": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x68ba3b>",
    "poll_symbol": ""
  },
  "0x68bbf9": {
    "name": "PopResult<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x68eef1": {
    "name": "(futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>, futures_channel::oneshot::Receiver<http::header::map::HeaderMap<http::header::value::HeaderValue>>)",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h2e71021a18a94d6fE"
  },
  "0x6908ff": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x6908ff>",
    "poll_symbol": ""
  },
  "0x6909c2": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x6909c2>",
    "poll_symbol": ""
  },
  "0x690dfb": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x690dfb>",
    "poll_symbol": ""
  },
  "0x690e5c": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x690e5c>",
    "poll_symbol": ""
  },
  "0x69127e": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x69127e>",
    "poll_symbol": ""
  },
  "0x6912c6": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x6912c6>",
    "poll_symbol": ""
  },
  "0x69139f": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x69139f>",
    "poll_symbol": ""
  },
  "0x6913f9": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x6913f9>",
    "poll_symbol": ""
  },
  "0x691417": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x691417>",
    "poll_symbol": ""
  },
  "0x691717": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x691717>",
    "poll_symbol": ""
  },
  "0x691735": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x691735>",
    "poll_symbol": ""
  },
  "0x691753": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x691753>",
    "poll_symbol": ""
  },
  "0x691d1a": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x691d1a>",
    "poll_symbol": ""
  },
  "0x691d2c": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x691d2c>",
    "poll_symbol": ""
  },
  "0x691d62": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x691d62>",
    "poll_symbol": ""
  },
  "0x696107": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x696107>",
    "poll_symbol": ""
  },
  "0x696146": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x696146>",
    "poll_symbol": ""
  },
  "0x696185": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x696185>",
    "poll_symbol": ""
  },
  "0x6961bb": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6961bb>",
    "poll_symbol": ""
  },
  "0x6961f1": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x6961f1>",
    "poll_symbol": ""
  },
  "0x696230": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x696230>",
    "poll_symbol": ""
  },
  "0x698c3d": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x698c3d>",
    "poll_symbol": ""
  },
  "0x699c88": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x699c88>",
    "poll_symbol": ""
  },
  "0x699cb2": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x699cb2>",
    "poll_symbol": ""
  },
  "0x69ea36": {
    "name": "Poll<core::result::Result<(), futures_channel::mpsc::SendError>><0x69ea36>",
    "poll_symbol": ""
  },
  "0x6a05ce": {
    "name": "Result<(), futures_channel::mpsc::SendError><0x6a05ce>",
    "poll_symbol": ""
  },
  "0x6a08bc": {
    "name": "Result<core::convert::Infallible, futures_channel::mpsc::SendError><0x6a08bc>",
    "poll_symbol": ""
  },
  "0x6a92d5": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6a92d5>",
    "poll_symbol": ""
  },
  "0x6a92f3": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x6a92f3>",
    "poll_symbol": ""
  },
  "0x6a93eb": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x6a93eb>",
    "poll_symbol": ""
  },
  "0x6a9463": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6a9463>",
    "poll_symbol": ""
  },
  "0x6a9481": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x6a9481>",
    "poll_symbol": ""
  },
  "0x6a988e": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x6a988e>",
    "poll_symbol": ""
  },
  "0x6a98ca": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x6a98ca>",
    "poll_symbol": ""
  },
  "0x6a98e8": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x6a98e8>",
    "poll_symbol": ""
  },
  "0x6ac85c": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x6ac85c>",
    "poll_symbol": ""
  },
  "0x6ac880": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x6ac880>",
    "poll_symbol": ""
  },
  "0x6ac892": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x6ac892>",
    "poll_symbol": ""
  },
  "0x6adb45": {
    "name": "Option<futures_channel::lock::TryLock<core::option::Option<http::header::map::HeaderMap<http::header::value::HeaderValue>>>>",
    "poll_symbol": ""
  },
  "0x6adba6": {
    "name": "Option<futures_channel::lock::TryLock<core::option::Option<core::task::wake::Waker>>>",
    "poll_symbol": ""
  },
  "0x6aea2b": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x6aea2b>",
    "poll_symbol": ""
  },
  "0x6aede7": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x6aede7>",
    "poll_symbol": ""
  },
  "0x6aee67": {
    "name": "Option<&mut futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": ""
  },
  "0x6aef56": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x6aef56>",
    "poll_symbol": ""
  },
  "0x6af033": {
    "name": "Option<&mut alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x6af094": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6af094>",
    "poll_symbol": ""
  },
  "0x6af28c": {
    "name": "Option<&alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x6af28c>",
    "poll_symbol": ""
  },
  "0x6b17c7": {
    "name": "Result<&mut futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, futures_channel::mpsc::SendError><0x6b17c7>",
    "poll_symbol": ""
  },
  "0x6b1adb": {
    "name": "Result<(), futures_channel::mpsc::SendError><0x6b1adb>",
    "poll_symbol": ""
  },
  "0x6b1d58": {
    "name": "Result<(), futures_channel::mpsc::TrySendError<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6b1d58>",
    "poll_symbol": ""
  },
  "0x6b2e6b": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x6b2e6b>",
    "poll_symbol": ""
  },
  "0x6b2eaa": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x6b2eaa>",
    "poll_symbol": ""
  },
  "0x6b2f55": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x6b2f55>",
    "poll_symbol": ""
  },
  "0x6b2f94": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x6b2f94>",
    "poll_symbol": ""
  },
  "0x6b2fca": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x6b2fca>",
    "poll_symbol": ""
  },
  "0x6b3009": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6b3009>",
    "poll_symbol": ""
  },
  "0x6b32bb": {
    "name": "Weak<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, &alloc::alloc::Global><0x6b32bb>",
    "poll_symbol": ""
  },
  "0x6b3321": {
    "name": "Weak<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, &alloc::alloc::Global><0x6b3321>",
    "poll_symbol": ""
  },
  "0x6b33ba": {
    "name": "Weak<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, &alloc::alloc::Global><0x6b33ba>",
    "poll_symbol": ""
  },
  "0x6b3cc9": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x6b3cc9>",
    "poll_symbol": ""
  },
  "0x6b3d95": {
    "name": "MutexGuard<futures_channel::mpsc::SenderTask><0x6b3d95>",
    "poll_symbol": ""
  },
  "0x6b3e69": {
    "name": "PoisonError<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>><0x6b3e69>",
    "poll_symbol": ""
  },
  "0x6b4daf": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x6b4daf>",
    "poll_symbol": ""
  },
  "0x6b4dd9": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x6b4dd9>",
    "poll_symbol": ""
  },
  "0x705062": {
    "name": "{async_fn_env#0}<0x705062>",
    "poll_symbol": ""
  },
  "0x705135": {
    "name": "{async_fn_env#0}<0x705135>",
    "poll_symbol": ""
  },
  "0x7052fd": {
    "name": "{async_fn_env#0}<0x7052fd>",
    "poll_symbol": ""
  },
  "0x748a4d": {
    "name": "ResponseFuture<0x748a4d>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x748a6e": {
    "name": "PushedResponseFuture",
    "poll_symbol": ""
  },
  "0x74ada6": {
    "name": "Pin<&mut h2::client::ResponseFuture><0x74ada6>",
    "poll_symbol": ""
  },
  "0x74ae21": {
    "name": "Pin<&h2::client::ResponseFuture>",
    "poll_symbol": ""
  },
  "0x74afc3": {
    "name": "Pin<&mut h2::client::PushedResponseFuture>",
    "poll_symbol": ""
  },
  "0x7600a6": {
    "name": "Pin<&mut h2::client::ResponseFuture><0x7600a6>",
    "poll_symbol": ""
  },
  "0x7600c4": {
    "name": "Pin<&mut h2::client::PushedResponseFuture><0x7600c4>",
    "poll_symbol": ""
  },
  "0x763642": {
    "name": "ResponseFuture<0x763642>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E"
  },
  "0x7636df": {
    "name": "{async_fn_env#0}<0x7636df>",
    "poll_symbol": ""
  },
  "0x763811": {
    "name": "PushedResponseFuture<0x763811>",
    "poll_symbol": ""
  },
  "0x769003": {
    "name": "(http::request::Request<()>, h2::client::PushedResponseFuture)",
    "poll_symbol": "_ZN92_$LT$reqwest..async_impl..client..PendingRequest$u20$as$u20$core..future..future..Future$GT$4poll17h9d0eff5ef029ab99E"
  },
  "0x7d56f4": {
    "name": "WaitForCancellationFuture",
    "poll_symbol": ""
  },
  "0x7d572b": {
    "name": "WaitForCancellationFutureOwned",
    "poll_symbol": ""
  },
  "0x7d59b6": {
    "name": "ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>",
    "poll_symbol": ""
  },
  "0x7d5b1e": {
    "name": "{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x7d5d15": {
    "name": "{closure_env#0}<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, (), tokio_util::sync::reusable_box::{impl#0}::try_set::real_try_set::{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>>",
    "poll_symbol": ""
  },
  "0x7d5d3f": {
    "name": "CallOnDrop<(), tokio_util::sync::reusable_box::reuse_pin_box::{closure_env#0}<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, (), tokio_util::sync::reusable_box::{impl#0}::try_set::real_try_set::{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>>>",
    "poll_symbol": ""
  },
  "0x7d6b73": {
    "name": "Option<(u32, tokio_util::sync::reusable_box::ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>)>",
    "poll_symbol": ""
  },
  "0x7d6c86": {
    "name": "{closure_env#0}<(u32, tokio_util::sync::reusable_box::ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>)>",
    "poll_symbol": ""
  },
  "0x7d6c9b": {
    "name": "Option<&mut (u32, tokio_util::sync::reusable_box::ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>)>",
    "poll_symbol": ""
  },
  "0x7d7810": {
    "name": "NonNull<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x7d784c": {
    "name": "NonNull<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x7d78e9": {
    "name": "Unique<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x7d7931": {
    "name": "Unique<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x7d831a": {
    "name": "PhantomData<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x7d832c": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x7d91d9": {
    "name": "Result<(), tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0x7da505": {
    "name": "ManuallyDrop<tokio_util::sync::reusable_box::reuse_pin_box::{closure_env#0}<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, (), tokio_util::sync::reusable_box::{impl#0}::try_set::real_try_set::{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>>>",
    "poll_symbol": ""
  },
  "0x7da541": {
    "name": "ManuallyDrop<tokio_util::sync::reusable_box::CallOnDrop<(), tokio_util::sync::reusable_box::reuse_pin_box::{closure_env#0}<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, (), tokio_util::sync::reusable_box::{impl#0}::try_set::real_try_set::{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>>>>",
    "poll_symbol": ""
  },
  "0x7da5cc": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x7da71f": {
    "name": "Pin<alloc::boxed::Box<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x7da73d": {
    "name": "Pin<alloc::boxed::Box<core::future::pending::Pending<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x7da75b": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x7da779": {
    "name": "Pin<&mut tokio_util::sync::cancellation_token::WaitForCancellationFuture>",
    "poll_symbol": ""
  },
  "0x7da797": {
    "name": "Pin<&mut tokio_util::sync::cancellation_token::WaitForCancellationFutureOwned>",
    "poll_symbol": ""
  },
  "0x7dcfb4": {
    "name": "{async_fn_env#0}<0x7dcfb4>",
    "poll_symbol": ""
  },
  "0x7dd65e": {
    "name": "<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0} as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x7dd6b6": {
    "name": "<core::future::pending::Pending<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x7ddb5c": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7ddb83": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x7ddd35": {
    "name": "&(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x7dde93": {
    "name": "(u32, tokio_util::sync::reusable_box::ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>)",
    "poll_symbol": ""
  },
  "0x7df6f3": {
    "name": "*const (dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x7dffee": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x7e013f": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x7e10f6": {
    "name": "{async_fn_env#0}<0x7e10f6>",
    "poll_symbol": ""
  },
  "0x7e1c22": {
    "name": "Option<(u32, tokio_util::sync::reusable_box::ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>)><0x7e1c22>",
    "poll_symbol": ""
  },
  "0x7e1ed4": {
    "name": "{closure_env#0}<(u32, tokio_util::sync::reusable_box::ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>)><0x7e1ed4>",
    "poll_symbol": ""
  },
  "0x7e5455": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), alloc::alloc::Global>><0x7e5455>",
    "poll_symbol": ""
  },
  "0x7e5523": {
    "name": "Pin<&(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0x7e55d9": {
    "name": "Pin<alloc::boxed::Box<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, alloc::alloc::Global>><0x7e55d9>",
    "poll_symbol": ""
  },
  "0x7e55f7": {
    "name": "Pin<&mut core::future::pending::Pending<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>>",
    "poll_symbol": ""
  },
  "0x7e563e": {
    "name": "ManuallyDrop<tokio_util::sync::reusable_box::reuse_pin_box::{closure_env#0}<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, (), tokio_util::sync::reusable_box::{impl#0}::try_set::real_try_set::{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>>><0x7e563e>",
    "poll_symbol": ""
  },
  "0x7e7618": {
    "name": "{closure_env#0}<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, (), tokio_util::sync::reusable_box::{impl#0}::try_set::real_try_set::{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>><0x7e7618>",
    "poll_symbol": ""
  },
  "0x7e7651": {
    "name": "{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}><0x7e7651>",
    "poll_symbol": ""
  },
  "0x7e7667": {
    "name": "ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>><0x7e7667>",
    "poll_symbol": ""
  },
  "0x7e7685": {
    "name": "CallOnDrop<(), tokio_util::sync::reusable_box::reuse_pin_box::{closure_env#0}<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, (), tokio_util::sync::reusable_box::{impl#0}::try_set::real_try_set::{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>>><0x7e7685>",
    "poll_symbol": ""
  },
  "0x7e906b": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)<0x7e906b>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x7e9092": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)<0x7e9092>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x7e90cd": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), alloc::alloc::Global><0x7e90cd>",
    "poll_symbol": ""
  },
  "0x7ea2e1": {
    "name": "&(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)<0x7ea2e1>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x7ea3f3": {
    "name": "(u32, tokio_util::sync::reusable_box::ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>)<0x7ea3f3>",
    "poll_symbol": ""
  },
  "0x7ebeb4": {
    "name": "<&*mut futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>> as core::fmt::Debug>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x7ebf1a": {
    "name": "Task<futures_task::future_obj::FutureObj<()>>",
    "poll_symbol": "_ZN5tokio7runtime4task3raw7RawTask4poll17h826bcfb99dbd294cE"
  },
  "0x7ebfb4": {
    "name": "Task<futures_task::future_obj::LocalFutureObj<()>>",
    "poll_symbol": "_ZN5tokio7runtime4task3raw7RawTask4poll17h826bcfb99dbd294cE"
  },
  "0x7ec0bc": {
    "name": "ReadyToRunQueue<futures_task::future_obj::FutureObj<()>>",
    "poll_symbol": ""
  },
  "0x7ec11d": {
    "name": "ReadyToRunQueue<futures_task::future_obj::LocalFutureObj<()>>",
    "poll_symbol": ""
  },
  "0x7ec288": {
    "name": "FuturesUnordered<futures_task::future_obj::LocalFutureObj<()>>",
    "poll_symbol": ""
  },
  "0x7ec320": {
    "name": "FuturesUnordered<futures_task::future_obj::FutureObj<()>>",
    "poll_symbol": ""
  },
  "0x7ec70f": {
    "name": "PollStateBomb<fn(&futures_util::stream::stream::flatten_unordered::SharedPollState) -> u8>",
    "poll_symbol": ""
  },
  "0x7ec75c": {
    "name": "PollStateBomb<fn(&futures_util::stream::stream::flatten_unordered::SharedPollState) -> u8><0x7ec75c>",
    "poll_symbol": ""
  },
  "0x7eca6a": {
    "name": "FutureObj<()>",
    "poll_symbol": ""
  },
  "0x7eca88": {
    "name": "LocalFutureObj<()>",
    "poll_symbol": ""
  },
  "0x7ecb12": {
    "name": "*mut dyn core::future::future::Future<Output=()>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x7ecb39": {
    "name": "dyn core::future::future::Future<Output=()>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x7ecb91": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>>>",
    "poll_symbol": ""
  },
  "0x7ecba3": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>>>",
    "poll_symbol": ""
  },
  "0x7ecbeb": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_util::abortable::AbortInner>>",
    "poll_symbol": ""
  },
  "0x7ecbfd": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::LocalFutureObj<()>>>>",
    "poll_symbol": ""
  },
  "0x7ecc0f": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::FutureObj<()>>>>",
    "poll_symbol": ""
  },
  "0x7ecc21": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_util::stream::stream::flatten_unordered::WrappedWaker>>",
    "poll_symbol": ""
  },
  "0x7ecc39": {
    "name": "UnsafeCell<core::option::Option<futures_task::future_obj::FutureObj<()>>>",
    "poll_symbol": ""
  },
  "0x7ecc76": {
    "name": "UnsafeCell<*mut futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>>",
    "poll_symbol": ""
  },
  "0x7eccb3": {
    "name": "UnsafeCell<*const futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>>",
    "poll_symbol": ""
  },
  "0x7ecd88": {
    "name": "UnsafeCell<core::option::Option<futures_task::future_obj::LocalFutureObj<()>>>",
    "poll_symbol": ""
  },
  "0x7ecdc5": {
    "name": "UnsafeCell<*mut futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>>",
    "poll_symbol": ""
  },
  "0x7ece02": {
    "name": "UnsafeCell<*const futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>>",
    "poll_symbol": ""
  },
  "0x7ece45": {
    "name": "Option<futures_task::future_obj::FutureObj<()>>",
    "poll_symbol": ""
  },
  "0x7ecf26": {
    "name": "Option<futures_task::future_obj::LocalFutureObj<()>>",
    "poll_symbol": ""
  },
  "0x7ed197": {
    "name": "Option<fn(&futures_util::stream::stream::flatten_unordered::SharedPollState) -> u8>",
    "poll_symbol": ""
  },
  "0x7ed45c": {
    "name": "Option<(u8, futures_util::stream::stream::flatten_unordered::PollStateBomb<fn(&futures_util::stream::stream::flatten_unordered::SharedPollState) -> u8>)>",
    "poll_symbol": ""
  },
  "0x7ed4bd": {
    "name": "Option<fn(&futures_util::stream::stream::flatten_unordered::SharedPollState) -> u8><0x7ed4bd>",
    "poll_symbol": ""
  },
  "0x7ed51f": {
    "name": "Option<(u8, futures_util::stream::stream::flatten_unordered::PollStateBomb<fn(&futures_util::stream::stream::flatten_unordered::SharedPollState) -> u8>)><0x7ed51f>",
    "poll_symbol": ""
  },
  "0x7ed6c6": {
    "name": "AtomicPtr<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>>",
    "poll_symbol": ""
  },
  "0x7ed887": {
    "name": "AtomicPtr<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>>",
    "poll_symbol": ""
  },
  "0x7ee510": {
    "name": "NonNull<alloc::sync::ArcInner<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>>>",
    "poll_symbol": ""
  },
  "0x7ee58b": {
    "name": "NonNull<alloc::sync::ArcInner<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::FutureObj<()>>>>",
    "poll_symbol": ""
  },
  "0x7ee5e7": {
    "name": "NonNull<alloc::sync::ArcInner<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>>>",
    "poll_symbol": ""
  },
  "0x7ee662": {
    "name": "NonNull<alloc::sync::ArcInner<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::LocalFutureObj<()>>>>",
    "poll_symbol": ""
  },
  "0x7ee80e": {
    "name": "NonNull<alloc::sync::ArcInner<futures_util::abortable::AbortInner>>",
    "poll_symbol": ""
  },
  "0x7ee981": {
    "name": "NonNull<alloc::sync::ArcInner<futures_util::stream::stream::flatten_unordered::WrappedWaker>>",
    "poll_symbol": ""
  },
  "0x7f03ed": {
    "name": "Result<(), futures_task::spawn::SpawnError>",
    "poll_symbol": ""
  },
  "0x7f0b17": {
    "name": "Weak<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::FutureObj<()>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7f0b72": {
    "name": "Arc<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7f0c6c": {
    "name": "ArcInner<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>>",
    "poll_symbol": ""
  },
  "0x7f0ca2": {
    "name": "ArcInner<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::FutureObj<()>>>",
    "poll_symbol": ""
  },
  "0x7f0cd8": {
    "name": "Weak<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::LocalFutureObj<()>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7f0d33": {
    "name": "Arc<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7f0e2d": {
    "name": "ArcInner<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>>",
    "poll_symbol": ""
  },
  "0x7f0e63": {
    "name": "ArcInner<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::LocalFutureObj<()>>>",
    "poll_symbol": ""
  },
  "0x7f0f55": {
    "name": "ArcInner<futures_util::abortable::AbortInner>",
    "poll_symbol": ""
  },
  "0x7f0f8b": {
    "name": "Arc<futures_util::abortable::AbortInner, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7f1035": {
    "name": "Arc<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::LocalFutureObj<()>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7f10c4": {
    "name": "Arc<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::FutureObj<()>>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7f2256": {
    "name": "Weak<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>, &alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7f22b1": {
    "name": "Weak<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>, &alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7f230c": {
    "name": "Weak<futures_util::abortable::AbortInner, &alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7f2692": {
    "name": "ArcInner<futures_util::stream::stream::flatten_unordered::WrappedWaker>",
    "poll_symbol": ""
  },
  "0x7f26c8": {
    "name": "Arc<futures_util::stream::stream::flatten_unordered::WrappedWaker, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7f2ee5": {
    "name": "<&*mut futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>> as core::fmt::Debug>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0x7f4163": {
    "name": "(*mut alloc::sync::ArcInner<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>>, alloc::alloc::Global)",
    "poll_symbol": ""
  },
  "0x7f4332": {
    "name": "(*mut alloc::sync::ArcInner<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>>, alloc::alloc::Global)",
    "poll_symbol": ""
  },
  "0x7f4501": {
    "name": "(*mut alloc::sync::ArcInner<futures_util::abortable::AbortInner>, alloc::alloc::Global)",
    "poll_symbol": ""
  },
  "0x7f6090": {
    "name": "(u8, futures_util::stream::stream::flatten_unordered::PollStateBomb<fn(&futures_util::stream::stream::flatten_unordered::SharedPollState) -> u8>)",
    "poll_symbol": ""
  },
  "0x7f612b": {
    "name": "(u8, futures_util::stream::stream::flatten_unordered::PollStateBomb<fn(&futures_util::stream::stream::flatten_unordered::SharedPollState) -> u8>)<0x7f612b>",
    "poll_symbol": ""
  },
  "0x7f6b76": {
    "name": "(futures_util::abortable::AbortHandle, futures_util::abortable::AbortRegistration)",
    "poll_symbol": ""
  },
  "0x7f6c21": {
    "name": "(&futures_util::stream::stream::flatten_unordered::SharedPollState)",
    "poll_symbol": ""
  },
  "0x7f70bd": {
    "name": "LocalFutureObj<()><0x7f70bd>",
    "poll_symbol": ""
  },
  "0x7f718f": {
    "name": "FutureObj<()><0x7f718f>",
    "poll_symbol": ""
  },
  "0x7f7b82": {
    "name": "NonNull<dyn core::future::future::Future<Output=()>>",
    "poll_symbol": ""
  },
  "0x7f7ce5": {
    "name": "Unique<dyn core::future::future::Future<Output=()>>",
    "poll_symbol": ""
  },
  "0x7f7fe5": {
    "name": "PhantomData<dyn core::future::future::Future<Output=()>>",
    "poll_symbol": ""
  },
  "0x7f80c8": {
    "name": "ManuallyDrop<core::pin::Pin<alloc::boxed::Box<dyn core::future::future::Future<Output=()>, alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x7f80e6": {
    "name": "ManuallyDrop<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": ""
  },
  "0x7f81dc": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x7f81dc>",
    "poll_symbol": ""
  },
  "0x7f8219": {
    "name": "Pin<alloc::boxed::Box<dyn core::future::future::Future<Output=()>, alloc::alloc::Global>>",
    "poll_symbol": ""
  },
  "0x7f8256": {
    "name": "Pin<&mut dyn core::future::future::Future<Output=()>>",
    "poll_symbol": ""
  },
  "0x7f8274": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=()> + core::marker::Send)><0x7f8274>",
    "poll_symbol": ""
  },
  "0x7f8547": {
    "name": "dyn core::future::future::Future<Output=()><0x7f8547>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x7f854e": {
    "name": "*const dyn core::future::future::Future<Output=()>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x7f858f": {
    "name": "*mut dyn core::future::future::Future<Output=()><0x7f858f>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x7f8a39": {
    "name": "alloc::boxed::Box<dyn core::future::future::Future<Output=()>, alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0x7f8bb1": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x7f8bb1>",
    "poll_symbol": ""
  },
  "0x7f8bd8": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x7f8bd8>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x7f8d17": {
    "name": "&mut dyn core::future::future::Future<Output=()>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x7f8d5e": {
    "name": "&mut (dyn core::future::future::Future<Output=()> + core::marker::Send)<0x7f8d5e>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0x9f6cd6": {
    "name": "{async_fn_env#0}<0x9f6cd6>",
    "poll_symbol": ""
  },
  "0x9f6f3e": {
    "name": "{async_fn_env#0}<0x9f6f3e>",
    "poll_symbol": ""
  },
  "0xa0dcdb": {
    "name": "{async_fn_env#0}<0xa0dcdb>",
    "poll_symbol": ""
  },
  "0xa0de29": {
    "name": "{async_fn_env#0}<0xa0de29>",
    "poll_symbol": ""
  },
  "0xa0f8da": {
    "name": "{async_fn_env#0}<()>",
    "poll_symbol": ""
  },
  "0xa0f995": {
    "name": "{async_fn_env#0}<()><0xa0f995>",
    "poll_symbol": ""
  },
  "0xa0fcae": {
    "name": "Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>>",
    "poll_symbol": ""
  },
  "0xa0fe5f": {
    "name": "{async_fn_env#0}<0xa0fe5f>",
    "poll_symbol": ""
  },
  "0xa0ffff": {
    "name": "ReusableBoxFuture<tokio::sync::watch::Receiver<()>>",
    "poll_symbol": ""
  },
  "0xa10148": {
    "name": "{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0xa1046e": {
    "name": "{async_fn_env#0}<0xa1046e>",
    "poll_symbol": ""
  },
  "0xa10554": {
    "name": "{async_fn_env#0}<0xa10554>",
    "poll_symbol": ""
  },
  "0xa109bf": {
    "name": "{async_fn_env#0}<0xa109bf>",
    "poll_symbol": ""
  },
  "0xa10aa5": {
    "name": "{async_fn_env#0}<0xa10aa5>",
    "poll_symbol": ""
  },
  "0xa16dfd": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0xa19f6a": {
    "name": "Result<(), tokio::signal::make_future::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0xa1d3c3": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0xa2106a": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa210a6": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa210e2": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa2111e": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21196": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa211d2": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa211f0": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa2122c": {
    "name": "AssertUnwindSafe<tokio::signal::reusable_box::{impl#0}::set_same_layout::{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}>>",
    "poll_symbol": ""
  },
  "0xa2124a": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21268": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa212fe": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa213ee": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21484": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa214de": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa214fc": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa215ce": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa215ec": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21646": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21682": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa216a0": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21826": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21880": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa2189e": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21952": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21970": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa2198e": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa219ca": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa219e8": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21a42": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21a60": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21aba": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21ad8": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21b50": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21b8c": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21baa": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21bc8": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21c40": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21c5e": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21c9a": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21cd6": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21e02": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21e20": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21e3e": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21ed4": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21f2e": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21f6a": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa21fa6": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa22078": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa2210e": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa221e0": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa221fe": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa22258": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa222d0": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": ""
  },
  "0xa2cd6a": {
    "name": "<tokio::signal::make_future::{async_fn_env#0} as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E"
  },
  "0xa38592": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xa38599": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xa386b4": {
    "name": "&(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xa38791": {
    "name": "*mut (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xa38877": {
    "name": "&mut (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xa38f1a": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": ""
  },
  "0xa3beef": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)><0xa3beef>",
    "poll_symbol": ""
  },
  "0xa4395e": {
    "name": "{async_fn_env#0}<tokio::fs::file::Inner>",
    "poll_symbol": ""
  },
  "0xa43a17": {
    "name": "{async_block_env#0}<tokio::fs::file::Inner>",
    "poll_symbol": ""
  },
  "0xa43ad2": {
    "name": "{async_fn_env#0}<tokio::fs::file::Inner><0xa43ad2>",
    "poll_symbol": ""
  },
  "0xa43d6e": {
    "name": "{async_fn_env#0}<usize>",
    "poll_symbol": ""
  },
  "0xa43e29": {
    "name": "{async_fn_env#0}<usize><0xa43e29>",
    "poll_symbol": ""
  },
  "0xa440cb": {
    "name": "{async_fn_env#0}<0xa440cb>",
    "poll_symbol": ""
  },
  "0xa44181": {
    "name": "{async_fn_env#0}<0xa44181>",
    "poll_symbol": ""
  },
  "0xa44ee6": {
    "name": "{async_fn_env#0}<0xa44ee6>",
    "poll_symbol": ""
  },
  "0xa45f30": {
    "name": "{async_fn_env#0}<(mio::net::tcp::stream::TcpStream, core::net::socket_addr::SocketAddr), tokio::net::tcp::listener::{impl#0}::accept::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xa460cf": {
    "name": "{async_fn_env#0}<0xa460cf>",
    "poll_symbol": ""
  },
  "0xa47ac5": {
    "name": "Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<usize>>",
    "poll_symbol": ""
  },
  "0xa47b83": {
    "name": "{async_fn_env#0}<0xa47b83>",
    "poll_symbol": ""
  },
  "0xa47e99": {
    "name": "{async_fn_env#0}<0xa47e99>",
    "poll_symbol": ""
  },
  "0xa47ff6": {
    "name": "{async_fn_env#0}<0xa47ff6>",
    "poll_symbol": ""
  },
  "0xa48153": {
    "name": "{async_fn_env#0}<0xa48153>",
    "poll_symbol": ""
  },
  "0xa48305": {
    "name": "{async_fn_env#0}<0xa48305>",
    "poll_symbol": ""
  },
  "0xa483d8": {
    "name": "{async_fn_env#0}<0xa483d8>",
    "poll_symbol": ""
  },
  "0xa4852a": {
    "name": "{async_fn_env#0}<0xa4852a>",
    "poll_symbol": ""
  },
  "0xa485fa": {
    "name": "{async_fn_env#0}<0xa485fa>",
    "poll_symbol": ""
  },
  "0xa4870a": {
    "name": "{async_fn_env#0}<0xa4870a>",
    "poll_symbol": ""
  },
  "0xa496e4": {
    "name": "{async_fn_env#0}<tokio::fs::file::{impl#0}::sync_all::{async_fn#0}::{closure_env#0}, ()>",
    "poll_symbol": ""
  },
  "0xa49798": {
    "name": "{async_fn_env#0}<tokio::fs::file::{impl#0}::sync_data::{async_fn#0}::{closure_env#0}, ()>",
    "poll_symbol": ""
  },
  "0xa4984c": {
    "name": "{async_fn_env#0}<tokio::fs::file::{impl#0}::metadata::{async_fn#0}::{closure_env#0}, std::fs::Metadata>",
    "poll_symbol": ""
  },
  "0xa49900": {
    "name": "{async_fn_env#0}<tokio::fs::file::{impl#0}::try_clone::{async_fn#0}::{closure_env#0}, std::fs::File>",
    "poll_symbol": ""
  },
  "0xa499b4": {
    "name": "{async_fn_env#0}<tokio::fs::file::{impl#0}::set_permissions::{async_fn#0}::{closure_env#0}, ()>",
    "poll_symbol": ""
  },
  "0xa49b97": {
    "name": "{async_fn_env#0}<0xa49b97>",
    "poll_symbol": ""
  },
  "0xa4ab08": {
    "name": "{async_block_env#0}<0xa4ab08>",
    "poll_symbol": ""
  },
  "0xa4abd4": {
    "name": "{async_block_env#0}<0xa4abd4>",
    "poll_symbol": ""
  },
  "0xa4aca6": {
    "name": "{async_fn_env#0}<0xa4aca6>",
    "poll_symbol": ""
  },
  "0xa4ad6b": {
    "name": "{async_fn_env#0}<0xa4ad6b>",
    "poll_symbol": ""
  },
  "0xa4ae83": {
    "name": "{async_fn_env#0}<tokio::process::ChildStdout>",
    "poll_symbol": ""
  },
  "0xa4af42": {
    "name": "{async_fn_env#0}<tokio::process::ChildStderr>",
    "poll_symbol": ""
  },
  "0xa4b009": {
    "name": "{async_fn_env#0}<0xa4b009>",
    "poll_symbol": ""
  },
  "0xa4b5a1": {
    "name": "RxFuture",
    "poll_symbol": ""
  },
  "0xa4b5bb": {
    "name": "ReusableBoxFuture<tokio::sync::watch::Receiver<()>><0xa4b5bb>",
    "poll_symbol": ""
  },
  "0xa4b5e5": {
    "name": "TryJoin3<tokio::process::{impl#5}::wait::{async_fn_env#0}, tokio::process::{impl#5}::wait_with_output::{async_fn#0}::read_to_end::{async_fn_env#0}<tokio::process::ChildStdout>, tokio::process::{impl#5}::wait_with_output::{async_fn#0}::read_to_end::{async_fn_env#0}<tokio::process::ChildStderr>>",
    "poll_symbol": ""
  },
  "0xa4b633": {
    "name": "MaybeDone<tokio::process::{impl#5}::wait::{async_fn_env#0}>",
    "poll_symbol": ""
  },
  "0xa4b6c1": {
    "name": "MaybeDone<tokio::process::{impl#5}::wait_with_output::{async_fn#0}::read_to_end::{async_fn_env#0}<tokio::process::ChildStdout>>",
    "poll_symbol": ""
  },
  "0xa4b74f": {
    "name": "MaybeDone<tokio::process::{impl#5}::wait_with_output::{async_fn#0}::read_to_end::{async_fn_env#0}<tokio::process::ChildStderr>>",
    "poll_symbol": ""
  },
  "0xa52de8": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xa52de8>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xa52def": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xa52def>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xa78c61": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)><0xa78c61>",
    "poll_symbol": ""
  },
  "0xa9b848": {
    "name": "RxFuture<0xa9b848>",
    "poll_symbol": ""
  },
  "0xa9b862": {
    "name": "ReusableBoxFuture<tokio::sync::watch::Receiver<()>><0xa9b862>",
    "poll_symbol": ""
  },
  "0xa9fe26": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xa9fe26>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xa9fe2d": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xa9fe2d>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xa9fe54": {
    "name": "*mut (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xa9fe54>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xab12b4": {
    "name": "{async_fn_env#0}<0xab12b4>",
    "poll_symbol": ""
  },
  "0xab14c2": {
    "name": "{async_fn_env#0}<0xab14c2>",
    "poll_symbol": ""
  },
  "0xab249e": {
    "name": "{async_fn_env#0}<()><0xab249e>",
    "poll_symbol": ""
  },
  "0xab2559": {
    "name": "{async_fn_env#0}<()><0xab2559>",
    "poll_symbol": ""
  },
  "0xab2847": {
    "name": "Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>><0xab2847>",
    "poll_symbol": ""
  },
  "0xab43d7": {
    "name": "{async_fn_env#0}<0xab43d7>",
    "poll_symbol": ""
  },
  "0xab4922": {
    "name": "{async_fn_env#0}<0xab4922>",
    "poll_symbol": ""
  },
  "0xab4a04": {
    "name": "{async_fn_env#0}<0xab4a04>",
    "poll_symbol": ""
  },
  "0xab4b0e": {
    "name": "{async_fn_env#0}<0xab4b0e>",
    "poll_symbol": ""
  },
  "0xab4bf4": {
    "name": "{async_fn_env#0}<0xab4bf4>",
    "poll_symbol": ""
  },
  "0xab4e82": {
    "name": "{async_fn_env#0}<0xab4e82>",
    "poll_symbol": ""
  },
  "0xab4f64": {
    "name": "{async_fn_env#0}<0xab4f64>",
    "poll_symbol": ""
  },
  "0xab501a": {
    "name": "{async_fn_env#0}<0xab501a>",
    "poll_symbol": ""
  },
  "0xac54f5": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xac54f5>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xac54fc": {
    "name": "&(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xac54fc>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xad5ee0": {
    "name": "Unique<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0xad7817": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)><0xad7817>",
    "poll_symbol": ""
  },
  "0xad8f7a": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)>",
    "poll_symbol": ""
  },
  "0xadfbae": {
    "name": "Pin<&mut tokio::task::coop::Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>>>",
    "poll_symbol": ""
  },
  "0xae3b7e": {
    "name": "{async_fn_env#0}<0xae3b7e>",
    "poll_symbol": ""
  },
  "0xae3db9": {
    "name": "{async_fn_env#0}<0xae3db9>",
    "poll_symbol": ""
  },
  "0xae3e9b": {
    "name": "{async_fn_env#0}<usize, tokio::net::tcp::stream::{impl#0}::peek::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xae5766": {
    "name": "{async_fn_env#0}<0xae5766>",
    "poll_symbol": ""
  },
  "0xae5fb3": {
    "name": "{async_fn_env#0}<()><0xae5fb3>",
    "poll_symbol": ""
  },
  "0xae6113": {
    "name": "{async_fn_env#0}<()><0xae6113>",
    "poll_symbol": ""
  },
  "0xae859d": {
    "name": "{async_fn_env#0}<0xae859d>",
    "poll_symbol": ""
  },
  "0xae8683": {
    "name": "{async_fn_env#0}<0xae8683>",
    "poll_symbol": ""
  },
  "0xae8811": {
    "name": "{async_fn_env#0}<0xae8811>",
    "poll_symbol": ""
  },
  "0xae899f": {
    "name": "{async_fn_env#0}<0xae899f>",
    "poll_symbol": ""
  },
  "0xae8aa9": {
    "name": "{async_fn_env#0}<0xae8aa9>",
    "poll_symbol": ""
  },
  "0xae8b5f": {
    "name": "{async_fn_env#0}<0xae8b5f>",
    "poll_symbol": ""
  },
  "0xae8f33": {
    "name": "Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>><0xae8f33>",
    "poll_symbol": ""
  },
  "0xaec6ad": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xaec6ad>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xaec6b4": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xaec6b4>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xaec6db": {
    "name": "*mut (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xaec6db>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xaec72f": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send), alloc::alloc::Global><0xaec72f>",
    "poll_symbol": ""
  },
  "0xaf6784": {
    "name": "{async_fn_env#0}<0xaf6784>",
    "poll_symbol": ""
  },
  "0xaf68c4": {
    "name": "{async_fn_env#0}<0xaf68c4>",
    "poll_symbol": ""
  },
  "0xaf9527": {
    "name": "{async_fn_env#0}<0xaf9527>",
    "poll_symbol": ""
  },
  "0xaf9601": {
    "name": "{async_fn_env#0}<0xaf9601>",
    "poll_symbol": ""
  },
  "0xaf96e3": {
    "name": "{async_fn_env#0}<0xaf96e3>",
    "poll_symbol": ""
  },
  "0xaf986d": {
    "name": "{async_fn_env#0}<0xaf986d>",
    "poll_symbol": ""
  },
  "0xb199e5": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)><0xb199e5>",
    "poll_symbol": ""
  },
  "0xb2db6d": {
    "name": "{async_fn_env#0}<0xb2db6d>",
    "poll_symbol": ""
  },
  "0xb2dc4b": {
    "name": "{async_fn_env#0}<0xb2dc4b>",
    "poll_symbol": ""
  },
  "0xb2dcf3": {
    "name": "{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}><0xb2dcf3>",
    "poll_symbol": ""
  },
  "0xb2dd08": {
    "name": "ReusableBoxFuture<tokio::sync::watch::Receiver<()>><0xb2dd08>",
    "poll_symbol": ""
  },
  "0xb2dd27": {
    "name": "RxFuture<0xb2dd27>",
    "poll_symbol": ""
  },
  "0xb2dd41": {
    "name": "{async_fn_env#0}<0xb2dd41>",
    "poll_symbol": ""
  },
  "0xb2de07": {
    "name": "{async_fn_env#0}<0xb2de07>",
    "poll_symbol": ""
  },
  "0xb2dfcc": {
    "name": "{async_fn_env#0}<()><0xb2dfcc>",
    "poll_symbol": ""
  },
  "0xb2e0b1": {
    "name": "{async_fn_env#0}<()><0xb2e0b1>",
    "poll_symbol": ""
  },
  "0xb2fed5": {
    "name": "{async_fn_env#0}<0xb2fed5>",
    "poll_symbol": ""
  },
  "0xb3060f": {
    "name": "{async_fn_env#0}<(mio::net::uds::stream::UnixStream, std::os::unix::net::addr::SocketAddr), tokio::net::unix::listener::{impl#0}::accept::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xb307ae": {
    "name": "{async_fn_env#0}<0xb307ae>",
    "poll_symbol": ""
  },
  "0xb36361": {
    "name": "{async_fn_env#0}<0xb36361>",
    "poll_symbol": ""
  },
  "0xb36736": {
    "name": "Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>><0xb36736>",
    "poll_symbol": ""
  },
  "0xb3fa0e": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xb3fa0e>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xb3fa15": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xb3fa15>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xb40d58": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send), alloc::alloc::Global><0xb40d58>",
    "poll_symbol": ""
  },
  "0xb41fe7": {
    "name": "*mut (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xb41fe7>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xb59fcd": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)><0xb59fcd>",
    "poll_symbol": ""
  },
  "0xb5e2f9": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5e371": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5e3ad": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5e425": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5e515": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5e58d": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::signal::reusable_box::{impl#0}::set_same_layout::{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}>>>",
    "poll_symbol": ""
  },
  "0xb5e605": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5e67d": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5e78b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5e7c7": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5e83f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5e92f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5e9a7": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5ea5b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5ea97": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5ead3": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5ec3b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5ee1b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5ef0b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5ef47": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5f0af": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5f163": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5f253": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5f307": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5f343": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5f37f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5f3bb": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5f433": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5f4ab": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5f5d7": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5f703": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5f77b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5f95b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5fa0f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5fac3": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5faff": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5fb3b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5fb77": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5fc2b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5fca3": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5fdcf": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5fe47": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb5ff73": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb60027": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb60153": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb60243": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb6045f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb6054f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb60603": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb606b7": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb6072f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb60897": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb6094b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": ""
  },
  "0xb60c53": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb60c53>",
    "poll_symbol": ""
  },
  "0xb60c8f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb60c8f>",
    "poll_symbol": ""
  },
  "0xb60cad": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb60cad>",
    "poll_symbol": ""
  },
  "0xb60ce9": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb60ce9>",
    "poll_symbol": ""
  },
  "0xb60d61": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb60d61>",
    "poll_symbol": ""
  },
  "0xb60d7f": {
    "name": "AssertUnwindSafe<tokio::signal::reusable_box::{impl#0}::set_same_layout::{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}>><0xb60d7f>",
    "poll_symbol": ""
  },
  "0xb60dbb": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb60dbb>",
    "poll_symbol": ""
  },
  "0xb60df7": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb60df7>",
    "poll_symbol": ""
  },
  "0xb60e6f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb60e6f>",
    "poll_symbol": ""
  },
  "0xb60e8d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb60e8d>",
    "poll_symbol": ""
  },
  "0xb60eab": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb60eab>",
    "poll_symbol": ""
  },
  "0xb60f05": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb60f05>",
    "poll_symbol": ""
  },
  "0xb60f41": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb60f41>",
    "poll_symbol": ""
  },
  "0xb60f9b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb60f9b>",
    "poll_symbol": ""
  },
  "0xb60fb9": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb60fb9>",
    "poll_symbol": ""
  },
  "0xb60fd7": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb60fd7>",
    "poll_symbol": ""
  },
  "0xb6108b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb6108b>",
    "poll_symbol": ""
  },
  "0xb6117b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb6117b>",
    "poll_symbol": ""
  },
  "0xb611f3": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb611f3>",
    "poll_symbol": ""
  },
  "0xb61211": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61211>",
    "poll_symbol": ""
  },
  "0xb612a7": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb612a7>",
    "poll_symbol": ""
  },
  "0xb612e3": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb612e3>",
    "poll_symbol": ""
  },
  "0xb6135b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb6135b>",
    "poll_symbol": ""
  },
  "0xb613b5": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb613b5>",
    "poll_symbol": ""
  },
  "0xb613d3": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb613d3>",
    "poll_symbol": ""
  },
  "0xb613f1": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb613f1>",
    "poll_symbol": ""
  },
  "0xb6140f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb6140f>",
    "poll_symbol": ""
  },
  "0xb6144b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb6144b>",
    "poll_symbol": ""
  },
  "0xb61487": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61487>",
    "poll_symbol": ""
  },
  "0xb6151d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb6151d>",
    "poll_symbol": ""
  },
  "0xb615b3": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb615b3>",
    "poll_symbol": ""
  },
  "0xb615ef": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb615ef>",
    "poll_symbol": ""
  },
  "0xb616df": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb616df>",
    "poll_symbol": ""
  },
  "0xb61739": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61739>",
    "poll_symbol": ""
  },
  "0xb61793": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61793>",
    "poll_symbol": ""
  },
  "0xb617b1": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb617b1>",
    "poll_symbol": ""
  },
  "0xb617cf": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb617cf>",
    "poll_symbol": ""
  },
  "0xb617ed": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb617ed>",
    "poll_symbol": ""
  },
  "0xb61847": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61847>",
    "poll_symbol": ""
  },
  "0xb61883": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61883>",
    "poll_symbol": ""
  },
  "0xb61919": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61919>",
    "poll_symbol": ""
  },
  "0xb61955": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61955>",
    "poll_symbol": ""
  },
  "0xb619eb": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb619eb>",
    "poll_symbol": ""
  },
  "0xb61a45": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61a45>",
    "poll_symbol": ""
  },
  "0xb61adb": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61adb>",
    "poll_symbol": ""
  },
  "0xb61b53": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61b53>",
    "poll_symbol": ""
  },
  "0xb61c61": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61c61>",
    "poll_symbol": ""
  },
  "0xb61cd9": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61cd9>",
    "poll_symbol": ""
  },
  "0xb61d33": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61d33>",
    "poll_symbol": ""
  },
  "0xb61d8d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61d8d>",
    "poll_symbol": ""
  },
  "0xb61dc9": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61dc9>",
    "poll_symbol": ""
  },
  "0xb61e7d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61e7d>",
    "poll_symbol": ""
  },
  "0xb61ed7": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61ed7>",
    "poll_symbol": ""
  },
  "0xb67656": {
    "name": "{async_fn_env#0}<0xb67656>",
    "poll_symbol": ""
  },
  "0xb67796": {
    "name": "{async_fn_env#0}<0xb67796>",
    "poll_symbol": ""
  },
  "0xb67878": {
    "name": "{async_fn_env#0}<usize, tokio::net::unix::datagram::socket::{impl#0}::send::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xb67a11": {
    "name": "{async_fn_env#0}<usize, tokio::net::unix::datagram::socket::{impl#0}::recv::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xb67baa": {
    "name": "{async_fn_env#0}<(usize, std::os::unix::net::addr::SocketAddr), tokio::net::unix::datagram::socket::{impl#0}::recv_from::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xb6ff51": {
    "name": "{async_fn_env#0}<0xb6ff51>",
    "poll_symbol": ""
  },
  "0xb70033": {
    "name": "{async_fn_env#0}<0xb70033>",
    "poll_symbol": ""
  },
  "0xb70127": {
    "name": "{async_fn_env#0}<0xb70127>",
    "poll_symbol": ""
  },
  "0xb70265": {
    "name": "{async_fn_env#0}<0xb70265>",
    "poll_symbol": ""
  },
  "0xb703ba": {
    "name": "{async_fn_env#0}<0xb703ba>",
    "poll_symbol": ""
  },
  "0xb7050f": {
    "name": "{async_fn_env#0}<0xb7050f>",
    "poll_symbol": ""
  },
  "0xb70da3": {
    "name": "{async_fn_env#0}<0xb70da3>",
    "poll_symbol": ""
  },
  "0xb71020": {
    "name": "{async_fn_env#0}<0xb71020>",
    "poll_symbol": ""
  },
  "0xb710f3": {
    "name": "{async_fn_env#0}<0xb710f3>",
    "poll_symbol": ""
  },
  "0xb711c8": {
    "name": "{async_fn_env#0}<tokio::fs::read_dir::{impl#1}::metadata::{async_fn#0}::{closure_env#0}, std::fs::Metadata>",
    "poll_symbol": ""
  },
  "0xb7127c": {
    "name": "{async_fn_env#0}<tokio::fs::read_dir::{impl#1}::file_type::{async_fn#0}::{closure_env#0}, std::fs::FileType>",
    "poll_symbol": ""
  },
  "0xb71346": {
    "name": "{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}><0xb71346>",
    "poll_symbol": ""
  },
  "0xb7135b": {
    "name": "ReusableBoxFuture<tokio::sync::watch::Receiver<()>><0xb7135b>",
    "poll_symbol": ""
  },
  "0xb7198b": {
    "name": "{async_fn_env#0}<0xb7198b>",
    "poll_symbol": ""
  },
  "0xb71af1": {
    "name": "RxFuture<0xb71af1>",
    "poll_symbol": ""
  },
  "0xb71b10": {
    "name": "{async_fn_env#0}<0xb71b10>",
    "poll_symbol": ""
  },
  "0xb72f78": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xb72f78>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xb72f7f": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xb72f7f>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xb7cf82": {
    "name": "{async_fn_env#0}<0xb7cf82>",
    "poll_symbol": ""
  },
  "0xb7d0d0": {
    "name": "{async_fn_env#0}<0xb7d0d0>",
    "poll_symbol": ""
  },
  "0xb7fafe": {
    "name": "{async_fn_env#0}<0xb7fafe>",
    "poll_symbol": ""
  },
  "0xb7fc0f": {
    "name": "{async_fn_env#0}<0xb7fc0f>",
    "poll_symbol": ""
  },
  "0xb7fcf1": {
    "name": "{async_fn_env#0}<0xb7fcf1>",
    "poll_symbol": ""
  },
  "0xb7fdff": {
    "name": "{async_fn_env#0}<0xb7fdff>",
    "poll_symbol": ""
  },
  "0xb7fee5": {
    "name": "{async_fn_env#0}<0xb7fee5>",
    "poll_symbol": ""
  },
  "0xb80173": {
    "name": "{async_fn_env#0}<0xb80173>",
    "poll_symbol": ""
  },
  "0xb80259": {
    "name": "{async_fn_env#0}<0xb80259>",
    "poll_symbol": ""
  },
  "0xb80313": {
    "name": "{async_fn_env#0}<0xb80313>",
    "poll_symbol": ""
  },
  "0xbb5466": {
    "name": "{async_fn_env#0}<()><0xbb5466>",
    "poll_symbol": ""
  },
  "0xbb55f7": {
    "name": "{async_fn_env#0}<()><0xbb55f7>",
    "poll_symbol": ""
  },
  "0xbb58f3": {
    "name": "{async_fn_env#0}<0xbb58f3>",
    "poll_symbol": ""
  },
  "0xbb59b8": {
    "name": "{async_fn_env#0}<0xbb59b8>",
    "poll_symbol": ""
  },
  "0xbb5ab4": {
    "name": "{async_fn_env#0}<0xbb5ab4>",
    "poll_symbol": ""
  },
  "0xbb5b79": {
    "name": "{async_fn_env#0}<0xbb5b79>",
    "poll_symbol": ""
  },
  "0xbb6d81": {
    "name": "Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>><0xbb6d81>",
    "poll_symbol": ""
  },
  "0xbb7001": {
    "name": "{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}><0xbb7001>",
    "poll_symbol": ""
  },
  "0xbb7016": {
    "name": "ReusableBoxFuture<tokio::sync::watch::Receiver<()>><0xbb7016>",
    "poll_symbol": ""
  },
  "0xbb70fd": {
    "name": "{async_fn_env#0}<0xbb70fd>",
    "poll_symbol": ""
  },
  "0xbb71b9": {
    "name": "RxFuture<0xbb71b9>",
    "poll_symbol": ""
  },
  "0xbb721c": {
    "name": "{async_fn_env#0}<0xbb721c>",
    "poll_symbol": ""
  },
  "0xbb8e8e": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)><0xbb8e8e>",
    "poll_symbol": ""
  },
  "0xbbcf01": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbcf01>",
    "poll_symbol": ""
  },
  "0xbbcf79": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbcf79>",
    "poll_symbol": ""
  },
  "0xbbcfd3": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbcfd3>",
    "poll_symbol": ""
  },
  "0xbbd04b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd04b>",
    "poll_symbol": ""
  },
  "0xbbd0e1": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd0e1>",
    "poll_symbol": ""
  },
  "0xbbd13b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd13b>",
    "poll_symbol": ""
  },
  "0xbbd1b3": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd1b3>",
    "poll_symbol": ""
  },
  "0xbbd1ef": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd1ef>",
    "poll_symbol": ""
  },
  "0xbbd285": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd285>",
    "poll_symbol": ""
  },
  "0xbbd2c1": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd2c1>",
    "poll_symbol": ""
  },
  "0xbbd357": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::signal::reusable_box::{impl#0}::set_same_layout::{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}>>><0xbbd357>",
    "poll_symbol": ""
  },
  "0xbbd375": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd375>",
    "poll_symbol": ""
  },
  "0xbbd3b1": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd3b1>",
    "poll_symbol": ""
  },
  "0xbbd3ed": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd3ed>",
    "poll_symbol": ""
  },
  "0xbbd465": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd465>",
    "poll_symbol": ""
  },
  "0xbbd4bf": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd4bf>",
    "poll_symbol": ""
  },
  "0xbbd591": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd591>",
    "poll_symbol": ""
  },
  "0xbbd609": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd609>",
    "poll_symbol": ""
  },
  "0xbbd6bd": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd6bd>",
    "poll_symbol": ""
  },
  "0xbbd7ad": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd7ad>",
    "poll_symbol": ""
  },
  "0xbbd7e9": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd7e9>",
    "poll_symbol": ""
  },
  "0xbbd87f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd87f>",
    "poll_symbol": ""
  },
  "0xbbd9ab": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd9ab>",
    "poll_symbol": ""
  },
  "0xbbda05": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbda05>",
    "poll_symbol": ""
  },
  "0xbbda5f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbda5f>",
    "poll_symbol": ""
  },
  "0xbbdab9": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbdab9>",
    "poll_symbol": ""
  },
  "0xbbdba9": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbdba9>",
    "poll_symbol": ""
  },
  "0xbbdc21": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbdc21>",
    "poll_symbol": ""
  },
  "0xbbdd89": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbdd89>",
    "poll_symbol": ""
  },
  "0xbbddc5": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbddc5>",
    "poll_symbol": ""
  },
  "0xbbde3d": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbde3d>",
    "poll_symbol": ""
  },
  "0xbbde79": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbde79>",
    "poll_symbol": ""
  },
  "0xbbdef1": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbdef1>",
    "poll_symbol": ""
  },
  "0xbbdf4b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbdf4b>",
    "poll_symbol": ""
  },
  "0xbbe01d": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe01d>",
    "poll_symbol": ""
  },
  "0xbbe0b3": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe0b3>",
    "poll_symbol": ""
  },
  "0xbbe0ef": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe0ef>",
    "poll_symbol": ""
  },
  "0xbbe167": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe167>",
    "poll_symbol": ""
  },
  "0xbbe1a3": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe1a3>",
    "poll_symbol": ""
  },
  "0xbbe1df": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe1df>",
    "poll_symbol": ""
  },
  "0xbbe21b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe21b>",
    "poll_symbol": ""
  },
  "0xbbe257": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe257>",
    "poll_symbol": ""
  },
  "0xbbe3a1": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe3a1>",
    "poll_symbol": ""
  },
  "0xbbe455": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe455>",
    "poll_symbol": ""
  },
  "0xbbe545": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe545>",
    "poll_symbol": ""
  },
  "0xbbe5bd": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe5bd>",
    "poll_symbol": ""
  },
  "0xbbe617": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe617>",
    "poll_symbol": ""
  },
  "0xbbe671": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe671>",
    "poll_symbol": ""
  },
  "0xbbe707": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe707>",
    "poll_symbol": ""
  },
  "0xbbe815": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe815>",
    "poll_symbol": ""
  },
  "0xbbe8ab": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe8ab>",
    "poll_symbol": ""
  },
  "0xbbe941": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe941>",
    "poll_symbol": ""
  },
  "0xbbe9b9": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe9b9>",
    "poll_symbol": ""
  },
  "0xbbeafe": {
    "name": "Pin<&mut tokio::sync::watch::{impl#4}::changed::{async_fn_env#0}<()>>",
    "poll_symbol": ""
  },
  "0xbbeb8b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbeb8b>",
    "poll_symbol": ""
  },
  "0xbbebc7": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbebc7>",
    "poll_symbol": ""
  },
  "0xbbec03": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbec03>",
    "poll_symbol": ""
  },
  "0xbbec3f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbec3f>",
    "poll_symbol": ""
  },
  "0xbbecb7": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbecb7>",
    "poll_symbol": ""
  },
  "0xbbecf3": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbecf3>",
    "poll_symbol": ""
  },
  "0xbbed11": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbed11>",
    "poll_symbol": ""
  },
  "0xbbed2f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbed2f>",
    "poll_symbol": ""
  },
  "0xbbed4d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbed4d>",
    "poll_symbol": ""
  },
  "0xbbed6b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbed6b>",
    "poll_symbol": ""
  },
  "0xbbede3": {
    "name": "AssertUnwindSafe<tokio::signal::reusable_box::{impl#0}::set_same_layout::{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}>><0xbbede3>",
    "poll_symbol": ""
  },
  "0xbbee01": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbee01>",
    "poll_symbol": ""
  },
  "0xbbee1f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbee1f>",
    "poll_symbol": ""
  },
  "0xbbee3d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbee3d>",
    "poll_symbol": ""
  },
  "0xbbee97": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbee97>",
    "poll_symbol": ""
  },
  "0xbbeed3": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbeed3>",
    "poll_symbol": ""
  },
  "0xbbef4b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbef4b>",
    "poll_symbol": ""
  },
  "0xbbef69": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbef69>",
    "poll_symbol": ""
  },
  "0xbbefff": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbefff>",
    "poll_symbol": ""
  },
  "0xbbf0d1": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf0d1>",
    "poll_symbol": ""
  },
  "0xbbf0ef": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf0ef>",
    "poll_symbol": ""
  },
  "0xbbf12b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf12b>",
    "poll_symbol": ""
  },
  "0xbbf1fd": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf1fd>",
    "poll_symbol": ""
  },
  "0xbbf239": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf239>",
    "poll_symbol": ""
  },
  "0xbbf275": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf275>",
    "poll_symbol": ""
  },
  "0xbbf2b1": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf2b1>",
    "poll_symbol": ""
  },
  "0xbbf383": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf383>",
    "poll_symbol": ""
  },
  "0xbbf3dd": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf3dd>",
    "poll_symbol": ""
  },
  "0xbbf527": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf527>",
    "poll_symbol": ""
  },
  "0xbbf545": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf545>",
    "poll_symbol": ""
  },
  "0xbbf59f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf59f>",
    "poll_symbol": ""
  },
  "0xbbf5bd": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf5bd>",
    "poll_symbol": ""
  },
  "0xbbf617": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf617>",
    "poll_symbol": ""
  },
  "0xbbf653": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf653>",
    "poll_symbol": ""
  },
  "0xbbf707": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf707>",
    "poll_symbol": ""
  },
  "0xbbf77f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf77f>",
    "poll_symbol": ""
  },
  "0xbbf79d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf79d>",
    "poll_symbol": ""
  },
  "0xbbf7f7": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf7f7>",
    "poll_symbol": ""
  },
  "0xbbf815": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf815>",
    "poll_symbol": ""
  },
  "0xbbf833": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf833>",
    "poll_symbol": ""
  },
  "0xbbf851": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf851>",
    "poll_symbol": ""
  },
  "0xbbf86f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf86f>",
    "poll_symbol": ""
  },
  "0xbbf95f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf95f>",
    "poll_symbol": ""
  },
  "0xbbf9f5": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf9f5>",
    "poll_symbol": ""
  },
  "0xbbfac7": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbfac7>",
    "poll_symbol": ""
  },
  "0xbbfb21": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbfb21>",
    "poll_symbol": ""
  },
  "0xbbfb5d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbfb5d>",
    "poll_symbol": ""
  },
  "0xbbfb99": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbfb99>",
    "poll_symbol": ""
  },
  "0xbbfc11": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbfc11>",
    "poll_symbol": ""
  },
  "0xbbfd01": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbfd01>",
    "poll_symbol": ""
  },
  "0xbbfd79": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbfd79>",
    "poll_symbol": ""
  },
  "0xbbfdf1": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbfdf1>",
    "poll_symbol": ""
  },
  "0xbbfe4b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbfe4b>",
    "poll_symbol": ""
  },
  "0xbc346d": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xbc346d>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xbc3474": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xbc3474>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xbc52c1": {
    "name": "{async_fn_env#0}<0xbc52c1>",
    "poll_symbol": ""
  },
  "0xbc5c9b": {
    "name": "{async_fn_env#0}<0xbc5c9b>",
    "poll_symbol": ""
  },
  "0xbc5d7d": {
    "name": "{async_fn_env#0}<usize, tokio::net::udp::{impl#0}::send::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xbc5f16": {
    "name": "{async_fn_env#0}<usize, tokio::net::udp::{impl#0}::recv::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xbc60af": {
    "name": "{async_fn_env#0}<usize, tokio::net::udp::{impl#0}::send_to_addr::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xbc6248": {
    "name": "{async_fn_env#0}<(usize, core::net::socket_addr::SocketAddr), tokio::net::udp::{impl#0}::recv_from::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xbc63e1": {
    "name": "{async_fn_env#0}<usize, tokio::net::udp::{impl#0}::peek::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xbc657a": {
    "name": "{async_fn_env#0}<(usize, core::net::socket_addr::SocketAddr), tokio::net::udp::{impl#0}::peek_from::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xbc6713": {
    "name": "{async_fn_env#0}<core::net::socket_addr::SocketAddr, tokio::net::udp::{impl#0}::peek_sender::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": ""
  },
  "0xbc8a97": {
    "name": "{async_fn_env#0}<()><0xbc8a97>",
    "poll_symbol": ""
  },
  "0xbc9ecd": {
    "name": "{async_fn_env#0}<0xbc9ecd>",
    "poll_symbol": ""
  },
  "0xbc9fde": {
    "name": "{async_fn_env#0}<0xbc9fde>",
    "poll_symbol": ""
  },
  "0xbca0c0": {
    "name": "{async_fn_env#0}<0xbca0c0>",
    "poll_symbol": ""
  },
  "0xbca224": {
    "name": "{async_fn_env#0}<0xbca224>",
    "poll_symbol": ""
  },
  "0xbca30a": {
    "name": "{async_fn_env#0}<0xbca30a>",
    "poll_symbol": ""
  },
  "0xbca5a4": {
    "name": "{async_fn_env#0}<0xbca5a4>",
    "poll_symbol": ""
  },
  "0xbca68a": {
    "name": "{async_fn_env#0}<0xbca68a>",
    "poll_symbol": ""
  },
  "0xbca744": {
    "name": "{async_fn_env#0}<0xbca744>",
    "poll_symbol": ""
  },
  "0xbcade1": {
    "name": "{async_fn_env#0}<0xbcade1>",
    "poll_symbol": ""
  },
  "0xbcaec7": {
    "name": "{async_fn_env#0}<0xbcaec7>",
    "poll_symbol": ""
  },
  "0xbcafbf": {
    "name": "{async_fn_env#0}<0xbcafbf>",
    "poll_symbol": ""
  },
  "0xbcb15f": {
    "name": "{async_fn_env#0}<0xbcb15f>",
    "poll_symbol": ""
  },
  "0xbcb257": {
    "name": "{async_fn_env#0}<0xbcb257>",
    "poll_symbol": ""
  },
  "0xbcb46a": {
    "name": "{async_fn_env#0}<0xbcb46a>",
    "poll_symbol": ""
  },
  "0xbcb5bc": {
    "name": "{async_fn_env#0}<0xbcb5bc>",
    "poll_symbol": ""
  },
  "0xbcb711": {
    "name": "{async_fn_env#0}<0xbcb711>",
    "poll_symbol": ""
  },
  "0xbcb866": {
    "name": "{async_fn_env#0}<0xbcb866>",
    "poll_symbol": ""
  },
  "0xbcb9bb": {
    "name": "{async_fn_env#0}<0xbcb9bb>",
    "poll_symbol": ""
  },
  "0xbcd5d9": {
    "name": "Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>><0xbcd5d9>",
    "poll_symbol": ""
  },
  "0xbcd61b": {
    "name": "Projection<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>>",
    "poll_symbol": ""
  },
  "0xbd1bc1": {
    "name": "Pin<&mut tokio::sync::watch::changed_impl::{async_fn_env#0}<()>>",
    "poll_symbol": ""
  },
  "0xbd1bdf": {
    "name": "Pin<&mut tokio::task::coop::Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>>><0xbd1bdf>",
    "poll_symbol": ""
  },
  "0xc0df7c": {
    "name": "{async_fn_env#0}<0xc0df7c>",
    "poll_symbol": ""
  },
  "0xc0e18a": {
    "name": "{async_fn_env#0}<0xc0e18a>",
    "poll_symbol": ""
  },
  "0xc10fbe": {
    "name": "RxFuture<0xc10fbe>",
    "poll_symbol": ""
  },
  "0xc10fd8": {
    "name": "ReusableBoxFuture<tokio::sync::watch::Receiver<()>><0xc10fd8>",
    "poll_symbol": ""
  },
  "0xc110aa": {
    "name": "{async_fn_env#0}<0xc110aa>",
    "poll_symbol": ""
  },
  "0xc12ba6": {
    "name": "{async_fn_env#0}<0xc12ba6>",
    "poll_symbol": ""
  },
  "0xc12c88": {
    "name": "{async_fn_env#0}<0xc12c88>",
    "poll_symbol": ""
  },
  "0xc12de9": {
    "name": "{async_fn_env#0}<0xc12de9>",
    "poll_symbol": ""
  },
  "0xc12ecb": {
    "name": "{async_fn_env#0}<0xc12ecb>",
    "poll_symbol": ""
  },
  "0xc1319a": {
    "name": "{async_fn_env#0}<0xc1319a>",
    "poll_symbol": ""
  },
  "0xc1327c": {
    "name": "{async_fn_env#0}<0xc1327c>",
    "poll_symbol": ""
  },
  "0xc13332": {
    "name": "{async_fn_env#0}<0xc13332>",
    "poll_symbol": ""
  },
  "0xc18f3d": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)><0xc18f3d>",
    "poll_symbol": ""
  },
  "0xc2350d": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xc2350d>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  },
  "0xc23514": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xc23514>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E"
  }
}