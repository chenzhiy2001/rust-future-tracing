{
  "0x73c6": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7465": {
    "name": "Mutex<futures_channel::mpsc::SenderTask>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x803b": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8059": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8b11": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x8b11>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8b2f": {
    "name": "{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8b4d": {
    "name": "{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8b6b": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}><0x8b6b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9ced": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9d49": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9d85": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9ddf": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9e59": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9eb5": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa000": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa078": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa096": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa0b4": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa1e0": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa1fe": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa5d7": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa643": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa655": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa667": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa80d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa81f": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa831": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa843": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xae08": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xae3b": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xaf3e": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xaf7a": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xaf98": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbaf6": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbb9": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc2ff": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xda52": {
    "name": "PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xda70": {
    "name": "PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xdab5": {
    "name": "{async_block_env#0}",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe220": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe604": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe643": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe7d8": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe817": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe856": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe88c": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe8c2": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe901": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xecae": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xeced": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xed23": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xed62": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xf6a0": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xf84e": {
    "name": "{async_fn_env#0}<&str>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfafc": {
    "name": "ResponseFuture",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0xfc22": {
    "name": "{async_fn_env#0}",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfcde": {
    "name": "{async_fn_env#0}<0xfcde>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfdf6": {
    "name": "{async_fn_env#0}<0xfdf6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10589": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x10aa0": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10ac7": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10bb9": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10bc0": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10e56": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11068": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x112d0": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x112fa": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11bd3": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11d84": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11e09": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11e30": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x15291": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x15291>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15330": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x15330>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17761": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x17761>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x177dc": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x177dc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17856": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x17856>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x178b0": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0x178b0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1790c": {
    "name": "Pin<&mut core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17949": {
    "name": "Pin<&mut core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17a75": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x17a75>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17aed": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x17aed>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17b0b": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x17b0b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17b29": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x17b29>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17c55": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x17c55>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17c73": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x17c73>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1802e": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x1802e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1809a": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1809a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x180ac": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x180ac>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x180be": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x180be>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x18264": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x18264>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x18276": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x18276>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x18288": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x18288>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1829a": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1829a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1883b": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1883b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1886e": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1886e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x18971": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x18971>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x189ad": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x189ad>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x189cb": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x189cb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1950b": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x1950b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x195ce": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x195ce>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x19d14": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x19d14>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b2c6": {
    "name": "{async_block_env#0}<0x1b2c6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ba31": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1ba31>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1be15": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x1be15>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1be54": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x1be54>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1bfe9": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x1bfe9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1c028": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x1c028>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1c067": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x1c067>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1c09d": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1c09d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1c0d3": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x1c0d3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1c112": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x1c112>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1c4bf": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1c4bf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1c4fe": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1c4fe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1c534": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x1c534>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1c573": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x1c573>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ceb1": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1ceb1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1cfe4": {
    "name": "{async_fn_env#0}<&str><0x1cfe4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1d292": {
    "name": "ResponseFuture<0x1d292>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x1d3b8": {
    "name": "{async_fn_env#0}<0x1d3b8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1d474": {
    "name": "{async_fn_env#0}<0x1d474>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1d58c": {
    "name": "{async_fn_env#0}<0x1d58c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1dd1f": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x1dd1f>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x1e236": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x1e236>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e25d": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x1e25d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e34f": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x1e34f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e356": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x1e356>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e5ec": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x1e5ec>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e7fe": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x1e7fe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ea66": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1ea66>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ea90": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1ea90>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1f369": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x1f369>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1f51a": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x1f51a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1f59f": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x1f59f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1f5c6": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x1f5c6>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x27f54": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x27f54>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x27ff3": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x27ff3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a31a": {
    "name": "{async_block_env#0}<0x2a31a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a91d": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x2a91d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a995": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x2a995>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a9b3": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x2a9b3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a9d1": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x2a9d1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2aafd": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x2aafd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2ab1b": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x2ab1b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2aed6": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x2aed6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2af42": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x2af42>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2af54": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x2af54>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2af66": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x2af66>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2b10c": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x2b10c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2b11e": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x2b11e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2b130": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x2b130>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2b142": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x2b142>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2b6bf": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2b6bf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2b6f2": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x2b6f2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2b7f5": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2b7f5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2b831": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x2b831>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2b84f": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x2b84f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c38f": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x2c38f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c452": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x2c452>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2cb98": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x2cb98>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2d95b": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x2d95b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e1c2": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2e1c2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e5a6": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x2e5a6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e5e5": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x2e5e5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e77a": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x2e77a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e7b9": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x2e7b9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e7f8": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x2e7f8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e82e": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2e82e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e864": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x2e864>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e8a3": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x2e8a3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2ec50": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2ec50>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2ec8f": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x2ec8f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2ecc5": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x2ecc5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2ed04": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x2ed04>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2f642": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2f642>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2f76e": {
    "name": "{async_fn_env#0}<&str><0x2f76e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2fa1c": {
    "name": "ResponseFuture<0x2fa1c>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x2fb42": {
    "name": "{async_fn_env#0}<0x2fb42>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2fbfe": {
    "name": "{async_fn_env#0}<0x2fbfe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2fd16": {
    "name": "{async_fn_env#0}<0x2fd16>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3049b": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x3049b>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x30991": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x30991>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x309b8": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x309b8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30aaa": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x30aaa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30ab1": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x30ab1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30d47": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x30d47>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30f59": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x30f59>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x311c1": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x311c1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x311eb": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x311eb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31ac4": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x31ac4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31c75": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x31c75>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31cfa": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x31cfa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31d21": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x31d21>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x352ce": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x352ce>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x35767": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x35767>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x37789": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x37789>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x38296": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x38296>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x382d5": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x382d5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x383f5": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x383f5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x38434": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x38434>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x38473": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x38473>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x384a9": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x384a9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x384df": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x384df>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3851e": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x3851e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x388cb": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x388cb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3890a": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x3890a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x38940": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x38940>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3897f": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x3897f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39216": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x39216>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x397bc": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x397bc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x397da": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x397da>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x397f8": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x397f8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39a4f": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x39a4f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39a6d": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x39a6d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39ecc": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x39ecc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39f26": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x39f26>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39f38": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x39f38>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39f4a": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x39f4a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a0b2": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x3a0b2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a0c4": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x3a0c4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a0d6": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x3a0d6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a0e8": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x3a0e8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3b151": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x3b151>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3b214": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x3b214>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3b895": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x3b895>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3c0f1": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x3c0f1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3c14b": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x3c14b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3c169": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x3c169>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3c187": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x3c187>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3c295": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x3c295>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3c2b3": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x3c2b3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3c9e2": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x3c9e2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3ca1e": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x3ca1e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3d3e1": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x3d3e1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3d5ed": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x3d5ed>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3d833": {
    "name": "{async_block_env#0}<0x3d833>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3d982": {
    "name": "{async_fn_env#0}<&str><0x3d982>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3dc30": {
    "name": "ResponseFuture<0x3dc30>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x3dd56": {
    "name": "{async_fn_env#0}<0x3dd56>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3de12": {
    "name": "{async_fn_env#0}<0x3de12>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3df2a": {
    "name": "{async_fn_env#0}<0x3df2a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3e69b": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x3e69b>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x3eb70": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x3eb70>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3eb97": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x3eb97>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3ec89": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x3ec89>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3ec90": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x3ec90>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3ef61": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x3ef61>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3ef8b": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x3ef8b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3f5d0": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x3f5d0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3f781": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x3f781>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3f806": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x3f806>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3f82d": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x3f82d>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x448fc": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x448fc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4499b": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x4499b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4505e": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x4505e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4509a": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x4509a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x451e3": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x451e3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4525b": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x4525b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x45279": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x45279>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x45297": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x45297>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x453c3": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x453c3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x453e1": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x453e1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4579c": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x4579c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x45808": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x45808>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4581a": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x4581a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4582c": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x4582c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x459d2": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x459d2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x459e4": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x459e4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x459f6": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x459f6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x45a08": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x45a08>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x45f97": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x45f97>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x45fca": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x45fca>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x460cd": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x460cd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x46109": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x46109>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x46127": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x46127>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x46c67": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x46c67>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x46d2a": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x46d2a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x47470": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x47470>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x48774": {
    "name": "{async_block_env#0}<0x48774>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x48edf": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x48edf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x492c3": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x492c3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x49302": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x49302>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x49497": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x49497>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x494d6": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x494d6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x49515": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x49515>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4954b": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x4954b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x49581": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x49581>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x495c0": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x495c0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4996d": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x4996d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x499ac": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x499ac>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x499e2": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x499e2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x49a21": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x49a21>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4a35f": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x4a35f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4a492": {
    "name": "{async_fn_env#0}<&str><0x4a492>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4a740": {
    "name": "ResponseFuture<0x4a740>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x4a866": {
    "name": "{async_fn_env#0}<0x4a866>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4a922": {
    "name": "{async_fn_env#0}<0x4a922>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4aa3a": {
    "name": "{async_fn_env#0}<0x4aa3a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4b1cd": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x4b1cd>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x4b6e4": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x4b6e4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4b70b": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x4b70b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4b7fd": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x4b7fd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4b804": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x4b804>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4ba9a": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x4ba9a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4bcac": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x4bcac>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4bf14": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x4bf14>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4bf3e": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x4bf3e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4c817": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x4c817>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4c9c8": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x4c9c8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4ca4d": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x4ca4d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4ca74": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x4ca74>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x4f782": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x4f782>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x4f821": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x4f821>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x51be4": {
    "name": "Pin<&mut reqwest::get::{async_fn_env#0}<&str>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x51c3f": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x51c3f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x51c99": {
    "name": "Pin<&mut reqwest::async_impl::response::{impl#0}::text::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x51d29": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x51d29>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x51d5c": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x51d5c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x51e5f": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x51e5f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x51e9b": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x51e9b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x51eb9": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x51eb9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x52497": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x52497>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5250f": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x5250f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5252d": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x5252d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5254b": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x5254b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x52677": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x52677>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x52695": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x52695>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x52a5c": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x52a5c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x52ac8": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x52ac8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x52ada": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x52ada>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x52aec": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x52aec>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x52c92": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x52c92>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x52ca4": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x52ca4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x52cb6": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x52cb6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x52cc8": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x52cc8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5375a": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x5375a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5381d": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5381d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x53f63": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x53f63>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x55423": {
    "name": "{async_fn_env#0}<&str><0x55423>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x556d1": {
    "name": "ResponseFuture<0x556d1>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x557d6": {
    "name": "{async_fn_env#0}<0x557d6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x55892": {
    "name": "{async_fn_env#0}<0x55892>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x559aa": {
    "name": "{async_fn_env#0}<0x559aa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x56154": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x56154>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x56193": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x56193>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x56328": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x56328>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x56367": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x56367>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x563a6": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x563a6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x563dc": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x563dc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x56412": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x56412>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x56451": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x56451>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x567fe": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x567fe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5683d": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x5683d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x56873": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x56873>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x568b2": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x568b2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x577e4": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x577e4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x57a08": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x57a08>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x57d4b": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x57d4b>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x58262": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x58262>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x58289": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x58289>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5837b": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x5837b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x58382": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x58382>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x58618": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x58618>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5882a": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x5882a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x58a92": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x58a92>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x58abc": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x58abc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x59395": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x59395>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x59546": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x59546>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x595cb": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x595cb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x595f2": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x595f2>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x59fdc": {
    "name": "{async_block_env#0}<0x59fdc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d47c": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x5d47c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d51b": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x5d51b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5f8b2": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x5f8b2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5f9dd": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x5f9dd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5fa55": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x5fa55>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5fa73": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x5fa73>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5fa91": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x5fa91>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5fbbd": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x5fbbd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5fbdb": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x5fbdb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5ff84": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x5ff84>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5fff0": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x5fff0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x60002": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x60002>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x60014": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x60014>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x601ba": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x601ba>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x601cc": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x601cc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x601de": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x601de>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x601f0": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x601f0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x60e03": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x60e03>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x60ec6": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x60ec6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6160c": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x6160c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6215e": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6215e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x62191": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x62191>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x62294": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x62294>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x622d0": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x622d0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x622ee": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x622ee>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6318b": {
    "name": "ResponseFuture<0x6318b>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x6383f": {
    "name": "{async_fn_env#0}<&str><0x6383f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x63ff8": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x63ff8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x64376": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x64376>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x643b5": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x643b5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6454a": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x6454a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x64589": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x64589>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x645c8": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x645c8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x645fe": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x645fe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x64634": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x64634>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x64673": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x64673>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x64a20": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x64a20>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x64a5f": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x64a5f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x64a95": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x64a95>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x64ad4": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x64ad4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x653f7": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x653f7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x65715": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x65715>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x65c04": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x65c04>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x65c2b": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x65c2b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x65c99": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x65c99>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x65ca0": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x65ca0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x65f0b": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x65f0b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6611d": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x6611d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x66385": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x66385>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x663af": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x663af>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x66c88": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x66c88>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x66d17": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x66d17>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x66d9c": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x66d9c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x66dc3": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x66dc3>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x67a18": {
    "name": "Pin<&mut reqwest::async_impl::response::{impl#0}::bytes::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x67a73": {
    "name": "Pin<&mut reqwest::async_impl::response::{impl#0}::text_with_charset::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6855b": {
    "name": "{async_fn_env#0}<0x6855b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6898c": {
    "name": "{async_fn_env#0}<0x6898c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x68b3a": {
    "name": "{async_fn_env#0}<0x68b3a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6f9dc": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x6f9dc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6fa7b": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x6fa7b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x706fe": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x706fe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7071c": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}><0x7071c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x71fd7": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x71fd7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x72043": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x72043>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x72055": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x72055>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x72067": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x72067>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7220d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x7220d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7221f": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x7221f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x72231": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x72231>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x72243": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x72243>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x725df": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x725df>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7261b": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x7261b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x72693": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x72693>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x726b1": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0x726b1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x727be": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x727be>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x72836": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x72836>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x72854": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x72854>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x72872": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x72872>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7299e": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x7299e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x729bc": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x729bc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x72ed4": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x72ed4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x72f07": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x72f07>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7300a": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x7300a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x73046": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x73046>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x73064": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x73064>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x73bc2": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x73bc2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x73c85": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x73c85>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x743cb": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x743cb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x75822": {
    "name": "PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0x75822>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x75840": {
    "name": "PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>><0x75840>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7588c": {
    "name": "{async_block_env#0}<0x7588c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x75ff7": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x75ff7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x763db": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x763db>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7641a": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x7641a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x765af": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x765af>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x765ee": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x765ee>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7662d": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x7662d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x76663": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x76663>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x76699": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x76699>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x766d8": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x766d8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x76a85": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x76a85>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x76ac4": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x76ac4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x76afa": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x76afa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x76b39": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x76b39>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x77477": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x77477>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x77625": {
    "name": "{async_fn_env#0}<&str><0x77625>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x778d3": {
    "name": "ResponseFuture<0x778d3>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x779f9": {
    "name": "{async_fn_env#0}<0x779f9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x77ab5": {
    "name": "{async_fn_env#0}<0x77ab5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x77bcd": {
    "name": "{async_fn_env#0}<0x77bcd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7834c": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x7834c>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x78863": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x78863>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7888a": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x7888a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7897c": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x7897c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x78983": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x78983>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x78c19": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x78c19>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x78e2b": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x78e2b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x79093": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x79093>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x790bd": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x790bd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x79996": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x79996>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x79b47": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x79b47>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x79bcc": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x79bcc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x79bf3": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x79bf3>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x7b03a": {
    "name": "{closure_env#1}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7b052": {
    "name": "{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7b070": {
    "name": "{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7b08f": {
    "name": "{closure_env#1}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7b164": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}><0x7b164>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7b182": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x7b182>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7bcab": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x7bcab>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7bcc9": {
    "name": "{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>><0x7bcc9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7bce7": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}><0x7bce7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7bd05": {
    "name": "{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>><0x7bd05>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f4c9": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x7f4c9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7fa3a": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x7fa3a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8034d": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x8034d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8038c": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x8038c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x804ac": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x804ac>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x804eb": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x804eb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8052a": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x8052a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x80560": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x80560>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x80596": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x80596>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x805d5": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x805d5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x80982": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x80982>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x809c1": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x809c1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x809f7": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x809f7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x80a36": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x80a36>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x81415": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x81415>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x815c4": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x815c4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x819b5": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x819b5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x819d3": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x819d3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x819f1": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x819f1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x81d56": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x81d56>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x81d74": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x81d74>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x820c5": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x820c5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8211f": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x8211f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x82131": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x82131>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x82143": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x82143>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x822e1": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x822e1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x822f3": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x822f3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x82305": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x82305>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x82317": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x82317>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x832c0": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x832c0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x83383": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x83383>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x83ac9": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x83ac9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x84352": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x84352>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x843ac": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x843ac>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x843ca": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x843ca>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x843e8": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x843e8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x84514": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x84514>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x84532": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x84532>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x84e1e": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x84e1e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x84e3c": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x84e3c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x84e78": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x84e78>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x84eb4": {
    "name": "Pin<&mut core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0x84eb4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x84ed2": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0x84ed2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x84ef0": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>><0x84ef0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x84f2c": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>><0x84f2c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x84f4a": {
    "name": "Pin<&mut core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0x84f4a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x85131": {
    "name": "PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>><0x85131>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8514f": {
    "name": "PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0x8514f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x85946": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x85946>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x85b52": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x85b52>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x85cd5": {
    "name": "{async_block_env#0}<0x85cd5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x85e24": {
    "name": "{async_fn_env#0}<&str><0x85e24>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x860d2": {
    "name": "ResponseFuture<0x860d2>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x861f8": {
    "name": "{async_fn_env#0}<0x861f8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x862b4": {
    "name": "{async_fn_env#0}<0x862b4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x863cc": {
    "name": "{async_fn_env#0}<0x863cc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x86b3d": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x86b3d>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x86ff8": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x86ff8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8701f": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x8701f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x87111": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x87111>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x87118": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x87118>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x873e9": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x873e9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x87413": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x87413>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x87a65": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x87a65>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x87c16": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x87c16>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x87c9b": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x87c9b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x87cc2": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x87cc2>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x88828": {
    "name": "{closure_env#1}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0x88828>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8883b": {
    "name": "{closure_env#1}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0x8883b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8884f": {
    "name": "{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0x8884f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x88862": {
    "name": "{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0x88862>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8887b": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x888a4": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x888d9": {
    "name": "{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x888ec": {
    "name": "{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x88d6c": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}><0x88d6c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x88d80": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x88d80>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x896a5": {
    "name": "{closure_env#0}<(alloc::boxed::Box<tokio::runtime::scheduler::current_thread::Core, alloc::alloc::Global>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>), tokio::runtime::scheduler::current_thread::{impl#8}::enter::{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x896c3": {
    "name": "{closure_env#0}<(alloc::boxed::Box<tokio::runtime::scheduler::current_thread::Core, alloc::alloc::Global>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>), tokio::runtime::scheduler::current_thread::{impl#8}::enter::{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8c75c": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x8c75c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8c7fb": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x8c7fb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8dc7c": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x8dc7c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8dcf4": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x8dcf4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8dd12": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x8dd12>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8dd30": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x8dd30>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8de5c": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x8de5c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8de7a": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x8de7a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8e168": {
    "name": "NonNull<tokio_test_project::main::{async_block_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8e26b": {
    "name": "Unique<tokio_test_project::main::{async_block_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8e7fe": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x8e7fe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8e86a": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x8e86a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8e87c": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x8e87c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8e88e": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x8e88e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8ea34": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x8ea34>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8ea46": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x8ea46>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8ea58": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x8ea58>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8ea6a": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x8ea6a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8eddc": {
    "name": "PhantomData<tokio_test_project::main::{async_block_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8ef64": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x8ef64>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8ef97": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x8ef97>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8f0d6": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x8f0d6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8f112": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x8f112>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8f130": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x8f130>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x8ff8e": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x8ff8e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x90051": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x90051>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x90797": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x90797>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x919ea": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x919ea>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x91a44": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x91a44>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x91a62": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0x91a62>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x91a80": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x91a80>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x92497": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x92497>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x92f63": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x92f63>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x93417": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x93417>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x93456": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x93456>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x935eb": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x935eb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9362a": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x9362a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x93669": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x93669>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9369f": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x9369f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x936d5": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x936d5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x93714": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x93714>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x93ac1": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x93ac1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x93b00": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x93b00>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x93b36": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x93b36>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x93b75": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x93b75>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9463d": {
    "name": "{async_block_env#0}<0x9463d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x94795": {
    "name": "{async_fn_env#0}<&str><0x94795>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x94a43": {
    "name": "ResponseFuture<0x94a43>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x94b88": {
    "name": "{async_fn_env#0}<0x94b88>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x94c44": {
    "name": "{async_fn_env#0}<0x94c44>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x94d5c": {
    "name": "{async_fn_env#0}<0x94d5c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x954e8": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x954e8>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x959de": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x959de>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x95a05": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x95a05>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x95af7": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x95af7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x95afe": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x95afe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x95d94": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x95d94>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x95fa6": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x95fa6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9620e": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x9620e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x96238": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x96238>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x96b11": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x96b11>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x96cc2": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x96cc2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x96d47": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x96d47>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x96d6e": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x96d6e>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x9c03c": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::multi_thread::{impl#0}::block_on::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>, core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9c05a": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::multi_thread::{impl#0}::block_on::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>, core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9c078": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>, core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9c096": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>, core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9c0e8": {
    "name": "{closure_env#0}<(alloc::boxed::Box<tokio::runtime::scheduler::current_thread::Core, alloc::alloc::Global>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>), tokio::runtime::scheduler::current_thread::{impl#8}::enter::{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>><0x9c0e8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9c106": {
    "name": "{closure_env#0}<(alloc::boxed::Box<tokio::runtime::scheduler::current_thread::Core, alloc::alloc::Global>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>), tokio::runtime::scheduler::current_thread::{impl#8}::enter::{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>><0x9c106>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9c145": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9c158": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure#0}::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9c16b": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9c17e": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9c191": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9c1a4": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9c1b7": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9c1ca": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure#0}::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9c398": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>><0x9c398>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9c3c1": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>><0x9c3c1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9c3f0": {
    "name": "{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0x9c3f0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9c403": {
    "name": "{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0x9c403>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9deb9": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9decc": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure#0}::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9dedf": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9def2": {
    "name": "{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>><0x9def2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9df05": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9df18": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9df2b": {
    "name": "{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>><0x9df2b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9df3e": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure#0}::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa0ad7": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0xa0ad7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa0e71": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0xa0e71>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa15e7": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xa15e7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa1605": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0xa1605>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa1623": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xa1623>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa2aa8": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0xa2aa8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa2b6b": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xa2b6b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa324d": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0xa324d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa39ad": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xa39ad>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa39cb": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xa39cb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa3e2a": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xa3e2a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa3e84": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xa3e84>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa3e96": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xa3e96>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa3ea8": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xa3ea8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa4034": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xa4034>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa4046": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xa4046>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa4058": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0xa4058>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa406a": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xa406a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa447d": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xa447d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa44d7": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xa44d7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa44f5": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xa44f5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa4513": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xa4513>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa463f": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xa463f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa465d": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xa465d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa5987": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0xa5987>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa59c3": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0xa59c3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa59ff": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0xa59ff>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa5a1d": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0xa5a1d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa675e": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xa675e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa679d": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xa679d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa68bd": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0xa68bd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa68fc": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0xa68fc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa693b": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0xa693b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa6971": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xa6971>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa69a7": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0xa69a7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa69e6": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0xa69e6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa6d93": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xa6d93>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa6dd2": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xa6dd2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa6e08": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0xa6e08>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa6e47": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0xa6e47>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa7744": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xa7744>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa7899": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xa7899>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa812c": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0xa812c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa8338": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0xa8338>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa85eb": {
    "name": "{async_block_env#0}<0xa85eb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa873a": {
    "name": "{async_fn_env#0}<&str><0xa873a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa89e8": {
    "name": "ResponseFuture<0xa89e8>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0xa8b0e": {
    "name": "{async_fn_env#0}<0xa8b0e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa8bca": {
    "name": "{async_fn_env#0}<0xa8bca>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa8ce2": {
    "name": "{async_fn_env#0}<0xa8ce2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa9453": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0xa9453>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0xa9928": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xa9928>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa994f": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0xa994f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa9a41": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0xa9a41>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa9a48": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xa9a48>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa9d19": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xa9d19>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa9d43": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xa9d43>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xaa395": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0xaa395>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xaa546": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0xaa546>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xaa5cb": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xaa5cb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xaa5f2": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0xaa5f2>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xac66e": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0xac66e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xac99b": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0xac99b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xad136": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xad136>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xad190": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xad190>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xad1ae": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xad1ae>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xad1cc": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xad1cc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xad2da": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xad2da>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xad2f8": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xad2f8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xad81d": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xad81d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xad853": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xad853>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xad865": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xad865>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xad877": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xad877>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xad9df": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xad9df>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xad9f1": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xad9f1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xada03": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0xada03>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xada15": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xada15>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb00c9": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0xb00c9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb018c": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xb018c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb080d": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0xb080d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb09f2": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xb09f2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb0a10": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xb0a10>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb0e8b": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xb0e8b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb0ea9": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0xb0ea9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb0ec7": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xb0ec7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5f1c": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xb5f1c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb604a": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xb604a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb6b18": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xb6b18>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb6b57": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xb6b57>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb6c77": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0xb6c77>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb6cb6": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0xb6cb6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb6cf5": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0xb6cf5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb6d2b": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xb6d2b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb6d61": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0xb6d61>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb6da0": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0xb6da0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb714d": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xb714d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb718c": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xb718c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb71c2": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0xb71c2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb7201": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0xb7201>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb8104": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0xb8104>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb8310": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0xb8310>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb91e8": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xb91e8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb920f": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0xb920f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb9216": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0xb9216>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb921d": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xb921d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb943e": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xb943e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb9468": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xb9468>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb9aad": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0xb9aad>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc0539": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0xc0539>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc05d8": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0xc05d8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc177c": {
    "name": "{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>><0xc177c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc178f": {
    "name": "{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>><0xc178f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc18e5": {
    "name": "{closure_env#1}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0xc18e5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc18f8": {
    "name": "{closure_env#1}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0xc18f8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc190b": {
    "name": "{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0xc190b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc1929": {
    "name": "{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0xc1929>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc194c": {
    "name": "{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0xc194c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc196a": {
    "name": "{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0xc196a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc1c1c": {
    "name": "{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0xc1c1c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc1c2f": {
    "name": "{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0xc1c2f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc3ce1": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0xc3ce1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc3d5b": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0xc3d5b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc3db5": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0xc3db5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc3e11": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0xc3e11>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc3e8b": {
    "name": "Pin<&mut core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0xc3e8b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc3ee7": {
    "name": "Pin<&mut core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0xc3ee7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc4032": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xc4032>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc40aa": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xc40aa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc40c8": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xc40c8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc40e6": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xc40e6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc4212": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xc4212>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc4230": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xc4230>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc4609": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xc4609>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc4675": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xc4675>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc4687": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xc4687>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc4699": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xc4699>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc483f": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xc483f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc4851": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xc4851>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc4863": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0xc4863>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc4875": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xc4875>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc4e82": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xc4e82>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc4eb5": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xc4eb5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc4ff4": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xc4ff4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc5030": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0xc5030>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc504e": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xc504e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc5cde": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0xc5cde>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc5da1": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xc5da1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc64e7": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0xc64e7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc7cbd": {
    "name": "{async_block_env#0}<0xc7cbd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc845b": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xc845b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc88a5": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xc88a5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc88e4": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xc88e4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc8a79": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0xc8a79>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc8ab8": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0xc8ab8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc8af7": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0xc8af7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc8b2d": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xc8b2d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc8b63": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0xc8b63>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc8ba2": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0xc8ba2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc8f4f": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xc8f4f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc8f8e": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xc8f8e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc8fc4": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0xc8fc4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc9003": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0xc9003>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc99b6": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xc99b6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc9b28": {
    "name": "{async_fn_env#0}<&str><0xc9b28>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc9dd6": {
    "name": "ResponseFuture<0xc9dd6>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0xc9efc": {
    "name": "{async_fn_env#0}<0xc9efc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc9fb8": {
    "name": "{async_fn_env#0}<0xc9fb8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xca0d0": {
    "name": "{async_fn_env#0}<0xca0d0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xca863": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0xca863>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0xcad7a": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xcad7a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xcada1": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0xcada1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xcae93": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0xcae93>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xcae9a": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xcae9a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xcb130": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0xcb130>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xcb342": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0xcb342>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xcb5aa": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xcb5aa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xcb5d4": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xcb5d4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xcbead": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0xcbead>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xcc05e": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0xcc05e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xcc0e3": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xcc0e3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xcc10a": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0xcc10a>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xd31b6": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0xd31b6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd3225": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0xd3225>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd3af3": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xd3af3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd3b32": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xd3b32>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd3cc7": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0xd3cc7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd3d06": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0xd3d06>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd3d45": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0xd3d45>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd3d7b": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xd3d7b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd3db1": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0xd3db1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd3df0": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0xd3df0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd419d": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xd419d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd41dc": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xd41dc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd4212": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0xd4212>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd4251": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0xd4251>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd47e8": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xd47e8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd4874": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xd4874>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd4a17": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xd4a17>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd4a4a": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xd4a4a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd4b1a": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xd4b1a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd4b56": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0xd4b56>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd4b74": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xd4b74>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd4e28": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xd4e28>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd4ea0": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xd4ea0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd4ebe": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xd4ebe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd4edc": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xd4edc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd5008": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xd5008>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd5026": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xd5026>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd5159": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xd5159>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd51c5": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xd51c5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd51d7": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xd51d7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd51e9": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xd51e9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd538f": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xd538f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd53a1": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xd53a1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd53b3": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0xd53b3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd53c5": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xd53c5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd5ac1": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0xd5ac1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd5b84": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xd5b84>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd62ca": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0xd62ca>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd6d11": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xd6d11>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd6d38": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0xd6d38>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd6da6": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0xd6da6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd6dad": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xd6dad>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd704c": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0xd704c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd7219": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0xd7219>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd7442": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xd7442>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd746c": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xd746c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xd80d1": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0xd80d1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xdc34a": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0xdc34a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xdc35d": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}><0xdc35d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xdc82d": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}><0xdc82d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xdc856": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0xdc856>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe042d": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0xe042d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe04cc": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0xe04cc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe0b8f": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0xe0b8f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe0bcb": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0xe0bcb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe0c25": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0xe0c25>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe0c43": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0xe0c43>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe0d50": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xe0d50>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe0dc8": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xe0dc8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe0de6": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xe0de6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe0e04": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xe0e04>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe0f30": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xe0f30>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe0f4e": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xe0f4e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe1327": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xe1327>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe1393": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xe1393>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe13a5": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xe13a5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe13b7": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xe13b7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe155d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xe155d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe156f": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xe156f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe1581": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0xe1581>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe1593": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xe1593>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe1b6a": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xe1b6a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe1b9d": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xe1b9d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe1cdc": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xe1cdc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe1d18": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0xe1d18>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe1d36": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xe1d36>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe2b94": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0xe2b94>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe2c57": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xe2c57>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe339d": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0xe339d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe4a0c": {
    "name": "{async_block_env#0}<0xe4a0c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe51aa": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xe51aa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe55f4": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xe55f4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe5633": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xe5633>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe57c8": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0xe57c8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe5807": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0xe5807>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe5846": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0xe5846>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe587c": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xe587c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe58b2": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0xe58b2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe58f1": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0xe58f1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe5c9e": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xe5c9e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe5cdd": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xe5cdd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe5d13": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0xe5d13>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe5d52": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0xe5d52>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe6705": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xe6705>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe6877": {
    "name": "{async_fn_env#0}<&str><0xe6877>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe6b25": {
    "name": "ResponseFuture<0xe6b25>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0xe6c4b": {
    "name": "{async_fn_env#0}<0xe6c4b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe6d07": {
    "name": "{async_fn_env#0}<0xe6d07>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe6e1f": {
    "name": "{async_fn_env#0}<0xe6e1f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe75b2": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0xe75b2>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0xe7ac9": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xe7ac9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe7af0": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0xe7af0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe7be2": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0xe7be2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe7be9": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xe7be9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe7e7f": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0xe7e7f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe8091": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0xe8091>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe82f9": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xe82f9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe8323": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xe8323>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe8bfc": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0xe8bfc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe8dad": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0xe8dad>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe8e32": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xe8e32>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe8e59": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0xe8e59>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xe990c": {
    "name": "{async_fn_env#0}<&str><0xe990c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe9bba": {
    "name": "ResponseFuture<0xe9bba>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0xe9ce0": {
    "name": "{async_fn_env#0}<0xe9ce0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe9d9c": {
    "name": "{async_fn_env#0}<0xe9d9c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xe9eb4": {
    "name": "{async_fn_env#0}<0xe9eb4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xeb434": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0xeb434>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xeb4f7": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xeb4f7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xebc3d": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0xebc3d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xec9a9": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xec9a9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xeca21": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xeca21>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xeca3f": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xeca3f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xeca5d": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xeca5d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xecb89": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xecb89>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xecba7": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xecba7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xecf62": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xecf62>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xecfce": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xecfce>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xecfe0": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xecfe0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xecff2": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xecff2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xed198": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xed198>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xed1aa": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xed1aa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xed1bc": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0xed1bc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xed1ce": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xed1ce>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xedbaf": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xedbaf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xedbe2": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xedbe2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xedce5": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xedce5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xedd21": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0xedd21>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xedd3f": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xedd3f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xee297": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0xee297>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xeec20": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xeec20>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xef133": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xef133>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xef172": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xef172>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xef307": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0xef307>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xef346": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0xef346>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xef385": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0xef385>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xef3bb": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xef3bb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xef3f1": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0xef3f1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xef430": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0xef430>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xef7dd": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xef7dd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xef81c": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xef81c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xef852": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0xef852>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xef891": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0xef891>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xf01b4": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xf01b4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xf1d36": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0xf1d36>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xf1dd5": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0xf1dd5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xf4104": {
    "name": "{async_block_env#0}<0xf4104>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xf4492": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0xf4492>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0xf4939": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xf4939>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xf4960": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0xf4960>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xf4a52": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0xf4a52>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xf4a59": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xf4a59>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xf4cef": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0xf4cef>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xf4f01": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0xf4f01>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xf515c": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xf515c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xf5186": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xf5186>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xf5a5f": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0xf5a5f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xf5aee": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0xf5aee>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xf5b73": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xf5b73>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xf5b9a": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0xf5b9a>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xf68ed": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>><0xf68ed>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xf6916": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>><0xf6916>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xf6945": {
    "name": "{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0xf6945>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xf6958": {
    "name": "{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0xf6958>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfa953": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0xfa953>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfae22": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0xfae22>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfb9be": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0xfb9be>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfb9fd": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0xfb9fd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfbb1d": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0xfbb1d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfbb5c": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0xfbb5c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfbb9b": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0xfbb9b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfbbd1": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xfbbd1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfbc07": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0xfbc07>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfbc46": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0xfbc46>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfbff3": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xfbff3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfc032": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xfc032>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfc068": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0xfc068>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfc0a7": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0xfc0a7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfc9a4": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xfc9a4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfcaf9": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0xfcaf9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfd10c": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xfd10c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfd12a": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0xfd12a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfd148": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xfd148>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfd3db": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0xfd3db>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfd3f9": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0xfd3f9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfd858": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xfd858>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfd8b2": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xfd8b2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfd8c4": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xfd8c4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfd8d6": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xfd8d6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfda62": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xfda62>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfda74": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0xfda74>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfda86": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0xfda86>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfda98": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xfda98>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfeb2c": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0xfeb2c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xfebef": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0xfebef>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xff2d1": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0xff2d1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xffb2e": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0xffb2e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xffb88": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0xffb88>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xffba6": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0xffba6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xffbc4": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0xffbc4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xffcf0": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0xffcf0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xffd0e": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0xffd0e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x100404": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0x100404>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x100440": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x100440>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10047c": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x10047c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10049a": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x10049a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x100e24": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x100e24>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x101030": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x101030>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1012a4": {
    "name": "{async_block_env#0}<0x1012a4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1013f3": {
    "name": "{async_fn_env#0}<&str><0x1013f3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1016a1": {
    "name": "ResponseFuture<0x1016a1>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x1017c7": {
    "name": "{async_fn_env#0}<0x1017c7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x101883": {
    "name": "{async_fn_env#0}<0x101883>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10199b": {
    "name": "{async_fn_env#0}<0x10199b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10210c": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x10210c>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x1025e1": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x1025e1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x102608": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x102608>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1026fa": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x1026fa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x102701": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x102701>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1029d2": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1029d2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1029fc": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1029fc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10304e": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x10304e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1031ff": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x1031ff>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x103284": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x103284>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1032ab": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x1032ab>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x103e75": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x103e75>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x103e93": {
    "name": "{closure_env#0}<tokio_test_project::main::{async_block_env#0}><0x103e93>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x107856": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x107856>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x107dbb": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x107dbb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10812e": {
    "name": "PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0x10812e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10814c": {
    "name": "PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>><0x10814c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x108967": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x108967>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x108a2a": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x108a2a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10910f": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x10910f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10a20f": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x10a20f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10a22d": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x10a22d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10a269": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x10a269>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10a2c3": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0x10a2c3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10a2e1": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>><0x10a2e1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10a2ff": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>><0x10a2ff>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10a413": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x10a413>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10a431": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x10a431>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10a44f": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x10a44f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10a97f": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x10a97f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10a99d": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x10a99d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10aaea": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x10aaea>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10ab62": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x10ab62>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10ab80": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x10ab80>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10ab9e": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x10ab9e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10acac": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x10acac>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10acca": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x10acca>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10b0e1": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x10b0e1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10b14d": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x10b14d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10b15f": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x10b15f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10b171": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x10b171>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10b2eb": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x10b2eb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10b2fd": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x10b2fd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10b30f": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x10b30f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10b321": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x10b321>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10bec9": {
    "name": "{async_block_env#0}<0x10bec9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10c634": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x10c634>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10ca18": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x10ca18>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10ca57": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x10ca57>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10cbec": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x10cbec>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10cc2b": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x10cc2b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10cc6a": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x10cc6a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10cca0": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x10cca0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10ccd6": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x10ccd6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10cd15": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x10cd15>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10d0c2": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x10d0c2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10d101": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x10d101>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10d137": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x10d137>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10d176": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x10d176>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10dab4": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x10dab4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10dbe0": {
    "name": "{async_fn_env#0}<&str><0x10dbe0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10de8e": {
    "name": "ResponseFuture<0x10de8e>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x10dfb4": {
    "name": "{async_fn_env#0}<0x10dfb4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10e070": {
    "name": "{async_fn_env#0}<0x10e070>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10e188": {
    "name": "{async_fn_env#0}<0x10e188>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10e90d": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x10e90d>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x10edfc": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x10edfc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10ee23": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x10ee23>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10ef15": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x10ef15>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10ef1c": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x10ef1c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10f1b2": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x10f1b2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10f3c4": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x10f3c4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10f5e6": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x10f5e6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10f610": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x10f610>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10fc63": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x10fc63>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10fe14": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x10fe14>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10fe99": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x10fe99>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x10fec0": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x10fec0>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x1111b7": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>><0x1111b7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1111e0": {
    "name": "{closure_env#0}<tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>, core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>><0x1111e0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11120f": {
    "name": "{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0x11120f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x111222": {
    "name": "{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>><0x111222>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x112d16": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>>><0x112d16>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x112d29": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure#0}::{closure_env#0}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>><0x112d29>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x112d3c": {
    "name": "{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>>><0x112d3c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x112d4f": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure#0}::{closure_env#0}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>><0x112d4f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x112d62": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::future::poll_fn::PollFn<tokio::runtime::scheduler::current_thread::{impl#0}::block_on::{closure#0}::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>>>><0x112d62>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x112d75": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<tokio_test_project::main::{async_block_env#0}>><0x112d75>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x112d88": {
    "name": "{closure_env#0}<(), tokio::runtime::scheduler::current_thread::{impl#8}::block_on::{closure#0}::{closure_env#1}<core::pin::Pin<&mut tokio_test_project::main::{async_block_env#0}>>><0x112d88>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x112d9b": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<(), alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>>><0x112d9b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11530e": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x11530e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11588d": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x11588d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1159d3": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1159d3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11630b": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x11630b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11634a": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x11634a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11646a": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x11646a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1164a9": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x1164a9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1164e8": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x1164e8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11651e": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x11651e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x116554": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x116554>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x116593": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x116593>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x116940": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x116940>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11697f": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x11697f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1169b5": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x1169b5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1169f4": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x1169f4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1174a2": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1174a2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x117979": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x117979>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x117997": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x117997>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1179b5": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1179b5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x117fde": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x117fde>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x117ffc": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x117ffc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11838f": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x11838f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1183e9": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1183e9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1183fb": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1183fb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11840d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x11840d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1185ab": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1185ab>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1185bd": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1185bd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1185cf": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x1185cf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1185e1": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1185e1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11962b": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x11962b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1196ee": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1196ee>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x119dd0": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x119dd0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11a8a0": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x11a8a0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11a8fa": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x11a8fa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11a918": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x11a918>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11a936": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x11a936>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11aa62": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x11aa62>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11aa80": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x11aa80>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11b28b": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>>><0x11b28b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11b2a9": {
    "name": "Pin<alloc::boxed::Box<tokio_test_project::main::{async_block_env#0}, alloc::alloc::Global>><0x11b2a9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11b2e5": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x11b2e5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11b321": {
    "name": "Pin<&mut tokio_test_project::main::{async_block_env#0}><0x11b321>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11bcb2": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x11bcb2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11bebe": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x11bebe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11c067": {
    "name": "{async_block_env#0}<0x11c067>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11c1b6": {
    "name": "{async_fn_env#0}<&str><0x11c1b6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11c464": {
    "name": "ResponseFuture<0x11c464>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x11c58a": {
    "name": "{async_fn_env#0}<0x11c58a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11c646": {
    "name": "{async_fn_env#0}<0x11c646>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11c75e": {
    "name": "{async_fn_env#0}<0x11c75e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11cecf": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x11cecf>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x11d38a": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x11d38a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11d3b1": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x11d3b1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11d4a3": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x11d4a3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11d4aa": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x11d4aa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11d77b": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x11d77b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11d7a5": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x11d7a5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11ddf7": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x11ddf7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11dfa8": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x11dfa8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11e02d": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x11e02d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x11e054": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x11e054>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x123325": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x123325>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1233c4": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x1233c4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x12574d": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x12574d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x125780": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x125780>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x125883": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x125883>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1258bf": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x1258bf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1258dd": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1258dd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x125ebb": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x125ebb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x125f33": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x125f33>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x125f51": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x125f51>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x125f6f": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x125f6f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x12609b": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x12609b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1260b9": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1260b9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x126462": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x126462>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1264ce": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1264ce>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1264e0": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1264e0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1264f2": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x1264f2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x126698": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x126698>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1266aa": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1266aa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1266bc": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x1266bc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1266ce": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1266ce>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x127106": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x127106>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1271c9": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1271c9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x12790f": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x12790f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x128672": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x128672>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x128e73": {
    "name": "ResponseFuture<0x128e73>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x129635": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x129635>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x129674": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x129674>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x129809": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x129809>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x129848": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x129848>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x129887": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x129887>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1298bd": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1298bd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1298f3": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x1298f3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x129932": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x129932>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x129cdf": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x129cdf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x129d1e": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x129d1e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x129d54": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x129d54>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x129d93": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x129d93>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x12abf6": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x12abf6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x12ad81": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x12ad81>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x12b08c": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x12b08c>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x12b5a3": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x12b5a3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x12b5ca": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x12b5ca>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x12b638": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x12b638>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x12b63f": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x12b63f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x12b8de": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x12b8de>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x12baf0": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x12baf0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x12bd58": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x12bd58>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x12bd82": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x12bd82>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x12c65b": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x12c65b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x12c8d6": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x12c8d6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x12c95b": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x12c95b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x12c982": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x12c982>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x12f872": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x12f872>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x12f8a5": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x12f8a5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x12f987": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x131341": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x131341>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x13135f": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x13135f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x13137d": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x13137d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1315a1": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1315a1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x13161c": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x13161c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x131697": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x131697>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x131a10": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x133dd2": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x133dd2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x133e0e": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x133e0e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x133e2c": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x133e2c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x13404b": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x13440b": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x134447": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x13451f": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x13451f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x134531": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x134531>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x134543": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x134543>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1346e9": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1346e9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1346fb": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1346fb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x13470d": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x13470d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x13471f": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x13471f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x134731": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x134731>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x134863": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1352dd": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x1352dd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1353a0": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1353a0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x135baf": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x135baf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x13665f": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1366c0": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x136783": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137aad": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137acb": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137b25": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137b43": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137b61": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137b7f": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137b9d": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137bbb": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137bd9": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137bf7": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137c15": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137c33": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137c51": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137c6f": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137c8d": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137cab": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137cc9": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137ce7": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137d05": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137d23": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137d41": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137d5f": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137d7d": {
    "name": "Pin<&mut futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137d9b": {
    "name": "Pin<&mut futures_util::future::future::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137db9": {
    "name": "Pin<&mut futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137dd7": {
    "name": "Pin<&mut futures_util::future::future::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137df5": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x137e13": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x13934f": {
    "name": "Poll<core::result::Result<futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::Error>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x139d02": {
    "name": "Result<futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::Error>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x13b64a": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x13b64a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x13b719": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x13b719>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x13d13b": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x13da09": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x13da31": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h9f5b4f64f11deecbE",
    "poll_address": "000000000034e7d0"
  },
  "0x13e83f": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x13edfc": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x13ef95": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x13f11a": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x13f2ab": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x13f2ab>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x141a8e": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x141b9e": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x141c85": {
    "name": "ResponseFuture<0x141c85>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x142690": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14271e": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1427ac": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x1427ec": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14282b": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x142876": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x1428b6": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1428f5": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x142935": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x142974": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x142992": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x1429d2": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x142c9d": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x142cc4": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x142ceb": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x142d12": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x143a0f": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x143a0f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x143a2d": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x143a2d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14472a": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x14472a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x144dff": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x144dff>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1451ec": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x1451ec>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14522b": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x14522b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14526a": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x14526a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1452a0": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1452a0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1452d6": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x1452d6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x145315": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x145315>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x145877": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x145877>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x145921": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x145921>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x145957": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x145957>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x145a01": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x145a01>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x145a37": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x145a37>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x145ac2": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x145ac2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x146163": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14620d": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14d34c": {
    "name": "Weak<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, &alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14d513": {
    "name": "Weak<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), &alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14d56e": {
    "name": "Weak<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, &alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14d735": {
    "name": "Weak<futures_channel::oneshot::Inner<core::convert::Infallible>, &alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14f485": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14f502": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14f583": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x14f583>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14f605": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14f688": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14f70b": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x14f70b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14f78e": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14f811": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14f894": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14f913": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14f992": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14fa11": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14fa90": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14fb0f": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14fb8f": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x14fb8f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14fc0c": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x14fc0c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14fc89": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x14fc89>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14fd06": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x14fd06>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14fd83": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x14fd83>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14fdff": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x14fdff>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14fe7b": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x14fe7b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14fef7": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x14fef7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14ff73": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x14ff73>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x14ffef": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x14ffef>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x150070": {
    "name": "Projection<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x150097": {
    "name": "Projection<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1500be": {
    "name": "Projection<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1500e5": {
    "name": "Projection<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15010c": {
    "name": "Projection<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x150133": {
    "name": "Projection<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15015a": {
    "name": "Projection<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x150181": {
    "name": "Projection<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1501a8": {
    "name": "Projection<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1501cf": {
    "name": "Projection<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1501f6": {
    "name": "Projection<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15021d": {
    "name": "Projection<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1505e1": {
    "name": "MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x150609": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x150666": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x150684": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1506a2": {
    "name": "IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1506c1": {
    "name": "IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1506e0": {
    "name": "IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1506fe": {
    "name": "IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15071c": {
    "name": "IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15073b": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x150763": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x150790": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x150790>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x150892": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x150914": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x150d85": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x150d85>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x150fdc": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x150fdc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x151283": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x151283>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1512ad": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1512ad>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x151f66": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x151f66>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x151f91": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x151f91>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x151f98": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x151f98>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x152303": {
    "name": "ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x152375": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x152375>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15239c": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x15239c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x152406": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15242d": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x153be6": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x153c0d": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x154d9f": {
    "name": "(*mut alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>, alloc::alloc::Global)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x155318": {
    "name": "(*mut alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>, alloc::alloc::Global)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1554e7": {
    "name": "(*mut alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>, alloc::alloc::Global)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1575f5": {
    "name": "&alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x159740": {
    "name": "*mut alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15aa79": {
    "name": "&(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15b40a": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x15b40a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15b4cd": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x15b4cd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15bc7b": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x15bc7b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15c2ef": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x15c2ef>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15c350": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x15c350>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15c8b0": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x15c8b0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15cbb9": {
    "name": "Option<futures_channel::mpsc::Sender<core::convert::Infallible>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15cd3f": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15cda0": {
    "name": "Option<futures_channel::mpsc::Receiver<core::convert::Infallible>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15dec4": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15df25": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15e10b": {
    "name": "Option<futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15e5c3": {
    "name": "Option<tokio_native_tls::StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15ec8e": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x15ec8e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15ed06": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x15ed06>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15ed24": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x15ed24>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15ed42": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x15ed42>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15eeca": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x15eeca>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15eee8": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x15eee8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x15eff6": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x15eff6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x160b81": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x160b81>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x160c11": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x160c11>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x160c23": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x160c23>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x160c35": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x160c35>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x160ded": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x160ded>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x160dff": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x160dff>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x160e11": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x160e11>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x160e23": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x160e23>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x160f43": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x160f43>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x161428": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x161428>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16145b": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x16145b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1614ac": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x1614ac>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1615c4": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1615c4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x161600": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x161600>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16161e": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x16161e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16183d": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x16183d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x161d29": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x161d29>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x161d65": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x161d65>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x161d83": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x161d83>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x161da1": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x161ddd": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x161eb4": {
    "name": "Pin<&mut futures_channel::oneshot::Receiver<core::convert::Infallible>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x161f0f": {
    "name": "Pin<&mut futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x161f4c": {
    "name": "Pin<&mut futures_util::future::select::Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x161f89": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::connect::{async_block_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x161fc6": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x161fe4": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x162020": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::dns::resolve::{async_fn_env#0}<reqwest::dns::resolve::DynResolver>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16205d": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#18}::connect::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16209a": {
    "name": "Pin<&mut tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1620d7": {
    "name": "Pin<&mut tokio::time::timeout::Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x162132": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x162132>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x162150": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16216e": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16218c": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1621aa": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::future::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1621c8": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::future::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1621e6": {
    "name": "Pin<alloc::boxed::Box<hyper::proto::h2::client::H2ClientFuture<reqwest::async_impl::body::Body, reqwest::connect::sealed::Conn>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x162204": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x162222": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x162240": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16227c": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1622b8": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1622d6": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1622f4": {
    "name": "Pin<&mut tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x162312": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x162330": {
    "name": "Pin<&mut hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16234e": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16236c": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16238a": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::connect::http::{impl#4}::call::{async_block_env#0}<reqwest::dns::resolve::DynResolver>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1623a8": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#5}::call_async::{async_fn_env#0}<reqwest::dns::resolve::DynResolver>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x162421": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::net::tcp::stream::{impl#0}::connect_mio::{async_fn#0}::{closure_env#0}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16245e": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16247c": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16249a": {
    "name": "Pin<&mut reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1624b8": {
    "name": "Pin<&mut tokio::time::timeout::Timeout<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1624d6": {
    "name": "Pin<&mut reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1624f4": {
    "name": "Pin<&mut tokio::time::timeout::Timeout<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x162512": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x162530": {
    "name": "Pin<&mut tower::util::map_err::MapErrFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16254e": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16256c": {
    "name": "Pin<&mut tower::util::map_err::MapErrFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16258a": {
    "name": "Pin<alloc::boxed::Box<reqwest::dns::gai::{impl#2}::resolve::{async_block_env#0}, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1625a8": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::dns::GaiFuture>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x163484": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, hyper_util::client::legacy::connect::http::ConnectError>, hyper_util::client::legacy::connect::http::connect::{async_block_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x164649": {
    "name": "<hyper_util::rt::tokio::TokioExecutor as hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x164972": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x164972>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16499a": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x16499a>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h9f5b4f64f11deecbE",
    "poll_address": "000000000034e7d0"
  },
  "0x166f82": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x166f82>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16790e": {
    "name": "{async_block_env#0}<reqwest::dns::resolve::DynResolver>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x167b49": {
    "name": "{async_fn_env#0}<reqwest::dns::resolve::DynResolver>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x168242": {
    "name": "{async_fn_env#0}<0x168242>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x168859": {
    "name": "{async_fn_env#0}<0x168859>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1691e3": {
    "name": "{async_block_env#0}<0x1691e3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1695a8": {
    "name": "{async_fn_env#0}<reqwest::dns::resolve::DynResolver><0x1695a8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x169732": {
    "name": "GaiFuture",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x169d55": {
    "name": "<hyper_util::common::exec::Exec as hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x169d97": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x169d97>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x169dd6": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x169dd6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x169ef6": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x169ef6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x169f35": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x169f35>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x169f74": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x169f74>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x169faa": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x169faa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x169fe0": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x169fe0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16a01f": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x16a01f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16a402": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x16a402>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16a441": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x16a441>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16a477": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x16a477>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16a4b6": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x16a4b6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16a8c7": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x16a8c7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16a906": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x16a906>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16bcba": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x16bcba>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16c0f7": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x16c0f7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16d59c": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x16d59c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16d5a3": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x16d5a3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16d5f7": {
    "name": "<hyper_util::client::legacy::pool::IdleTask<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x16d83b": {
    "name": "{async_fn_env#0}<0x16d83b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16d9c4": {
    "name": "{async_fn_env#0}<0x16d9c4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16dda1": {
    "name": "{async_block_env#0}<0x16dda1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16e862": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x16e862>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16e9fb": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x16e9fb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16eb2a": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x16eb2a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16ecbb": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x16ecbb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16f68a": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x16f68a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x16f946": {
    "name": "H2ClientFuture<reqwest::async_impl::body::Body, reqwest::connect::sealed::Conn>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1716e5": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x1716e5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x171784": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x171784>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x172324": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x172324>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x172536": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x172536>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17297c": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x17297c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1729a6": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1729a6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x174336": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x174336>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x174446": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x174446>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17452d": {
    "name": "ResponseFuture<0x17452d>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x176981": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1769ed": {
    "name": "Timeout<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x176a5a": {
    "name": "Timeout<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x176acc": {
    "name": "Projection<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x176af6": {
    "name": "Projection<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x176b20": {
    "name": "Projection<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x176d2c": {
    "name": "{closure_env#0}<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x176d4a": {
    "name": "{closure_env#0}<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x176d68": {
    "name": "{closure_env#0}<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1782ff": {
    "name": "{async_fn_env#0}<0x1782ff>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17841c": {
    "name": "{async_fn_env#0}<0x17841c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x178ee3": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x178ee3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x178f2e": {
    "name": "<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x178f66": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x178f66>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x178f8d": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x178f8d>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x178fa7": {
    "name": "<futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x178fee": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x178fee>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x179016": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x179016>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x179043": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x179043>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1790c6": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1790c6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x179149": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x179149>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1791cb": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1791cb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17924e": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x17924e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1792d1": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1792d1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x179354": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x179354>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1793d3": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1793d3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x179452": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x179452>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1794d1": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1794d1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x179550": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x179550>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1795cf": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x1795cf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17964f": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x17964f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x179677": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x179677>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17969e": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x17969e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1796c6": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1796c6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1796ee": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1796ee>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x179715": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x179715>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17973c": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x17973c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x179763": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x179763>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1797d6": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x1797d6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1797fd": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x1797fd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x179857": {
    "name": "IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>><0x179857>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1798b3": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x1798b3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17990e": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x17990e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x179969": {
    "name": "IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x179969>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1799c5": {
    "name": "IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>><0x1799c5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x179c00": {
    "name": "Projection<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x179c78": {
    "name": "Projection<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x179c96": {
    "name": "Projection<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x179cb4": {
    "name": "Projection<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x179cd3": {
    "name": "IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>><0x179cd3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x179d2e": {
    "name": "IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x179d2e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x179d8a": {
    "name": "MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x179d8a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x179db2": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x179db2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x179e0a": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x179e0a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x179e32": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x179e32>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x179e5f": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x179e5f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x179fed": {
    "name": "MapErr<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17a014": {
    "name": "MapErr<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17a041": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x17a041>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17a0c3": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x17a0c3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17a1c4": {
    "name": "Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut tokio::time::sleep::Sleep>), ((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17a243": {
    "name": "Either<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17a32f": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17a356": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17a467": {
    "name": "StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17a609": {
    "name": "<futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x17ad20": {
    "name": "MapErrFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17ad9b": {
    "name": "Projection<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17adc2": {
    "name": "Projection<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17adea": {
    "name": "MapErrFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17b280": {
    "name": "MapFuture<tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17b2b3": {
    "name": "MapFuture<tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17b2f2": {
    "name": "ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x17b2f2>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x17b363": {
    "name": "Projection<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x17b363>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17b59a": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x17b59a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17b5c1": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x17b5c1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17b5c8": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x17b5c8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17b5ef": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x17b5ef>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x17b64a": {
    "name": "<futures_util::future::future::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x17b6e7": {
    "name": "<futures_util::future::future::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x17b732": {
    "name": "<futures_util::future::future::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x17b77d": {
    "name": "<hyper::proto::h2::client::H2ClientFuture<reqwest::async_impl::body::Body, reqwest::connect::sealed::Conn> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x17bd82": {
    "name": "<hyper_util::client::legacy::connect::http::{impl#4}::call::{async_block_env#0}<reqwest::dns::resolve::DynResolver> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x17be0c": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17be33": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x17c3bd": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17c3f9": {
    "name": "((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17c417": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17c9ec": {
    "name": "<reqwest::dns::gai::{impl#2}::resolve::{async_block_env#0} as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x17ed13": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x17ed3a": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x1822b6": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1822dd": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x182398": {
    "name": "{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1824d4": {
    "name": "{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x182602": {
    "name": "StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x182629": {
    "name": "StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x182737": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x18275e": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x185b7c": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x185b7c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x185c3f": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x185c3f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x186350": {
    "name": "Option<futures_channel::lock::TryLock<core::option::Option<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1863b1": {
    "name": "Option<futures_channel::lock::TryLock<core::option::Option<core::convert::Infallible>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x186536": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>><0x186536>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x186df2": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x186df2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x187768": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x187768>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x187a17": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x187a17>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x187a78": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x187a78>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x188425": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x188425>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x188443": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x188443>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x188461": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x188461>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x18858d": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x18858d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x188641": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x188641>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x18867d": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x18867d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x18869b": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x18869b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x188c1b": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x188c1b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x188c2d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x188c2d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x188c3f": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x188c3f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x188da7": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x188da7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x188e25": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x188e25>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x188e7f": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x188e7f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x188e91": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x188e91>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x188ea3": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x188ea3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x188eb5": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x188eb5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x189281": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x189281>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x18929f": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x18929f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1892db": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x1892db>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x189757": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x189757>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x189775": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x189775>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x189793": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x189793>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1898e0": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x1898e0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x18c794": {
    "name": "Result<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, futures_channel::oneshot::Canceled>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x18ea58": {
    "name": "Result<(h2::client::ResponseFuture, h2::share::SendStream<hyper::proto::h2::SendBuf<bytes::bytes::Bytes>>), h2::error::Error>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x18ecd2": {
    "name": "Result<futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::Error><0x18ecd2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x194829": {
    "name": "Result<hyper_util::client::legacy::connect::http::connect::{async_block_env#0}, hyper_util::client::legacy::connect::http::ConnectError>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x195fcd": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, hyper_util::client::legacy::connect::http::ConnectError>, hyper_util::client::legacy::connect::http::connect::{async_block_env#0}><0x195fcd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1986ea": {
    "name": "Poll<core::result::Result<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, futures_channel::oneshot::Canceled>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x198930": {
    "name": "Poll<(core::option::Option<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x199b60": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x199b60>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x19ae21": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x19ae21>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x19b9aa": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x19b9aa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x19b9e9": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x19b9e9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x19ba28": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x19ba28>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x19ba5e": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x19ba5e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x19ba94": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x19ba94>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x19bad3": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x19bad3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x19be41": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x19be41>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x19be80": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x19be80>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x19c08a": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x19c08a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x19c0c9": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x19c0c9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x19c1b3": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x19c1b3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x19c1f2": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x19c1f2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x19c228": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x19c228>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x19c267": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x19c267>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x19c6f9": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x19c6f9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x19ea63": {
    "name": "ResponseFuture<0x19ea63>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x19eb22": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x19eb22>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x19ec32": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x19ec32>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x19fe12": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x19fe12>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1a0227": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x1a0227>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1a0abb": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x1a0abb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1a1bf5": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x1a1bf5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1a1d8e": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x1a1d8e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1a1ee5": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x1a1ee5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1a2076": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x1a2076>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1a2b01": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x1a2b01>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1a3b3a": {
    "name": "{async_fn_env#0}<0x1a3b3a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1a3c20": {
    "name": "{async_fn_env#0}<0x1a3c20>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1a6d9b": {
    "name": "{async_block_env#0}<0x1a6d9b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1a73ab": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x1a73ab>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1a9410": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x1a9410>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1a961c": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x1a961c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1aa4e7": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1aa4e7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1aa511": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1aa511>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ab5fc": {
    "name": "(core::option::Option<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ad44b": {
    "name": "(h2::client::ResponseFuture, h2::share::SendStream<hyper::proto::h2::SendBuf<bytes::bytes::Bytes>>)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ad562": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x1ad562>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ad7ce": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x1ad7ce>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ad7d5": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x1ad7d5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ad8f4": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x1ad8f4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1add78": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x1add78>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1add9f": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x1add9f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b1d14": {
    "name": "<hashbrown::raw::{impl#8}::reserve_rehash::{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::map::make_hasher::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState>> as core::ops::function::Fn<(&mut hashbrown::raw::RawTableInner, usize)>>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x1b1d91": {
    "name": "{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::map::make_hasher::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b2656": {
    "name": "{closure_env#1}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::map::make_hasher::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b2a51": {
    "name": "{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::rustc_entry::{impl#0}::rustc_entry::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b2a6f": {
    "name": "{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), (http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b450b": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x1b450b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b538d": {
    "name": "Bucket<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b54af": {
    "name": "RawIter<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b54d9": {
    "name": "RawIterRange<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b60f0": {
    "name": "{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b6168": {
    "name": "{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), (http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b621d": {
    "name": "{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b6ad8": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x1b6ad8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b729b": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1b729b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b730c": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1b730c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b743c": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x1b743c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b747b": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x1b747b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b74ba": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x1b74ba>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b74f0": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1b74f0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b7526": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x1b7526>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b7565": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x1b7565>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b78d3": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1b78d3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b7912": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1b7912>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b7b17": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1b7b17>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b7b35": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1b7b35>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b7b53": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x1b7b53>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b7c7f": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1b7c7f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b7cf8": {
    "name": "NonNull<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b9cfd": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1b9cfd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b9d0f": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1b9d0f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b9d21": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x1b9d21>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b9e91": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1b9e91>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b9ea3": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1b9ea3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1b9eb5": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x1b9eb5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ba5f9": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1ba5f9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ba62c": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1ba62c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ba6fc": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1ba6fc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ba738": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x1ba738>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ba756": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1ba756>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1bab0d": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x1bab0d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1babd0": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1babd0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1bb772": {
    "name": "Option<hashbrown::raw::Bucket<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1bbb43": {
    "name": "Option<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1bdffc": {
    "name": "<hashbrown::raw::{impl#8}::find::{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::rustc_entry::{impl#0}::rustc_entry::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global>> as core::ops::function::FnMut<(usize)>>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x1be059": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x1be059>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1be218": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1be218>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1be242": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1be242>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1c0316": {
    "name": "<hashbrown::raw::{impl#8}::find::{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), (http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>> as core::ops::function::FnMut<(usize)>>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x1d0b76": {
    "name": "(((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), hashbrown::raw::InsertSlot)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1d3afc": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x1d3afc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1d4cce": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x1d4cce>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1d4e67": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x1d4e67>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1d4f96": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x1d4f96>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1d5127": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x1d5127>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1d6b4c": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x1d6b4c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1d6c5c": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x1d6c5c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1d6d43": {
    "name": "ResponseFuture<0x1d6d43>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x1d83ce": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x1d83ce>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1d846d": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x1d846d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1d8f22": {
    "name": "{async_fn_env#0}<0x1d8f22>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1d90b9": {
    "name": "{async_block_env#0}<0x1d90b9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1d932c": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x1d932c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1dada0": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x1dada0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1dadc8": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x1dadc8>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h9f5b4f64f11deecbE",
    "poll_address": "000000000034e7d0"
  },
  "0x1daf6c": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x1daf6c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1dd13a": {
    "name": "{async_fn_env#0}<0x1dd13a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1dd220": {
    "name": "{async_fn_env#0}<0x1dd220>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1dd8a1": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x1dd8a1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1dd8bf": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x1dd8bf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1dd8dd": {
    "name": "Pin<&mut futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1dd8fb": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x1dd8fb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1dd919": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1dd919>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1dd994": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x1dd994>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1dd9b2": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1dd9d0": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x1dd9d0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1dd9ee": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>><0x1dd9ee>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1dda0c": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x1dda0c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1dda2a": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>><0x1dda2a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1dda48": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x1dda48>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1dda66": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x1dda66>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1dda84": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ddaa2": {
    "name": "Pin<&mut futures_util::future::future::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x1ddaa2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ddac0": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ddade": {
    "name": "Pin<&mut futures_util::future::try_future::try_flatten::TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ddafc": {
    "name": "Pin<&mut futures_util::future::try_future::TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ddb1a": {
    "name": "Pin<&mut futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ddbf0": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x1ddbf0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ddc0e": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x1ddc0e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ddc2c": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}><0x1ddc2c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ddca4": {
    "name": "Pin<&mut futures_util::future::select::Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>>><0x1ddca4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ddcc2": {
    "name": "Pin<&mut futures_util::future::select::Select<hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ddce0": {
    "name": "Pin<&mut futures_util::future::select::Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ddd3c": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1ddd3c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ddd84": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1ddd84>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1dde08": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x1dde08>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1dde87": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1dde87>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ddee1": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x1ddee1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ddeff": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1ddeff>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1de448": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x1de448>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1de5cf": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1de5cf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1de5ed": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1de5ed>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1de60b": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x1de60b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1dea61": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1dea61>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1dea7f": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1dea7f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1dea9d": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x1dea9d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1deb51": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x1deb51>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1deca1": {
    "name": "NonNull<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1df370": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1df370>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1df382": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1df382>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1df394": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x1df394>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1df8f4": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1df8f4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1df906": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1df906>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1df918": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x1df918>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1df92a": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1df92a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1df93c": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x1df93c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1df9f0": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x1df9f0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e02f7": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x1e02f7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e03ba": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1e03ba>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e18f2": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x1e18f2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e1f02": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1e1f02>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e1f63": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x1e1f63>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e21ab": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x1e21ab>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e25df": {
    "name": "Option<&mut futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e278c": {
    "name": "Option<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e2971": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)><0x1e2971>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e29d2": {
    "name": "Option<futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1e29d2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e2a33": {
    "name": "Option<(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e2a97": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x1e2a97>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e346d": {
    "name": "Poll<core::result::Result<futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::Error>><0x1e346d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e3715": {
    "name": "Poll<futures_util::future::either::Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut tokio::time::sleep::Sleep>), ((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e3776": {
    "name": "Poll<futures_util::future::either::Either<(core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::pool::Error>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>), (core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>, hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>)>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e37da": {
    "name": "Poll<futures_util::future::either::Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>), (core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e42ef": {
    "name": "Result<futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::Error><0x1e42ef>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e52bf": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, hyper_util::client::legacy::connect::http::ConnectError>, hyper_util::client::legacy::connect::http::connect::{async_block_env#0}><0x1e52bf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e832d": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1e832d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e85a2": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x1e85a2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e85e1": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x1e85e1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e8620": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x1e8620>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e8656": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1e8656>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e868c": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x1e868c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e86cb": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x1e86cb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e94f7": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1e94f7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e9536": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1e9536>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e956c": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x1e956c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e95ab": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x1e95ab>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e95e1": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x1e95e1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e9620": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x1e9620>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e98d2": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x1e98d2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e9911": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x1e9911>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e9c59": {
    "name": "Dropper<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e9c7d": {
    "name": "{closure_env#0}<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global, hyper_util::client::legacy::pool::{impl#6}::clean_waiters::{closure_env#0}<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1e9ced": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x1e9ced>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ea5a3": {
    "name": "Dropper<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1ea5a3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1eb321": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x1eb321>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1eb572": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x1eb572>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1eb8fb": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1eb8fb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1eb925": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1eb925>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ec814": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1ec814>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ec912": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x1ec912>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ec930": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ec930>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ec94e": {
    "name": "IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>><0x1ec94e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ec96d": {
    "name": "IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>><0x1ec96d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ec98b": {
    "name": "IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x1ec98b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ec9a9": {
    "name": "IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x1ec9a9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ec9c8": {
    "name": "IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>><0x1ec9c8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ec9ec": {
    "name": "Projection<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1eca61": {
    "name": "Projection<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}><0x1eca61>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1eca88": {
    "name": "Projection<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}><0x1eca88>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ecaaf": {
    "name": "Projection<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ecafd": {
    "name": "Projection<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ecb24": {
    "name": "Projection<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ecbd2": {
    "name": "MapErr<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}><0x1ecbd2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ecc4e": {
    "name": "MapErr<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}><0x1ecc4e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1eccca": {
    "name": "MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1eccca>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ecd47": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1ecd47>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ecddf": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x1ecddf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ece5c": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x1ece5c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ecf8b": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ecf8b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ecfb7": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ecfb7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ed039": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ed039>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ed0bc": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ed0bc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ed13f": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x1ed13f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ed1be": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x1ed1be>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ed23d": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ed23d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ed2c0": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ed2c0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ed33f": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1ed33f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ed3c2": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1ed3c2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ed441": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1ed441>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ed4c5": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ed4c5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ed4ed": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ed4ed>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ed515": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x1ed515>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ed53c": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x1ed53c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ed563": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ed563>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ed58b": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x1ed58b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ed6bd": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1ed6bd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ed6e5": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1ed6e5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ed70c": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x1ed70c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ed73a": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x1ed73a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ed7bc": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x1ed7bc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ed83b": {
    "name": "Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut tokio::time::sleep::Sleep>), ((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x1ed83b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ed8ba": {
    "name": "Either<(core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::pool::Error>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>), (core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>, hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ed93c": {
    "name": "Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>), (core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ede4a": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>><0x1ede4a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ede71": {
    "name": "Select<hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ede99": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>><0x1ede99>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ef13b": {
    "name": "ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x1ef13b>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x1ef462": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x1ef462>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ef489": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x1ef489>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ef647": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x1ef647>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ef66e": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x1ef66e>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x1ef724": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x1ef724>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ef74f": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x1ef74f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1ef756": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x1ef756>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1f3973": {
    "name": "(&mut [futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>], &mut [futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>])",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h2e71021a18a94d6fE",
    "poll_address": "00000000004138f0"
  },
  "0x1f3991": {
    "name": "&mut [futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>]",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h2e71021a18a94d6fE",
    "poll_address": "00000000004138f0"
  },
  "0x1f39f9": {
    "name": "*mut [futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>]",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h2e71021a18a94d6fE",
    "poll_address": "00000000004138f0"
  },
  "0x1f60e5": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x1f60e5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1f610c": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x1f610c>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x1f65ed": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)<0x1f65ed>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1f6687": {
    "name": "(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1f66a6": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x1f66a6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1f6828": {
    "name": "((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x1f6828>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1f6846": {
    "name": "(core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::pool::Error>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1f6883": {
    "name": "(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1f7017": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x1f7017>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x1f929b": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1f929b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1f92ce": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1f92ce>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1f93fb": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x1f93fb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1f9437": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x1f9437>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1f9455": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x1f9455>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1f9a70": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x1f9a70>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1f9ae8": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1f9ae8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1f9b06": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1f9b06>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1f9b24": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x1f9b24>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1f9c50": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1f9c50>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1f9c6e": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1f9c6e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fa604": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x1fa604>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fa670": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x1fa670>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fa682": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x1fa682>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fa694": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x1fa694>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fa83a": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x1fa83a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fa84c": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x1fa84c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fa85e": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x1fa85e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fa870": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x1fa870>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fb53e": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x1fb53e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fb601": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x1fb601>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fbd47": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x1fbd47>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fc8ab": {
    "name": "Option<tokio_native_tls::StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>><0x1fc8ab>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fdac2": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fdafe": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x1fdafe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fdb1c": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global>><0x1fdb1c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fdb3a": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::rt::io::read::{async_fn#0}::{closure_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fdb77": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::rt::io::write_all::{async_fn#0}::{closure_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fdbb4": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x1fdbb4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fdbd2": {
    "name": "Pin<&mut futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fdc2f": {
    "name": "Pin<&mut tower_http::follow_redirect::ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fdc4d": {
    "name": "Pin<alloc::boxed::Box<reqwest::async_impl::client::{impl#0}::call::{async_block_env#0}, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fdc6b": {
    "name": "Pin<&mut hyper_util::client::legacy::client::ResponseFuture>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fdcc6": {
    "name": "Pin<&mut reqwest::async_impl::client::ResponseFuture>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fdd7d": {
    "name": "Pin<&reqwest::async_impl::client::ResponseFuture>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fde14": {
    "name": "Pin<&mut reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}><0x1fde14>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fde8e": {
    "name": "Pin<&mut tokio_native_tls::{impl#12}::connect::{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fdecb": {
    "name": "Pin<&mut tokio::time::timeout::Timeout<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>><0x1fdecb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fdf08": {
    "name": "Pin<&mut reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}><0x1fdf08>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fdf45": {
    "name": "Pin<&mut tokio::time::timeout::Timeout<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>><0x1fdf45>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fdf82": {
    "name": "Pin<alloc::boxed::Box<reqwest::connect::with_timeout::{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fdfa0": {
    "name": "Pin<alloc::boxed::Box<reqwest::connect::with_timeout::{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fdfbe": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x1fdfbe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fdfdc": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x1fdfdc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fdffa": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x1fdffa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fe018": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fe036": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::connect::dns::resolve::{async_fn#0}::{closure_env#0}<reqwest::dns::resolve::DynResolver>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x1fe054": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x201eda": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x201eda>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x202417": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x202417>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x202456": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x202456>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2025eb": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x2025eb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x20262a": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x20262a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x202669": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x202669>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x20269f": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x20269f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2026d5": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x2026d5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x202714": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x202714>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x202ac1": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x202ac1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x202b00": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x202b00>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x202b36": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x202b36>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x202b75": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x202b75>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x20360f": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x20360f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x203cf1": {
    "name": "<reqwest::async_impl::client::{impl#0}::call::{async_block_env#0} as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x203d42": {
    "name": "{async_block_env#0}<0x203d42>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x204b0e": {
    "name": "ResponseFuture<0x204b0e>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x206742": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x206865": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x206d03": {
    "name": "{async_fn_env#0}<0x206d03>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x20708e": {
    "name": "{async_fn_env#0}<0x20708e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2085ef": {
    "name": "ResponseFuture<0x2085ef>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x208e2d": {
    "name": "SyncWrapper<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x209408": {
    "name": "{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2096ea": {
    "name": "{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x2096ea>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x20a089": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x20a089>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x20a158": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x20a158>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x20bcda": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x20bcda>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x20bd01": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x20bd01>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x20bd6f": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x20bd6f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x20bd76": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x20bd76>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x20c8ee": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x20c8ee>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x20cb45": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x20cb45>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x20cddf": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x20cddf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x20ce09": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x20ce09>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x210bb7": {
    "name": "Timeout<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}><0x210bb7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x210be2": {
    "name": "Timeout<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}><0x210be2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x210f9a": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x210f9a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x210fd2": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x210ff9": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x211724": {
    "name": "<reqwest::connect::with_timeout::{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x211d6b": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x211d6b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x211d92": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x211d92>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x211dac": {
    "name": "<reqwest::connect::with_timeout::{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x211e5d": {
    "name": "{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x211e5d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x211f99": {
    "name": "{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x211f99>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2120c7": {
    "name": "StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x2120c7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2120ee": {
    "name": "StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x2120ee>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x212216": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global><0x212216>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21223d": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)<0x21223d>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x212980": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x212980>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x212abc": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x212abc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x212ae8": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x212ae8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x212b67": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x212b67>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x212be7": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x212be7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x212cc7": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x212cc7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x212cee": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x212cee>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x216c71": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x216c71>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x216c98": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x216c98>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x216cfa": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x216cfa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x216d21": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x216d21>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x2172b3": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2172b3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2172db": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2172db>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h9f5b4f64f11deecbE",
    "poll_address": "000000000034e7d0"
  },
  "0x217864": {
    "name": "{async_fn_env#0}<0x217864>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2179ce": {
    "name": "{async_block_env#0}<0x2179ce>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x217ecb": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x217ecb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2189d6": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x2189d6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x218a15": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x218a15>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x218a54": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x218a54>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x218a8a": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x218a8a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x218ac0": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x218ac0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x218aff": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x218aff>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x219080": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x219080>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2190bf": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x2190bf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2190f5": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x2190f5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x219134": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x219134>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21916a": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x21916a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2191a9": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x2191a9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x219248": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x219248>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x219287": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x219287>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21a6fa": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x21a6fa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21aa82": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x21aa82>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21b22e": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x21b22e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21b24c": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x21b24c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21b26a": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x21b26a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21b40e": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x21b40e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21b42c": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x21b42c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21b44a": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x21b44a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21b486": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x21b486>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21bc17": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x21bc17>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21bc35": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x21bc35>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21bc7d": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x21bc7d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21bd62": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x21bd62>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21bd9e": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x21bd9e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21bdf8": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x21bdf8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21be16": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x21be16>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21c821": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x21c821>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21c833": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x21c833>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21c845": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x21c845>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21ca69": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x21ca69>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21ca7b": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x21ca7b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21ca8d": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x21ca8d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21ca9f": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x21ca9f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21cab1": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x21cab1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21cae7": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x21cae7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21dbce": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x21dbce>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21dc91": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x21dc91>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21e6e8": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x21e6e8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21e749": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x21e749>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21e990": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x21e990>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21ebd6": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x21ebd6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21f79f": {
    "name": "Option<tokio_native_tls::StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>><0x21f79f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x21f8d0": {
    "name": "Option<tokio_native_tls::StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x220068": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>><0x220068>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2200c9": {
    "name": "Option<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x2200c9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x22012b": {
    "name": "Option<futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x22012b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x22086c": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)><0x22086c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2208cd": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x2208cd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x22092e": {
    "name": "Option<(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)><0x22092e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x220992": {
    "name": "Option<futures_channel::mpsc::Sender<core::convert::Infallible>><0x220992>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2217aa": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x2217aa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x221880": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x221880>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2218fa": {
    "name": "Pin<&mut tokio_native_tls::handshake::{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x221937": {
    "name": "Pin<&mut tokio_native_tls::handshake::{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2219ee": {
    "name": "Pin<&mut tokio_native_tls::StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x221a87": {
    "name": "Pin<&mut tokio_native_tls::StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x221b20": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x221b20>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x221b7c": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x221b7c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x223e1f": {
    "name": "Pin<&mut futures_util::stream::stream::into_future::StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x223eb9": {
    "name": "Pin<&futures_util::stream::stream::into_future::StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x223ef6": {
    "name": "Pin<&mut futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x223ef6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x223f33": {
    "name": "Pin<&futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x22415b": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x22415b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2242ca": {
    "name": "Pin<&reqwest::async_impl::client::ResponseFuture><0x2242ca>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2244f2": {
    "name": "Pin<&mut futures_channel::mpsc::Receiver<core::convert::Infallible>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x22456d": {
    "name": "Pin<&futures_channel::mpsc::Receiver<core::convert::Infallible>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x224662": {
    "name": "Pin<&mut futures_channel::oneshot::Receiver<core::convert::Infallible>><0x224662>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x22469f": {
    "name": "Pin<&futures_channel::oneshot::Receiver<core::convert::Infallible>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x224941": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x22497e": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x22497e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2249da": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2249f8": {
    "name": "Pin<&mut core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x224a35": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}><0x224a35>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x224ace": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x224b0b": {
    "name": "Pin<&mut hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x224b29": {
    "name": "Pin<&mut core::pin::Pin<&mut futures_util::stream::stream::into_future::StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x224b66": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x224ba3": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global>><0x224ba3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x224bff": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x224c1d": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x224c1d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x224c5a": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x224c78": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global>>><0x224c78>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x224cb5": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global>><0x224cb5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x224d11": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x224d6c": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x224da9": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=()> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x224e60": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x224e9d": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x224f54": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x22502a": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x225067": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x225067>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2250c3": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2250e1": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2250e1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x225199": {
    "name": "Pin<&mut futures_util::future::poll_fn::PollFn<hyper::client::conn::http2::{impl#1}::ready::{async_fn#0}::{closure_env#0}<reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2251f5": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::rt::io::write_all::{async_fn#0}::{closure_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>><0x2251f5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x225251": {
    "name": "Pin<&mut futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x225365": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::rt::io::read::{async_fn#0}::{closure_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>><0x225365>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x22558d": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x22558d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x225645": {
    "name": "Pin<&mut futures_util::future::select::Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>>><0x225645>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2256a1": {
    "name": "Pin<&mut core::option::Option<futures_channel::oneshot::Sender<core::convert::Infallible>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2257b5": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::connect::dns::resolve::{async_fn#0}::{closure_env#0}<reqwest::dns::resolve::DynResolver>>><0x2257b5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x225a95": {
    "name": "Pin<&mut futures_util::future::select::Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>><0x225a95>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x225b4d": {
    "name": "Pin<&mut futures_util::future::poll_fn::PollFn<hyper::client::conn::http1::{impl#1}::ready::{async_fn#0}::{closure_env#0}<reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x225c05": {
    "name": "Pin<&mut futures_util::future::select::Select<hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>><0x225c05>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x225c61": {
    "name": "Pin<&mut core::option::Option<futures_channel::mpsc::Sender<core::convert::Infallible>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x225e48": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x225e84": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x225efe": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x225f3b": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x225f78": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x225fb5": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x225ff1": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x22600f": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x22604b": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x226087": {
    "name": "ManuallyDrop<hyper_util::common::lazy::Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2260c4": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x22611e": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x22615b": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2267c5": {
    "name": "Poll<(core::option::Option<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)><0x2267c5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2280ad": {
    "name": "Result<futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::Error><0x2280ad>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x228c31": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, hyper_util::client::legacy::connect::http::ConnectError>, hyper_util::client::legacy::connect::http::connect::{async_block_env#0}><0x228c31>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x22ae02": {
    "name": "ResponseFuture<0x22ae02>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x22c989": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x22c989>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x22ca4f": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x22ca4f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x230e70": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x230e70>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x230f80": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x230f80>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x231067": {
    "name": "ResponseFuture<0x231067>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x231fd7": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x231fd7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23270f": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x23270f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2328a8": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x2328a8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2329d7": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x2329d7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x232b68": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x232b68>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x233264": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x233264>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x234484": {
    "name": "{closure_env#0}<tokio::task::spawn::spawn_inner::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>, tokio::runtime::task::join::JoinHandle<()>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x234497": {
    "name": "{closure_env#0}<tokio::task::spawn::spawn_inner::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>, tokio::runtime::task::join::JoinHandle<()>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x234529": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23453c": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<tokio::net::tcp::stream::TcpStream, std::io::error::Error>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23454f": {
    "name": "{closure_env#0}<tokio::task::coop::with_budget::ResetGuard, tokio::task::coop::with_budget::{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2357da": {
    "name": "{async_fn_env#0}<0x2357da>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2358c0": {
    "name": "{async_fn_env#0}<0x2358c0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x235a09": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x235a1c": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<tokio::net::tcp::stream::TcpStream, std::io::error::Error>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x235a2f": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x235a4e": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x235a6c": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23618d": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2361db": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23622b": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23627b": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2362cb": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23631b": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x236369": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2363b7": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x236405": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x236453": {
    "name": "UnsafeOverwriteGuard<hyper_util::common::lazy::Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2364a3": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2364f1": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x236541": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23658f": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2365cc": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x236609": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x236646": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x236683": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2366c0": {
    "name": "UnsafeDropInPlaceGuard<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2366fd": {
    "name": "UnsafeDropInPlaceGuard<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23673a": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x236777": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2367b4": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2367f1": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23682e": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23686b": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x236d19": {
    "name": "{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x236d19>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x236f20": {
    "name": "{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x237228": {
    "name": "{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x237228>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x237355": {
    "name": "{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2377d5": {
    "name": "StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x2377d5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2377fc": {
    "name": "StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x2377fc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x237acc": {
    "name": "StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x237af3": {
    "name": "StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2399b3": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x2399b3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2399d1": {
    "name": "IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>><0x2399d1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2399f0": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2399f0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x239a0e": {
    "name": "IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x239a0e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x239a2d": {
    "name": "IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>><0x239a2d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x239a4b": {
    "name": "IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x239a4b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x239a69": {
    "name": "IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>><0x239a69>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x239ab0": {
    "name": "MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x239ab0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x239ad8": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x239ad8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x239b30": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x239b30>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x239b58": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x239b58>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x239b85": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x239b85>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x239c59": {
    "name": "MapErr<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}><0x239c59>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x239c80": {
    "name": "MapErr<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}><0x239c80>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23a27e": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x23a27e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23a300": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x23a300>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23a383": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x23a383>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23a406": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x23a406>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23a489": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x23a489>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23a50c": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x23a50c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23a58f": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x23a58f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23a60e": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x23a60e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23a68d": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x23a68d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23a70c": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x23a70c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23a78b": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x23a78b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23a80a": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x23a80a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23a88a": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x23a88a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23a8b2": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x23a8b2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23a8d9": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x23a8d9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23a901": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x23a901>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23a929": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x23a929>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23a950": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x23a950>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23a977": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x23a977>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23a99e": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x23a99e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23a9c6": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x23a9c6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23a9ed": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x23a9ed>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23aa15": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x23aa15>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23aa3c": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x23aa3c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23aa69": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x23aa69>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23aaeb": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x23aaeb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23ab6a": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x23ab6a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23ac6e": {
    "name": "Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut tokio::time::sleep::Sleep>), ((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x23ac6e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23aced": {
    "name": "Either<(core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::pool::Error>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>), (core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>, hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>)><0x23aced>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23ad6f": {
    "name": "Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>), (core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x23ad6f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23ae5b": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>><0x23ae5b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23ae82": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>><0x23ae82>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23aea9": {
    "name": "Select<hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x23aea9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23aee2": {
    "name": "StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x23aee2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23b0ac": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x23b0ac>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23b0d6": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x23b0d6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23bbd3": {
    "name": "ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x23bbd3>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x23bcd6": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x23bcd6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23bcfd": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x23bcfd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23bd04": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x23bd04>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23bd2b": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x23bd2b>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x23bf7b": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x23bf7b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23c1c0": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x23c1c0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23cee0": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x23cee0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23cf0b": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x23cf0b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23cf12": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x23cf12>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23efa9": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x23efa9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x23efd0": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x23efd0>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x242529": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x242529>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x242653": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x242653>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24267a": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x24267a>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x242c91": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x242c91>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x242cb8": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x242cb8>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x242cdb": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x242f31": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global><0x242f31>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x242f58": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)<0x242f58>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x242f7b": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x242ffa": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x24305d": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global><0x24305d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x243084": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)<0x243084>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x2430a7": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x243187": {
    "name": "&mut (dyn core::future::future::Future<Output=()> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x243274": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x243414": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x243414>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24343b": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x24343b>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x24345e": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x243c6c": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)<0x243c6c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x244169": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x244169>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2442cf": {
    "name": "(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)<0x2442cf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x245490": {
    "name": "((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x245490>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2454ae": {
    "name": "(core::option::Option<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)<0x2454ae>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2454cc": {
    "name": "(core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::pool::Error>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)<0x2454cc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x245509": {
    "name": "(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x245509>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24a405": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x24a405>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24b501": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x24b501>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24b540": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x24b540>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24b57f": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x24b57f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24b5b5": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x24b5b5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24b5eb": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x24b5eb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24b62a": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x24b62a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24b9d7": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x24b9d7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24ba16": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x24ba16>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24ba4c": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x24ba4c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24ba8b": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x24ba8b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24bac1": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x24bac1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24bb00": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x24bb00>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24bde8": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x24bde8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24be27": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x24be27>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24c006": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x24c006>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24c9e6": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x24c9e6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24ca04": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x24ca04>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24ca22": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x24ca22>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24cb4e": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x24cb4e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24cb6c": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x24cb6c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24cb8a": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x24cb8a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24cd32": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24cd50": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24cd6e": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24cd8c": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24cf8f": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x24cf8f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24e4ca": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x24e4ca>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24e4dc": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x24e4dc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24e4ee": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x24e4ee>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24e67a": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x24e67a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24e68c": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x24e68c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24e69e": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x24e69e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24e6b0": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x24e6b0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24e6c2": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x24e6c2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24e70a": {
    "name": "PhantomData<futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24e8ba": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x24e8ba>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24ecb7": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x24ecb7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24ecd5": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x24ecd5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24ed11": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x24ed11>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24f132": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x24f132>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24f150": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x24f150>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24f16e": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x24f16e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24f351": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x24f351>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24f38d": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x24f38d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x24f3ab": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x24f3ab>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x250317": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x250317>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2503da": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x2503da>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x250abc": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x250abc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x251b43": {
    "name": "Option<futures_channel::mpsc::Sender<core::convert::Infallible>><0x251b43>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x251ba4": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x251ba4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x251c67": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>><0x251c67>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x251cc8": {
    "name": "Option<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x251cc8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x252342": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x252342>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25239c": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x25239c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2523ba": {
    "name": "Pin<&mut hyper_util::common::lazy::Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x252436": {
    "name": "Pin<&mut hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x252436>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x252454": {
    "name": "Pin<&mut futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x252472": {
    "name": "Pin<&mut futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x252472>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x252490": {
    "name": "Pin<&mut futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x252490>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2524ae": {
    "name": "Pin<&mut hyper::client::conn::http1::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2524cc": {
    "name": "Pin<&mut hyper::client::conn::http2::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2524ea": {
    "name": "Pin<&mut futures_util::future::either::Either<hyper::client::conn::http1::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>, hyper::client::conn::http2::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x252562": {
    "name": "Pin<&mut futures_util::future::either::Either<hyper::proto::h2::client::Conn<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, h2::client::Connection<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x252580": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x252580>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25259e": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>><0x25259e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2525da": {
    "name": "Pin<&mut futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>>><0x2525da>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2525f8": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>><0x2525f8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x252616": {
    "name": "Pin<&mut futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x252634": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}><0x252634>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x252652": {
    "name": "Pin<&mut core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>><0x252652>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x252670": {
    "name": "Pin<&mut futures_util::future::either::Either<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25268e": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x25268e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2526ac": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x2526ac>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x252707": {
    "name": "Pin<&mut core::option::Option<futures_channel::mpsc::Sender<core::convert::Infallible>>><0x252707>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25277f": {
    "name": "Pin<&mut futures_util::stream::stream::into_future::StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>>><0x25277f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25279d": {
    "name": "Pin<&mut core::option::Option<futures_channel::oneshot::Sender<core::convert::Infallible>>><0x25279d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x252815": {
    "name": "Pin<&mut h2::client::ResponseFuture>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25288d": {
    "name": "Pin<&mut hyper::proto::h2::client::H2ClientFuture<reqwest::async_impl::body::Body, reqwest::connect::sealed::Conn>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2528ab": {
    "name": "Pin<&mut h2::client::{impl#6}::handshake2::{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2528e8": {
    "name": "Pin<&mut hyper::proto::h2::client::handshake::{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x252962": {
    "name": "Pin<&mut futures_util::future::poll_fn::PollFn<hyper::client::conn::http2::{impl#1}::ready::{async_fn#0}::{closure_env#0}<reqwest::async_impl::body::Body>>><0x252962>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25299f": {
    "name": "Pin<alloc::boxed::Box<tower::util::map_err::MapErrFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2529bd": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2529db": {
    "name": "Pin<alloc::boxed::Box<tower::util::map_err::MapErrFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2546d0": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25470c": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2547c0": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2547fc": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x254838": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x254874": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2548b0": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2548ec": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x254928": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x254964": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2549a0": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2549dc": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x254a18": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x254a54": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x254a90": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x254acc": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x254b44": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x254b80": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x254bbc": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x254c70": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x254cac": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x254ce8": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x254d24": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x254d9c": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x254efe": {
    "name": "ManuallyDrop<hyper_util::common::lazy::Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x254efe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x255567": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x255585": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2555df": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25561b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x255639": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x255657": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x255675": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x255693": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2556b1": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2556cf": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2556ed": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25570b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x255729": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x255747": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x255765": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x255783": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2557bf": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2557dd": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2557fb": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x255837": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x255855": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x255873": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x255891": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2558cd": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2559ce": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, hyper_util::client::legacy::connect::http::ConnectError>, hyper_util::client::legacy::connect::http::connect::{async_block_env#0}><0x2559ce>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x256f86": {
    "name": "{async_fn_env#0}<0x256f86>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25711d": {
    "name": "{async_block_env#0}<0x25711d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25758f": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x25758f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x257df5": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x257df5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x257e45": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x257e45>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h9f5b4f64f11deecbE",
    "poll_address": "000000000034e7d0"
  },
  "0x257f4b": {
    "name": "Projection<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x257f73": {
    "name": "InnerProjReplace<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25801f": {
    "name": "InnerProj<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x258394": {
    "name": "<tower::util::map_future::MapFuture<tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>>> as tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable>>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x2583f1": {
    "name": "MapFuture<tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x2583f1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x258424": {
    "name": "MapFuture<tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x258457": {
    "name": "MapFuture<tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x258457>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2584f6": {
    "name": "MapErrFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}><0x2584f6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25851d": {
    "name": "MapErrFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}><0x25851d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x258e50": {
    "name": "ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x258e50>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x25a497": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x25a497>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25a4be": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x25a4be>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25a4f2": {
    "name": "<tower::util::map_future::MapFuture<tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>>> as tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable>>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x25ac1a": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x25ac1a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25b1e8": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x25b1e8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25e5dc": {
    "name": "<tower::util::map_future::MapFuture<tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>>> as tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable>>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x25e63d": {
    "name": "<tower::util::map_err::MapErrFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x25e675": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x25e675>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25e69c": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x25e69c>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x25e743": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x25e743>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25ef2b": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x25ef2b>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x25ef6b": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x25ef6b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25efaa": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x25efaa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25efc8": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x25efc8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f083": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x25f083>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f0c2": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x25f0c2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f0e0": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x25f0e0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f16e": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x25f16e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f1ad": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x25f1ad>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f1ec": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x25f1ec>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x25f22c": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x25f22c>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x25f26c": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x25f26c>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x25f40f": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f42d": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f44b": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f469": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f487": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f4a5": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f4c3": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f4e1": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f505": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x25f505>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f518": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x25f518>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f52b": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x25f52b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f53e": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x25f53e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f553": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f57f": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x25f57f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f592": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x25f592>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f5a5": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x25f5a5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f5b8": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x25f5b8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f5d1": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x25f5d1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f5ef": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x25f5ef>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f60d": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x25f60d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f62b": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x25f62b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f649": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x25f649>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f667": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x25f667>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f685": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x25f685>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f6a3": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x25f6a3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f6c2": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f6e9": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x25f710": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x260224": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x260224>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x260242": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x260242>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x260d44": {
    "name": "{async_fn_env#0}<0x260d44>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x260e61": {
    "name": "{async_fn_env#0}<0x260e61>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2616ff": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x2616ff>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x26190b": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x26190b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x261b5d": {
    "name": "MapErr<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}><0x261b5d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x261b89": {
    "name": "IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>><0x261b89>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x261ba7": {
    "name": "IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x261ba7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x261bc5": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x261bc5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x261be3": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x261be3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x261c01": {
    "name": "IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x261c01>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x261c20": {
    "name": "IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>><0x261c20>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x261c3f": {
    "name": "MapErr<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}><0x261c3f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x261c66": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x261c66>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x261cbe": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x261cbe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x261ce6": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x261ce6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x261d13": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x261d13>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x261e7a": {
    "name": "MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x261e7a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x261ecf": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x261ecf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x261efb": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x261efb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x261f7a": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x261f7a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x261ff9": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x261ff9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x26207b": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x26207b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2620fe": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2620fe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x262181": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x262181>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x262201": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x262201>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x262228": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x262228>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x26224f": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x26224f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2622c3": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2622c3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2622eb": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2622eb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x262318": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x262318>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2623c1": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x2623c1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x262467": {
    "name": "Either<core::pin::Pin<&mut futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, core::pin::Pin<&mut futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2624e7": {
    "name": "Either<hyper::client::conn::http1::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>, hyper::client::conn::http2::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x262591": {
    "name": "Either<core::pin::Pin<&mut hyper::client::conn::http1::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>>, core::pin::Pin<&mut hyper::client::conn::http2::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x26273a": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x26273a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2627e3": {
    "name": "Either<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, core::pin::Pin<&mut tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x262863": {
    "name": "Either<core::pin::Pin<&mut core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>>, core::pin::Pin<&mut futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2628e3": {
    "name": "Either<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>><0x2628e3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x26298a": {
    "name": "Either<core::pin::Pin<&mut core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>, core::pin::Pin<&mut core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x262a0a": {
    "name": "Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>), (core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x262a0a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x262f28": {
    "name": "StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x262f28>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x262f5d": {
    "name": "<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x262fa8": {
    "name": "<tower::util::map_err::MapErrFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x263f5d": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x263f5d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x26474c": {
    "name": "H2ClientFuture<reqwest::async_impl::body::Body, reqwest::connect::sealed::Conn><0x26474c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x26482c": {
    "name": "H2ClientFutureProject<reqwest::async_impl::body::Body, reqwest::connect::sealed::Conn>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x26570a": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x26570a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2659fd": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x2659fd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x265bb6": {
    "name": "{async_block_env#0}<reqwest::async_impl::body::Body>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x265ebe": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x265ebe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x266057": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x266057>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x26612c": {
    "name": "{async_block_env#0}<reqwest::async_impl::body::Body><0x26612c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x268101": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x268101>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x268211": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x268211>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2682f6": {
    "name": "ResponseFuture<0x2682f6>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x268ec7": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x268ec7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x268ef1": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x268ef1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2697ea": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x2697ea>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x269815": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x269815>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x26981c": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x26981c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x26aae3": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x26aae3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x26ab0a": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x26ab0a>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x26ad18": {
    "name": "(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x26ad18>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x26ad36": {
    "name": "(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, futures_util::future::either::Either<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>>)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x26ae75": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x26ae75>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x26ae9c": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x26ae9c>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x271db0": {
    "name": "UnsafeOverwriteGuard<hyper_util::common::lazy::Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x271db0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2726da": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x2726da>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x27276a": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<()>>, alloc::alloc::Global>, std::hash::random::RandomState>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x272809": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x272809>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x27312d": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x27312d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2731a5": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x2731a5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2731c3": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x2731c3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2731e1": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x2731e1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x27330d": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x27330d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x27332b": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x27332b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x273673": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<()>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x273870": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x273870>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x273906": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x273906>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x273924": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x273924>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x273942": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x273942>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x273960": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x273960>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x273b9e": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x273b9e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x273c0a": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x273c0a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x273c1c": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x273c1c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x273c2e": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x273c2e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x273dd4": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x273dd4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x273de6": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x273de6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x273df8": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x273df8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x273e0a": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x273e0a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2741d6": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<()>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2741e8": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<()>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2741fa": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<()>>, alloc::alloc::Global>)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x274362": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x274362>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x274457": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x274457>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x27448a": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x27448a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x27454a": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x27454a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2745e7": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2745e7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x274623": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x274623>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x274641": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x274641>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x274c7c": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x274c7c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x274cb9": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x274cb9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x274d14": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x274d14>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2753bf": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x2753bf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x275482": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x275482>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x275bc8": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x275bc8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x275f25": {
    "name": "Option<futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x275f25>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x275f86": {
    "name": "Option<(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)><0x275f86>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x277b73": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x277b73>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x277fa7": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x277fa7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x278008": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x278008>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x278394": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x278394>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2783b2": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x2783b2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2783ee": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x2783ee>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x27840c": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::send_request::{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x27842a": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>><0x27842a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x278448": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x278466": {
    "name": "Pin<&mut hyper::client::conn::http1::{impl#7}::handshake::{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2784a3": {
    "name": "Pin<&mut hyper::client::conn::http2::{impl#7}::handshake::{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2784e0": {
    "name": "Pin<&mut hyper::client::conn::http2::{impl#1}::ready::{async_fn_env#0}<reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x27851d": {
    "name": "Pin<&mut hyper::client::conn::http1::{impl#1}::ready::{async_fn_env#0}<reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x278597": {
    "name": "Pin<&mut hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2785d4": {
    "name": "Pin<&mut hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x278611": {
    "name": "Pin<&mut hyper_util::client::legacy::client::{impl#1}::connection_for::{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x27864e": {
    "name": "Pin<&mut futures_util::future::either::Either<hyper::client::conn::http1::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>, hyper::client::conn::http2::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>>><0x27864e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x27868b": {
    "name": "Pin<&mut hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x27868b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2786c8": {
    "name": "Pin<&mut futures_util::future::select::Select<hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>><0x2786c8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x278742": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global>><0x278742>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x278760": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global>>><0x278760>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x27879c": {
    "name": "Pin<&mut hyper_util::rt::io::write_all::{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2787d9": {
    "name": "Pin<&mut hyper_util::rt::io::read::{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x278816": {
    "name": "Pin<&mut tokio::sync::mpsc::unbounded::{impl#3}::recv::{async_fn_env#0}<hyper::client::dispatch::Envelope<http::request::Request<reqwest::async_impl::body::Body>, http::response::Response<hyper::body::incoming::Incoming>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x278853": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::connect::proxy::tunnel::{impl#1}::call::{async_block_env#0}<hyper_tls::client::HttpsConnector<hyper_util::client::legacy::connect::http::HttpConnector<reqwest::dns::resolve::DynResolver>>>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2788ae": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::proxy::tunnel::tunnel::{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2788eb": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x2788eb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x278909": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x278909>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x278927": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::sync::mpsc::unbounded::{impl#3}::recv::{async_fn#0}::{closure_env#0}<hyper::client::dispatch::Envelope<http::request::Request<reqwest::async_impl::body::Body>, http::response::Response<hyper::body::incoming::Incoming>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x278964": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x278964>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2789a0": {
    "name": "Pin<alloc::boxed::Box<core::future::ready::Ready<core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2789be": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x2789be>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2789fa": {
    "name": "Pin<&mut core::future::poll_fn::PollFn<tokio::net::tcp::stream::{impl#0}::connect_mio::{async_fn#0}::{closure_env#0}>><0x2789fa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x27c1f2": {
    "name": "<hyper_util::client::legacy::client::{impl#1}::send_request::{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x27c248": {
    "name": "{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x27c76b": {
    "name": "{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x27c76b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x27d00a": {
    "name": "{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x27d00a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x27d472": {
    "name": "{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x27d472>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x27dd81": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x27dd81>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2808f5": {
    "name": "ResponseFuture<0x2808f5>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x2810ac": {
    "name": "{async_block_env#0}<hyper_tls::client::HttpsConnector<hyper_util::client::legacy::connect::http::HttpConnector<reqwest::dns::resolve::DynResolver>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2815f7": {
    "name": "{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x2815f7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2823ba": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2823ba>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2823e2": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2823e2>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h9f5b4f64f11deecbE",
    "poll_address": "000000000034e7d0"
  },
  "0x282512": {
    "name": "SyncWrapper<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>>><0x282512>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x282695": {
    "name": "{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x282695>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2827a6": {
    "name": "{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x2827a6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x283e77": {
    "name": "ResponseFuture<0x283e77>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x284293": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x284293>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2842d2": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x2842d2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x284467": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x284467>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2844a6": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x2844a6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2844e5": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x2844e5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x28451b": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x28451b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x284551": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x284551>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x284590": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x284590>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x28493d": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x28493d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x28497c": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x28497c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2849b2": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x2849b2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2849f1": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x2849f1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x285432": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<()>>, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x285471": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<()>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2856b2": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x2856b2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2856f1": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x2856f1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x285ffd": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x285ffd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x286162": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<()>>, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x28636b": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x28636b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2863e9": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<()>>, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x288b34": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x288b34>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x288b5b": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x288b5b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x288bc9": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x288bc9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x288bd0": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x288bd0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x288c9c": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x288c9c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x288e35": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x288e35>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x288f0a": {
    "name": "{async_block_env#0}<reqwest::async_impl::body::Body><0x288f0a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x28906d": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x28906d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2891fe": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x2891fe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2892d3": {
    "name": "{async_block_env#0}<reqwest::async_impl::body::Body><0x2892d3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x28988d": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x28988d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x28aa53": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x28aa53>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x28ab22": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<()>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x28ad34": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x28ad34>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x28adf1": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<()>>, alloc::alloc::Global>), alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x28b0c3": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x28b0c3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x28b0ed": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x28b0ed>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x28d081": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x28d081>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x28d191": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x28d191>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x28d278": {
    "name": "ResponseFuture<0x28d278>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x28dd43": {
    "name": "{async_fn_env#0}<hyper::client::dispatch::Envelope<http::request::Request<reqwest::async_impl::body::Body>, http::response::Response<hyper::body::incoming::Incoming>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x28e9f4": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x28e9f4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x28ea30": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x28ea30>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2906f3": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x2906f3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x290781": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x290781>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29080f": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x29080f>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x29084f": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x29084f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29088e": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x29088e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2908d9": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2908d9>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x290919": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x290919>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x290958": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x290958>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x290998": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x290998>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2909d7": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x2909d7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2909f5": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2909f5>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x290a35": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x290a35>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x290c48": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x290c48>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x290c6f": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x290c6f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x290c96": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x290c96>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x290cbd": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x290cbd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2917f9": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x2917f9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29184d": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x29184d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2918cf": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x2918cf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29194e": {
    "name": "Either<(core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::pool::Error>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>), (core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>, hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>)><0x29194e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2919d0": {
    "name": "Either<hyper::client::conn::http1::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>, hyper::client::conn::http2::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>><0x2919d0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x291a53": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x291a53>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x291adb": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x291adb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x291b38": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x291b38>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x291b56": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x291b56>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x291b74": {
    "name": "IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x291b74>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x291b94": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x291b94>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x291bbc": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x291bbc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x291be9": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x291be9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x291c96": {
    "name": "MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x291c96>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x291cc4": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x291cc4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x291cf0": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x291cf0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x291d72": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x291d72>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x291df5": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x291df5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x291e74": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x291e74>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x291ef3": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x291ef3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x291f76": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x291f76>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x291ffa": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x291ffa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x292128": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x292128>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29214f": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x29214f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x292176": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x292176>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29219e": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x29219e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x292250": {
    "name": "Select<hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x292250>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29261e": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x29261e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x292645": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x292645>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x2926b8": {
    "name": "(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)<0x2926b8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2926d7": {
    "name": "(core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::pool::Error>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)<0x2926d7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x292727": {
    "name": "<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x29289e": {
    "name": "<hyper_util::client::legacy::connect::proxy::tunnel::{impl#1}::call::{async_block_env#0}<hyper_tls::client::HttpsConnector<hyper_util::client::legacy::connect::http::HttpConnector<reqwest::dns::resolve::DynResolver>>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x292ec4": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x292ec4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x292eeb": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x292eeb>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x29335b": {
    "name": "<core::future::ready::Ready<core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x293946": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global><0x293946>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29396d": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)<0x29396d>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x294431": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<()>>, alloc::alloc::Global>)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2947fe": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global><0x2947fe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x294825": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)<0x294825>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x2960f8": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x2960f8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29611f": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x29611f>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x296cdc": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x296cdc>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x2971a4": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x2971a4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2971cb": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x2971cb>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x2979c3": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x2979c3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2979ea": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x2979ea>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x298f2e": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x298f2e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x298f4c": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x298f4c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x298f6a": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x298f6a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2993a9": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2993a9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2993c7": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x2993c7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2993e5": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x2993e5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x299558": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x299558>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2996a4": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x2996a4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2996c2": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x2996c2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x299a29": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x299a29>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x299a47": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x299a47>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x299a65": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x299a65>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x299add": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x299add>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x299c65": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x299c65>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x299c83": {
    "name": "NonNull<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x299c83>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x299d57": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x299d57>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x299d94": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x299d94>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x299dd1": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x299dd1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x299e0e": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x299e0e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29a8e3": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x29a8e3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29a8f5": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x29a8f5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29a92b": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x29a92b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29aa39": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x29aa39>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29ab59": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x29ab59>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29ab6b": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x29ab6b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29ab7d": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x29ab7d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29afc7": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x29afc7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29afe5": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x29afe5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29b05e": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x29b05e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29b07c": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x29b07c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29b0b8": {
    "name": "Pin<&mut futures_channel::mpsc::Receiver<core::convert::Infallible>><0x29b0b8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29bccd": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x29bccd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29bd90": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x29bd90>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29c1c7": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>><0x29c1c7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29cd59": {
    "name": "Option<alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29cf4c": {
    "name": "Option<&mut alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29d2b8": {
    "name": "Option<&alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29d39e": {
    "name": "Option<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x29d39e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29d400": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x29d400>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x29e096": {
    "name": "Result<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>, std::sync::poison::PoisonError<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a1790": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2a1790>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a2170": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x2a2170>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a21af": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x2a21af>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a21ee": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x2a21ee>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a2224": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2a2224>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a225a": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x2a225a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a2299": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x2a2299>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a242f": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x2a242f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a246e": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x2a246e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a267c": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2a267c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a26bb": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x2a26bb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a28a3": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2a28a3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a48d0": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a48d0>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x2a4946": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a4946>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a4a50": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x2a4a50>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a4ad2": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x2a4ad2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a4b8d": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a4b8d>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x2a4c03": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a4c03>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a4d0d": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x2a4d0d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a4d8f": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x2a4d8f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a4e1d": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a4e1d>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x2a4e93": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a4e93>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a4f9d": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a4f9d>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x2a5013": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a5013>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a5531": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a5531>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a5538": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a5538>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a553f": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a553f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a5546": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a5546>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a5687": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a5687>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a56a5": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a56a5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a56c3": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a56c3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a56e1": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a56e1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a59cd": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a59cd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a59e0": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a59e0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a59f3": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a59f3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a5a06": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a5a06>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a5e26": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a5e26>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a5e4d": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a5e4d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a5e74": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a5e74>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a5e9b": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a5e9b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a622a": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a622a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a6231": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a6231>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a6238": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a6238>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a623f": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a623f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a6246": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a6246>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a624d": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a624d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a6254": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a6254>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a625b": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a625b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a6e86": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a6e86>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a7110": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x2a7110>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a739a": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a739a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a7624": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x2a7624>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a8474": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x2a8474>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a862a": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x2a862a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a94cf": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x2a94cf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a9572": {
    "name": "MutexGuard<futures_channel::mpsc::SenderTask>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a9639": {
    "name": "PoisonError<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a9f8e": {
    "name": "OccupiedEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2a9fdd": {
    "name": "VacantEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2aa031": {
    "name": "Entry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry10TimerEntry12poll_elapsed17hdaf22dec527e1f33E",
    "poll_address": "000000000058f1b0"
  },
  "0x2aa483": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x2aa483>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2adffc": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x2adffc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2ae3d4": {
    "name": "Bucket<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x2ae3d4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2ae430": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x2ae430>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2ae7b4": {
    "name": "RustcOccupiedEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2ae821": {
    "name": "RustcVacantEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2ae9c1": {
    "name": "RustcEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2afdbf": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x2afdbf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2afde9": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x2afde9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2b272a": {
    "name": "ResponseFuture<0x2b272a>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x2b2c27": {
    "name": "<std::sync::poison::PoisonError<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>> as core::fmt::Debug>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x2b2fd1": {
    "name": "StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x2b2fd1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2b4c75": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x2b4c75>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2b7653": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x2b7653>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2b767a": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x2b767a>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x2ba9fb": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x2ba9fb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2baa22": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x2baa22>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2baa29": {
    "name": "(futures_channel::mpsc::Sender<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h2e71021a18a94d6fE",
    "poll_address": "00000000004138f0"
  },
  "0x2bb019": {
    "name": "<hyper_tls::client::{impl#5}::call::{async_block_env#1}<hyper_util::client::legacy::connect::http::HttpConnector<reqwest::dns::resolve::DynResolver>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x2bb080": {
    "name": "{async_block_env#1}<hyper_util::client::legacy::connect::http::HttpConnector<reqwest::dns::resolve::DynResolver>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2bb520": {
    "name": "{async_block_env#0}<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2bb954": {
    "name": "{async_fn_env#0}<0x2bb954>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2bbaeb": {
    "name": "{async_block_env#0}<0x2bbaeb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2bbfce": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x2bbfce>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2bc9ef": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2bc9ef>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2bca17": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2bca17>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h9f5b4f64f11deecbE",
    "poll_address": "000000000034e7d0"
  },
  "0x2bdfa1": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x2bdfa1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2bdfe0": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x2bdfe0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2be01f": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x2be01f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2be055": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x2be055>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2be100": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x2be100>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2be13f": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2be13f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2be175": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x2be175>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2be1b4": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x2be1b4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2be522": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2be522>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2be561": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x2be561>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2be597": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x2be597>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2be5d6": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x2be5d6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2be60c": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x2be60c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2be64b": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x2be64b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2bf492": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2bf492>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2bf674": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x2bf674>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2bfb6c": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x2bfb6c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2bfb8a": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x2bfb8a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2bfbc6": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x2bfbc6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2bfbe4": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x2bfbe4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2bfd10": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x2bfd10>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2bfd2e": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x2bfd2e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2bfd4c": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x2bfd4c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c0d38": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x2c0d38>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c0d56": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x2c0d56>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c0d92": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2c0d92>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c1236": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x2c1236>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c1254": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x2c1254>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c1272": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x2c1272>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c130a": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2c130a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c1965": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x2c1965>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c1977": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x2c1977>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c1a19": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x2c1a19>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c1a2b": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x2c1a2b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c1b81": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x2c1b81>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c1b93": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x2c1b93>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c1ba5": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x2c1ba5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c1bb7": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x2c1bb7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c1bc9": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x2c1bc9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c1e0f": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global>><0x2c1e0f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c1e4b": {
    "name": "Pin<alloc::boxed::Box<hyper_tls::client::{impl#5}::call::{async_block_env#1}<hyper_util::client::legacy::connect::http::HttpConnector<reqwest::dns::resolve::DynResolver>>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c1ea6": {
    "name": "Pin<&mut tokio_native_tls::{impl#12}::connect::{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c2030": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x2c2030>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c204e": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x2c204e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c208a": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}><0x2c208a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c20a8": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x2c20a8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c20c6": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x2c20c6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c20e4": {
    "name": "Pin<&mut futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>>><0x2c20e4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c2102": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x2c2102>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c2120": {
    "name": "Pin<alloc::boxed::Box<hyper_tls::client::err::{async_block_env#0}<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c217a": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x2c217a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c2198": {
    "name": "Pin<&mut futures_util::stream::stream::into_future::StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>>><0x2c2198>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c21b6": {
    "name": "Pin<&mut futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x2c21b6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c3090": {
    "name": "Option<tokio_native_tls::StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x2c3090>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c3661": {
    "name": "Option<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x2c3661>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c3763": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>><0x2c3763>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c38cf": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x2c38cf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c3d92": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x2c3d92>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c46d5": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x2c46d5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c7db0": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2c7db0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c7e11": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x2c7e11>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c815a": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x2c815a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c8298": {
    "name": "Option<futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x2c8298>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c8494": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)><0x2c8494>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c865e": {
    "name": "Option<(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)><0x2c865e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c88d2": {
    "name": "Option<futures_channel::mpsc::Sender<core::convert::Infallible>><0x2c88d2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c897b": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x2c897b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c89dc": {
    "name": "Option<tokio_native_tls::StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>><0x2c89dc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c8b35": {
    "name": "Option<&mut (core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c8caa": {
    "name": "Option<&mut (core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c8d95": {
    "name": "Option<&mut alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c8df6": {
    "name": "Option<&mut futures_channel::mpsc::Receiver<core::convert::Infallible>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c8fb9": {
    "name": "Option<&mut (hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2c9274": {
    "name": "Option<&alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>><0x2c9274>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2cb966": {
    "name": "Poll<(core::option::Option<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)><0x2cb966>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2cef1e": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, hyper_util::client::legacy::connect::http::ConnectError>, hyper_util::client::legacy::connect::http::connect::{async_block_env#0}><0x2cef1e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2cfacb": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global><0x2cfacb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2cfaf2": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)<0x2cfaf2>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x2cfb24": {
    "name": "{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x2cfb24>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2cfc7e": {
    "name": "{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x2cfc7e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2cfdac": {
    "name": "StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x2cfdac>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2cfdd3": {
    "name": "StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x2cfdd3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2cfee0": {
    "name": "StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x2cfee0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2d04a2": {
    "name": "{async_fn_env#0}<0x2d04a2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2d0588": {
    "name": "{async_fn_env#0}<0x2d0588>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2d2096": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x2d2096>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2d26d8": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x2d26d8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2d26f6": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x2d26f6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2d2e01": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x2d2e01>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2d36a9": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x2d36a9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2d4084": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x2d4084>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2d4290": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x2d4290>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2d7134": {
    "name": "ResponseFuture<0x2d7134>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x2d71d4": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x2d71d4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2d72e4": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x2d72e4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2d91a1": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x2d91a1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2d9801": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x2d9801>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2d999a": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x2d999a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2d9ac9": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x2d9ac9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2d9c5a": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x2d9c5a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2db23b": {
    "name": "<hyper_tls::client::err::{async_block_env#0}<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x2db576": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x2db576>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2db5a0": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x2db5a0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2dbb18": {
    "name": "StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x2dbb18>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2dbc0e": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x2dbc0e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2dbc90": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x2dbc90>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2dbd0f": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x2dbd0f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2dbd97": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x2dbd97>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2dbdf4": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x2dbdf4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2dbe12": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2dbe12>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2dbe31": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2dbe31>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2dbe59": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x2dbe59>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2dbe86": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2dbe86>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2dbf39": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2dbf39>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2dbf65": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2dbf65>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2dbfe7": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2dbfe7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2dc06b": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x2dc06b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2dcc03": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x2dcc03>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2dcc2e": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x2dcc2e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2dcc35": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x2dcc35>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2de862": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x2de862>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2de889": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x2de889>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x2decfb": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x2decfb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2ded22": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x2ded22>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2dfc20": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x2dfc20>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2dfefd": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)<0x2dfefd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e0328": {
    "name": "(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)<0x2e0328>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e0347": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x2e0347>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e036e": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x2e036e>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x2e31ab": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x2e31ab>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e31d2": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x2e31d2>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x2e658d": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x2e658d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e65b4": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x2e65b4>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x2e65bb": {
    "name": "(core::option::Option<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)<0x2e65bb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e703b": {
    "name": "{async_block_env#0}<0x2e703b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e7298": {
    "name": "{async_fn_env#0}<0x2e7298>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e752f": {
    "name": "{async_fn_env#0}<0x2e752f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e76a7": {
    "name": "{async_fn_env#0}<reqwest::dns::resolve::DynResolver><0x2e76a7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e785a": {
    "name": "{async_block_env#0}<reqwest::dns::resolve::DynResolver><0x2e785a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e7af6": {
    "name": "{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x2e7af6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e7d0e": {
    "name": "{async_block_env#0}<hyper_tls::client::HttpsConnector<hyper_util::client::legacy::connect::http::HttpConnector<reqwest::dns::resolve::DynResolver>>><0x2e7d0e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e7eb3": {
    "name": "GaiFuture<0x2e7eb3>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x2e7ecd": {
    "name": "{async_fn_env#0}<reqwest::dns::resolve::DynResolver><0x2e7ecd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e82d7": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x2e82d7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e88d0": {
    "name": "{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x2e88d0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e8a2c": {
    "name": "{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x2e8a2c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e8c32": {
    "name": "{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x2e8c32>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e8d34": {
    "name": "{async_fn_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x2e8d34>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e8fdb": {
    "name": "ResponseFuture<0x2e8fdb>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x2e94f5": {
    "name": "{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x2e94f5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e95fb": {
    "name": "{async_fn_env#0}<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x2e95fb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e97fd": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2e97fd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e9825": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2e9825>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h9f5b4f64f11deecbE",
    "poll_address": "000000000034e7d0"
  },
  "0x2e98d1": {
    "name": "InnerProjReplace<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2e98d1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e9983": {
    "name": "SyncWrapper<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>>><0x2e9983>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e9beb": {
    "name": "{async_block_env#0}<0x2e9beb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2e9f61": {
    "name": "ResponseFuture<0x2e9f61>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x2ea309": {
    "name": "{async_fn_env#0}<0x2ea309>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2ea657": {
    "name": "{async_fn_env#0}<0x2ea657>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2ea9b0": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}><0x2ea9b0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2eaad3": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}><0x2eaad3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2ead05": {
    "name": "{async_block_env#0}<0x2ead05>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2ec2d5": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x2ec2d5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2ec398": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x2ec398>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2ecccf": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x2ecccf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2ed530": {
    "name": "Option<tokio_native_tls::StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>><0x2ed530>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2ed96a": {
    "name": "Option<futures_channel::mpsc::Sender<core::convert::Infallible>><0x2ed96a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2ed9cb": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x2ed9cb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2eda8d": {
    "name": "Option<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x2eda8d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2edaef": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global>><0x2edaef>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2edbb1": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)><0x2edbb1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2edc12": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x2edc12>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2ee96e": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2ee96e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2ee9cf": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x2ee9cf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2eec80": {
    "name": "Option<futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x2eec80>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2eece1": {
    "name": "Option<(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)><0x2eece1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2eeed3": {
    "name": "Option<tokio_native_tls::StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x2eeed3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2eef99": {
    "name": "Option<alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>><0x2eef99>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2efb94": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x2efb94>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2efbb2": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x2efbb2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2efbd0": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x2efbd0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2efcc0": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x2efcc0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2efcde": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2efcde>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2efcfc": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2efcfc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2efd1a": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x2efd1a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2efd38": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x2efd38>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2efd56": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x2efd56>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2efdce": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x2efdce>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2efebe": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x2efebe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2fc2ed": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x2fc2ed>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2fc2ff": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x2fc2ff>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2fc311": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x2fc311>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2fc3a1": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x2fc3a1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2fc3b3": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x2fc3b3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2fc3c5": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x2fc3c5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2fc41f": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x2fc41f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2fc431": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x2fc431>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2fc587": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x2fc587>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2fc6dd": {
    "name": "PhantomData<futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x2fc6dd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2fc791": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2fc7b5": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2fc9e5": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2fc9e5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2fca03": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x2fca03>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2fca5d": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x2fca5d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2fd0ef": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x2fd0ef>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2fd10d": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x2fd10d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2fd12b": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x2fd12b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2fd2b3": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x2fd2b3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2fd2ef": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x2fd2ef>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2fd6a3": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x2fd6a3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x2fdd90": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, hyper_util::client::legacy::connect::http::ConnectError>, hyper_util::client::legacy::connect::http::connect::{async_block_env#0}><0x2fdd90>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x301870": {
    "name": "Result<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, futures_channel::oneshot::Canceled><0x301870>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x302656": {
    "name": "Poll<(core::option::Option<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)><0x302656>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30277b": {
    "name": "Poll<core::result::Result<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, futures_channel::oneshot::Canceled>><0x30277b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x302ad2": {
    "name": "ManuallyDrop<hyper_util::common::lazy::Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x302ad2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x302af1": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x302af1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x302b10": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x302b10>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x302b2f": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x302b2f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x302b4d": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x302b4d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x302b6b": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x302b6b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x302b89": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x302b89>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x302ba7": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x302ba7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x302bc6": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x302bc6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x302be4": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x302be4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x302c02": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x302c02>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x302c21": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x302c21>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x302c40": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x302c40>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x302cdd": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x302cdd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x302cfb": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x302cfb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x302d19": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x302d19>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x302d37": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global>><0x302d37>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x302d55": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x302d55>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x302d73": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}><0x302d73>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x302daf": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x302daf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x302dcd": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global>><0x302dcd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x302e27": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x302e27>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x302e45": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>><0x302e45>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x302e63": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>><0x302e63>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x304064": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x304064>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x304ef2": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x304ef2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x304f31": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x304f31>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x304f70": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x304f70>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x304fa6": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x304fa6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x304fdc": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x304fdc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30501b": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x30501b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30529e": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x30529e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3052dd": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x3052dd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x305352": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x305352>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x305391": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x305391>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3053c7": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x3053c7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x305406": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x305406>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3058ab": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x3058ab>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3058ea": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x3058ea>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x305b99": {
    "name": "Weak<futures_channel::oneshot::Inner<core::convert::Infallible>, &alloc::alloc::Global><0x305b99>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x305bcc": {
    "name": "Weak<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, &alloc::alloc::Global><0x305bcc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x305d4f": {
    "name": "Weak<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, &alloc::alloc::Global><0x305d4f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x305e1b": {
    "name": "Weak<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), &alloc::alloc::Global><0x305e1b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30613b": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x30613b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3062bc": {
    "name": "Dropper<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x3062bc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3062e6": {
    "name": "Dropper<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x3062e6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3075df": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x3075df>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3078c2": {
    "name": "H2ClientFuture<reqwest::async_impl::body::Body, reqwest::connect::sealed::Conn><0x3078c2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x307d23": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x307d23>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x307ebc": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x307ebc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x307fb9": {
    "name": "{async_block_env#0}<reqwest::async_impl::body::Body><0x307fb9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x308104": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x308104>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x308295": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x308295>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30836a": {
    "name": "{async_block_env#0}<reqwest::async_impl::body::Body><0x30836a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30adcd": {
    "name": "ResponseFuture<0x30adcd>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x30ae9f": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x30ae9f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30afaf": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x30afaf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30c336": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x30c336>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30c691": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x30c691>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30c718": {
    "name": "VacantEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>><0x30c718>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30cd46": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x30cd46>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30cd70": {
    "name": "Timeout<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}><0x30cd70>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30cd9b": {
    "name": "Timeout<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}><0x30cd9b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30d863": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30d863>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x30d8a3": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30d8a3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30d8e2": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x30d8e2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30d900": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x30d900>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30d9bb": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30d9bb>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x30d9fb": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30d9fb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30da3a": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x30da3a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30da58": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x30da58>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30dae6": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30dae6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30db25": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30db25>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x30db65": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30db65>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30dba4": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30dba4>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x30dbee": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30dbee>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30dc01": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30dc01>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30dc14": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30dc14>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30dc27": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30dc27>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30dd9f": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30dd9f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30ddb2": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30ddb2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30ddc5": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30ddc5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30ddd8": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30ddd8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30ddf1": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30ddf1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30de0f": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30de0f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30de2d": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30de2d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30de4b": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30de4b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30de69": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30de69>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30de87": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30de87>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30dea5": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30dea5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30dec3": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30dec3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30dee3": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30dee3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30df0a": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30df0a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30df36": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30df36>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30df49": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30df49>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30df5c": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30df5c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30df6f": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30df6f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30df83": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30df83>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30dfaa": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30dfaa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30dfdb": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30dfdb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30e002": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30e002>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30e029": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x30e029>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30e050": {
    "name": "Guard<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x30e050>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30e71c": {
    "name": "{closure_env#0}<tokio::task::spawn::spawn_inner::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>, tokio::runtime::task::join::JoinHandle<()>><0x30e71c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30e72f": {
    "name": "{closure_env#0}<tokio::task::spawn::spawn_inner::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>, tokio::runtime::task::join::JoinHandle<()>><0x30e72f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30ebb6": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x30ebb6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30ebd4": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x30ebd4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30f5b7": {
    "name": "{async_fn_env#0}<hyper::client::dispatch::Envelope<http::request::Request<reqwest::async_impl::body::Body>, http::response::Response<hyper::body::incoming::Incoming>>><0x30f5b7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30fa12": {
    "name": "{async_fn_env#0}<0x30fa12>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30faf8": {
    "name": "{async_fn_env#0}<0x30faf8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30fc32": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x30fc32>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x30fc50": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x30fc50>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3107d7": {
    "name": "{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), (http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>><0x3107d7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31084f": {
    "name": "{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x31084f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x310900": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x310900>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x310b1f": {
    "name": "{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), (http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>>><0x310b1f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x310b3d": {
    "name": "{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::rustc_entry::{impl#0}::rustc_entry::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global>><0x310b3d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x310c3b": {
    "name": "{closure_env#0}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::map::make_hasher::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState>><0x310c3b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x310c76": {
    "name": "{closure_env#1}<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global, hashbrown::map::make_hasher::{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState>><0x310c76>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x310d0a": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x310d0a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x310e53": {
    "name": "{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x310e53>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x310ed6": {
    "name": "RustcVacantEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, alloc::alloc::Global><0x310ed6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x312a91": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x312a91>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x312d12": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x312d12>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x312d3c": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x312d3c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31349e": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x31349e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3134c5": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x3134c5>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x313638": {
    "name": "{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x313638>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31378b": {
    "name": "{async_fn_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x31378b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3138a3": {
    "name": "{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x3138a3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3139d0": {
    "name": "{async_fn_env#0}<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x3139d0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x313afe": {
    "name": "StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x313afe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x313b25": {
    "name": "StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>>, hyper_util::rt::tokio::TokioIo<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>><0x313b25>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x313c62": {
    "name": "StartedHandshakeFuture<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x313c62>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x313c89": {
    "name": "StartedHandshakeFutureInner<tokio_native_tls::{impl#12}::connect::{async_fn#0}::{closure_env#0}<hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>>, hyper_util::rt::tokio::TokioIo<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>><0x313c89>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x314019": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x314019>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x314020": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x314020>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x314217": {
    "name": "{async_block_env#0}<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>><0x314217>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3142a4": {
    "name": "{async_block_env#1}<hyper_util::client::legacy::connect::http::HttpConnector<reqwest::dns::resolve::DynResolver>><0x3142a4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x314896": {
    "name": "MapFuture<tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x314896>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3148c9": {
    "name": "MapFuture<tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x3148c9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3148fc": {
    "name": "MapFuture<tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>>><0x3148fc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31499b": {
    "name": "MapErrFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}><0x31499b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3149c2": {
    "name": "MapErrFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}><0x3149c2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x314bdb": {
    "name": "ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x314bdb>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x314c8f": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x314c8f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x314cb6": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x314cb6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x314e6a": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x314e6a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x314e91": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x314e91>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x314e98": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global><0x314e98>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x314ebf": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)<0x314ebf>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x314efa": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x314efa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x314f21": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x314f21>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x314f89": {
    "name": "ResponseFuture<reqwest::async_impl::client::HyperService, reqwest::async_impl::body::Body, reqwest::redirect::TowerRedirectPolicy><0x314f89>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x315331": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>><0x315331>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x315358": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>><0x315358>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31537f": {
    "name": "Select<hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x31537f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3153ad": {
    "name": "Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut tokio::time::sleep::Sleep>), ((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x3153ad>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31542c": {
    "name": "Either<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>><0x31542c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3154ac": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x3154ac>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3155ad": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x3155ad>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31562f": {
    "name": "Either<(core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::pool::Error>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>), (core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>, hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>)><0x31562f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3156b1": {
    "name": "Either<hyper::client::conn::http1::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>, hyper::client::conn::http2::{impl#2}::try_send_request::{async_block_env#0}<reqwest::async_impl::body::Body>><0x3156b1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x315734": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tower::util::oneshot::Oneshot<reqwest::async_impl::client::HyperService, http::request::Request<reqwest::async_impl::body::Body>>><0x315734>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3157bc": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x3157bc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x315819": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x315819>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x315837": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x315837>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x315855": {
    "name": "IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x315855>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x315874": {
    "name": "IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>><0x315874>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x315893": {
    "name": "IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>><0x315893>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3158b1": {
    "name": "IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x3158b1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3158cf": {
    "name": "IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>><0x3158cf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3158ee": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x3158ee>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x315916": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x315916>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x315943": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x315943>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3159f0": {
    "name": "MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x3159f0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x315a18": {
    "name": "MapErr<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}><0x315a18>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x315a8e": {
    "name": "MapErr<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}><0x315a8e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x315abb": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x315abb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x315ae7": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x315ae7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x315b69": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x315b69>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x315bec": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x315bec>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x315c6f": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x315c6f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x315cf2": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x315cf2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x315d71": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x315d71>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x315df4": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x315df4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x315e73": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x315e73>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x315ef2": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x315ef2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x315f71": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x315f71>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x315ff0": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316070": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3160f3": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x3160f3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316176": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x316176>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3161f6": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3161f6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31621e": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x31621e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316246": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x316246>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31626e": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x31626e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316295": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x316295>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3162bd": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3162bd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3162e4": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x3162e4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31630b": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x31630b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316332": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x316332>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316359": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x316359>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316381": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x316381>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316537": {
    "name": "StreamFuture<futures_channel::mpsc::Receiver<core::convert::Infallible>><0x316537>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316573": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)<0x316573>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3165af": {
    "name": "((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x3165af>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3165cd": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x3165cd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316639": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global><0x316639>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316660": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)<0x316660>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x316abf": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x316abf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316ae6": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x316ae6>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x316b39": {
    "name": "(core::option::Option<core::convert::Infallible>, futures_channel::mpsc::Receiver<core::convert::Infallible>)<0x316b39>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316c1a": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x316c1a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316c41": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x316c41>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x316c52": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x316c52>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316c70": {
    "name": "UnsafeOverwriteGuard<hyper_util::common::lazy::Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x316c70>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316c9c": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>><0x316c9c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316cba": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x316cba>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316cd8": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x316cd8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316d04": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x316d04>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316d30": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>><0x316d30>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316d4e": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>><0x316d4e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316d6c": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>><0x316d6c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316d8a": {
    "name": "UnsafeDropInPlaceGuard<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x316d8a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316da8": {
    "name": "UnsafeDropInPlaceGuard<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x316da8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316dc6": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>><0x316dc6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316de4": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x316de4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316e02": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>><0x316e02>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316e20": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x316e20>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316e4a": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x316e4a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316e68": {
    "name": "UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x316e68>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316e86": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x316e86>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316eb0": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x316eb0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316eda": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x316eda>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316f04": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x316f04>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316f30": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x316f30>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316f5a": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x316f5a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316f84": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x316f84>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316fb0": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x316fb0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x316fdc": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x316fdc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x317022": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3170e2": {
    "name": "(hyper_util::client::legacy::pool::Checkout<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)<0x3170e2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x317101": {
    "name": "(core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::pool::Error>, hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>)<0x317101>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31718c": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>>, ())",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x317205": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, ())",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x317223": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global><0x317223>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31724a": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)<0x31724a>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x317302": {
    "name": "&mut [futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>]<0x317302>",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h2e71021a18a94d6fE",
    "poll_address": "00000000004138f0"
  },
  "0x317377": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>>, ())",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x317424": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>>, ())",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31744f": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>>, ())",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3174a1": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, ())",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3174bf": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, ())",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x317640": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, ())",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3176d7": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>>, ())",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31777e": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>>, ())",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3177f7": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, ())",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x317849": {
    "name": "(pin_project_lite::__private::UnsafeDropInPlaceGuard<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, ())",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x317e68": {
    "name": "*mut (dyn core::future::future::Future<Output=()> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x3183c5": {
    "name": "*mut [futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>]<0x3183c5>",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h2e71021a18a94d6fE",
    "poll_address": "00000000004138f0"
  },
  "0x318d74": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x318d92": {
    "name": "*mut (dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x318e07": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x318fc9": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x318fe7": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x3193fb": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x3195e0": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x3196e8": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x31a1ce": {
    "name": "*mut (dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31b683": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x31b683>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31b746": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x31b746>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31be8c": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x31be8c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31c49f": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x31c49f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31c500": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x31c500>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31c9fe": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::convert::Infallible>><0x31c9fe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31e2a1": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x31e2a1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31e2bf": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x31e2bf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31e2dd": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x31e2dd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31e409": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x31e409>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31e427": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x31e427>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31e445": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x31e445>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x31e571": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x31e571>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x320c44": {
    "name": "Result<futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::Error><0x320c44>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3213d5": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x3213d5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3213e7": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x3213e7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3213f9": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x3213f9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32159f": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x32159f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3215b1": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x3215b1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3215c3": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x3215c3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3215d5": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x3215d5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3215e7": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x3215e7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x321719": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>>><0x321719>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x321a55": {
    "name": "PhantomData<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x321a67": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>><0x321a67>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x321a79": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x321a8b": {
    "name": "PhantomData<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x321a9d": {
    "name": "PhantomData<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x321aaf": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x321ac1": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x321ad3": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x321ae5": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x321af7": {
    "name": "PhantomData<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x321b09": {
    "name": "PhantomData<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x321b09>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x321b1b": {
    "name": "PhantomData<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x321cfa": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x321cfa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x321d2d": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x321d2d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x321d7e": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x321d7e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x321e8a": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x321e8a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x321ec6": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x321ec6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x321ee4": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x321ee4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x322103": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x322103>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x323127": {
    "name": "Pin<&mut futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x323127>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3231a1": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x3231a1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3231fd": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x3231fd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32321b": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x32321b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x323295": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x323295>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3232f1": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x3232f1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32334d": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x32334d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32336b": {
    "name": "Pin<&mut futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x32336b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3233c7": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3233c7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x323423": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x323423>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32347f": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x32347f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3234db": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x3234db>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x323555": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x323555>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3235b1": {
    "name": "Pin<&mut futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3235b1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32360d": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x32360d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32362b": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x32362b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x323649": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>><0x323649>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x323667": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x323667>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x323685": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>><0x323685>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3236a3": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>><0x3236a3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3236c1": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3236c1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3236df": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>><0x3236df>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3236fd": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>><0x3236fd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32371b": {
    "name": "Pin<&mut futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x32371b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x323739": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>><0x323739>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x323757": {
    "name": "Pin<&mut futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x323757>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3237b2": {
    "name": "Pin<&mut futures_util::future::poll_fn::PollFn<hyper::client::conn::http1::{impl#1}::ready::{async_fn#0}::{closure_env#0}<reqwest::async_impl::body::Body>>><0x3237b2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3237ef": {
    "name": "Pin<&mut tokio::net::tcp::stream::{impl#0}::connect_mio::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32382c": {
    "name": "Pin<&mut core::future::ready::Ready<core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32394b": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x32394b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x323969": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x323969>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x323e9a": {
    "name": "Poll<core::result::Result<futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::Error>><0x323e9a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32448e": {
    "name": "ManuallyDrop<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3244e8": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3244e8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x324506": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x324506>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x324525": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x324525>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x324543": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x324543>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x324562": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x324562>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x324580": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x324580>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32459f": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x32459f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3245bd": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x3245bd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3245db": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x3245db>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3245f9": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3245f9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x324617": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x324617>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x324636": {
    "name": "ManuallyDrop<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x324636>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x329f51": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x329f51>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32a061": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x32a061>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32a148": {
    "name": "ResponseFuture<0x32a148>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x32a387": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x32a387>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32b273": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x32b273>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32b5cf": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x32b5cf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32b788": {
    "name": "{async_block_env#0}<reqwest::async_impl::body::Body><0x32b788>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32ba13": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x32ba13>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32bba4": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x32bba4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32cbc3": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x32cbc3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32d165": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x32d165>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32d1a4": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x32d1a4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32d1e3": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x32d1e3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32d219": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x32d219>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32d24f": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x32d24f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32d28e": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x32d28e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32d5fc": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x32d5fc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32d63b": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x32d63b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32d671": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x32d671>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32d6b0": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x32d6b0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32d6e6": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x32d6e6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32d725": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x32d725>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32dbab": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::convert::Infallible>, alloc::alloc::Global><0x32dbab>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32dbea": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::convert::Infallible>><0x32dbea>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32e674": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x32e674>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32ec59": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x32ec59>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x32ecf8": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x32ecf8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x330eef": {
    "name": "{async_fn_env#0}<0x330eef>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x330fab": {
    "name": "{async_fn_env#0}<0x330fab>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3310c3": {
    "name": "{async_fn_env#0}<0x3310c3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x33118f": {
    "name": "{async_fn_env#0}<0x33118f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3314ec": {
    "name": "{async_fn_env#0}<0x3314ec>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3322c0": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x3322c0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x332d1b": {
    "name": "Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x332d1b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x332d43": {
    "name": "Inner<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x332d43>",
    "poll_symbol": "_ZN2h25proto7streams7streams5Inner13poll_complete17h9f5b4f64f11deecbE",
    "poll_address": "000000000034e7d0"
  },
  "0x3352ea": {
    "name": "{async_fn_env#0}<0x3352ea>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x33551d": {
    "name": "{async_fn_env#0}<0x33551d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x33563c": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x33563c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x33565a": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x33565a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3359b3": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x3359b3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3364a5": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>><0x3364a5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3365a5": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3365a5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3366a9": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3366a9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3367ad": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3367ad>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3368b0": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3368b0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3369b4": {
    "name": "Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x3369b4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x336ab4": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x336ab4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x336bb8": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x336bb8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x336cb8": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>><0x336cb8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x336db8": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x336db8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x336ebc": {
    "name": "Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x336ebc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x336fbc": {
    "name": "MapProjReplace<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x33703c": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x33703c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3370bc": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x33713c": {
    "name": "MapProjReplace<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3371bc": {
    "name": "MapProjReplace<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x33723c": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3372bc": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x33733c": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3373bc": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x33743c": {
    "name": "MapProjReplace<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3374bc": {
    "name": "MapProjReplace<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3374bc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x33753f": {
    "name": "MapProjReplace<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3375bf": {
    "name": "MapProj<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x33763e": {
    "name": "MapProj<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3376bd": {
    "name": "MapProj<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x33773c": {
    "name": "MapProj<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3377bb": {
    "name": "MapProj<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x33783a": {
    "name": "MapProj<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3378b9": {
    "name": "MapProj<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x337938": {
    "name": "MapProj<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3379b7": {
    "name": "MapProj<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x337a36": {
    "name": "MapProj<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x337ab5": {
    "name": "MapProj<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x337b34": {
    "name": "MapProj<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x337bb4": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x337bb4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x337bdb": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x337bdb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x337c03": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x337c03>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x337c2b": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x337c2b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x337c53": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x337c53>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x337c85": {
    "name": "IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x337c85>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x337ca3": {
    "name": "IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>><0x337ca3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x337cc2": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x337cc2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x337ce0": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x337ce0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x337cfe": {
    "name": "IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x337cfe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x337d1d": {
    "name": "IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>><0x337d1d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x337d3b": {
    "name": "IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>><0x337d3b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x337d81": {
    "name": "AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x337d81>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x337db2": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x337db2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x337dda": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x337dda>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x337e07": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x337e07>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x337eb4": {
    "name": "MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x337eb4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x337f31": {
    "name": "Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x337f31>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x337fb3": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x337fb3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x33848b": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x33848b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x33869d": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x33869d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3388f8": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x3388f8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x338922": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x338922>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x339441": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x339441>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x33946c": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x33946c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x339473": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x339473>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x339525": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x339525>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x33954c": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x33954c>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x339cc9": {
    "name": "MapFuture<tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>>><0x339cc9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x339d08": {
    "name": "ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x339d08>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x339d35": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x339d35>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x339d5c": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x339d5c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34173c": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x34173c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x341763": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x341763>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x3417a8": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x3417a8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3417d2": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x3417d2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3417fe": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x3417fe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x341828": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x341828>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x341854": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<hyper_util::common::future::PollFn<hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#3}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::try_send_request::{async_fn#0}::{closure_env#4}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x341854>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34187e": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x34187e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3418aa": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x3418aa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3418d4": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<tower::timeout::future::ResponseFuture<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>>>, futures_util::fns::MapErrFn<reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x3418d4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3418fe": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x3418fe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x341928": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper::client::conn::http2::Connection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x341928>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x341952": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>><0x341952>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34197e": {
    "name": "UnsafeOverwriteGuard<futures_util::future::future::map::Map<futures_util::future::try_future::MapErr<hyper_util::common::lazy::Lazy<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, futures_util::future::either::Either<futures_util::future::try_future::AndThen<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::one_connection_for::{async_fn#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x34197e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3426a1": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x3426a1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3430d2": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x3430d2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34311a": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x34311a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34323b": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x34323b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x343295": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x343295>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3432b3": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x3432b3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3437a2": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x3437a2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3437de": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x3437de>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x343f05": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x343f05>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x343f23": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x343f23>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x343f41": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x343f41>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3446d5": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x3446d5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34471b": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34471b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x344761": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x344761>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3447a7": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x3447a7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x344a12": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x344a12>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x344a30": {
    "name": "NonNull<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x344a30>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34573f": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x34573f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x345751": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x345751>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x345763": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x345763>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x345d77": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x345d77>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x345d89": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x345d89>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x345d9b": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x345d9b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x346896": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x346896>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x346959": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x346959>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3473b0": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x3473b0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x347411": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x347411>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x348b4f": {
    "name": "Option<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x348b4f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x348c79": {
    "name": "Option<&mut ((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x348e0b": {
    "name": "Option<alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>><0x348e0b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34a11a": {
    "name": "Result<(h2::client::ResponseFuture, h2::share::SendStream<hyper::proto::h2::SendBuf<bytes::bytes::Bytes>>), h2::error::Error><0x34a11a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34cf39": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x34cf39>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34cf57": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34cf57>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34cf75": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34cf75>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34cf93": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x34cf93>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34cfb1": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34cfb1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34cfcf": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34cfcf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34cfed": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34cfed>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34d029": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x34d029>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34d047": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x34d047>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34d065": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x34d065>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34d083": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x34d083>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34d0a1": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x34d0a1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34d0bf": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x34d0bf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34d0dd": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x34d0dd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34d119": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34d119>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34d137": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34d137>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34d155": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34d155>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34d191": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x34d191>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34d1af": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34d1af>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34d1cd": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34d1cd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34d209": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34d209>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34d245": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x34d245>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34d263": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x34d263>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34d281": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x34d281>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34d3ad": {
    "name": "Pin<&mut h2::client::bind_connection::{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34d408": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x34d408>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x34d426": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x34d426>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x351dc2": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x351dc2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x351eee": {
    "name": "ResponseFuture<0x351eee>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x35209a": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x35209a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3552d0": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x3552d0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x355a47": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x355a47>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x355a86": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x355a86>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x355ac5": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x355ac5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x355afb": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x355afb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x355b31": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x355b31>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x355b70": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x355b70>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x356927": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x356927>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x356966": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x356966>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x356b8d": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x356b8d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x358ccd": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x358ccd>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x358d0d": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x358d0d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x358d4c": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x358d4c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x358d6a": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x358d6a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x358e25": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x358e25>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x358e65": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x358e65>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x358ea4": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x358ea4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x358ec2": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x358ec2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x358f50": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x358f50>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x358f90": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x358f90>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x358fcf": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x358fcf>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x35900f": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x35900f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x359370": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x359370>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x35938e": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x35938e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3593ac": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3593ac>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3593ca": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3593ca>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3593e8": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3593e8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x359406": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x359406>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x359424": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x359424>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x359442": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x359442>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x359466": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x359466>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x359479": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x359479>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x35948c": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x35948c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x35949f": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x35949f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3594bd": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3594bd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3594db": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3594db>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3594f9": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3594f9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x359517": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x359517>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x359535": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x359535>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x359553": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x359553>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x359571": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x359571>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x35958f": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x35958f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3595b3": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3595b3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3595c6": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3595c6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3595d9": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3595d9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3595ec": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3595ec>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x359601": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x359601>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x359628": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x359628>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x35964f": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x35964f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x359676": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x359676>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x35a6bb": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x35a6bb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x35a6d9": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x35a6d9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x35afdc": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}>><0x35afdc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x35afef": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<tokio::net::tcp::stream::TcpStream, std::io::error::Error>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}>><0x35afef>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x35b002": {
    "name": "{closure_env#0}<core::task::poll::Poll<core::result::Result<core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, tokio::time::error::Elapsed>>, tokio::time::timeout::{impl#1}::poll::{closure_env#0}<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}>><0x35b002>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x35bfb1": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x35bfb1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x35bfd8": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x35bfd8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x35c735": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x35c735>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x35d05b": {
    "name": "{closure_env#0}<(http::uri::scheme::Scheme, http::uri::authority::Authority), (http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>><0x35d05b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x35db0c": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x35db0c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x35db86": {
    "name": "Bucket<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x35db86>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x35e1a8": {
    "name": "RustcEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, alloc::alloc::Global><0x35e1a8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x35e239": {
    "name": "RustcOccupiedEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, alloc::alloc::Global><0x35e239>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x35e275": {
    "name": "RustcVacantEntry<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, alloc::alloc::Global><0x35e275>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x35e60a": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x35e60a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x35e634": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x35e634>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x35f13b": {
    "name": "IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>><0x35f13b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x35f161": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x35f161>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x35f18e": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper::client::conn::http1::upgrades::UpgradeableConnection<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block#0}::{closure_env#2}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x35f18e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x363e84": {
    "name": "(h2::client::ResponseFuture, h2::share::SendStream<hyper::proto::h2::SendBuf<bytes::bytes::Bytes>>)<0x363e84>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x364cad": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x364cad>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x364cd4": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x364cd4>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x366050": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x366050>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3699de": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>, hyper::proto::h2::SendBuf<bytes::bytes::Bytes>><0x3699de>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x369aee": {
    "name": "{async_fn_env#0}<hyper::common::io::compat::Compat<reqwest::connect::sealed::Conn>><0x369aee>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x369dff": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x369dff>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x369e1d": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x369e1d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x369e3b": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x369e3b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x369ffd": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x369ffd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36a01b": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x36a01b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36a039": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x36a039>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36a65a": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x36a65a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36a6be": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x36a6be>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36a722": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x36a722>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36a786": {
    "name": "NonNull<futures_channel::mpsc::queue::Node<core::convert::Infallible>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36a7ea": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x36a7ea>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36add9": {
    "name": "NonNull<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36ae1f": {
    "name": "NonNull<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36aeab": {
    "name": "NonNull<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36aef1": {
    "name": "NonNull<(dyn core::future::future::Future<Output=()> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36af37": {
    "name": "NonNull<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36af7d": {
    "name": "NonNull<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36afc3": {
    "name": "NonNull<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36b095": {
    "name": "NonNull<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36b167": {
    "name": "NonNull<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36b1f3": {
    "name": "NonNull<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36b239": {
    "name": "NonNull<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36b63c": {
    "name": "Unique<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36b6ab": {
    "name": "Unique<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36b71a": {
    "name": "Unique<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36b789": {
    "name": "Unique<futures_channel::mpsc::queue::Node<core::convert::Infallible>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36b7f8": {
    "name": "Unique<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36bdc5": {
    "name": "Unique<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36be16": {
    "name": "Unique<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36beb8": {
    "name": "Unique<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36bf09": {
    "name": "Unique<(dyn core::future::future::Future<Output=()> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36bf5a": {
    "name": "Unique<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36bfab": {
    "name": "Unique<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36bffc": {
    "name": "Unique<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36c0ef": {
    "name": "Unique<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36c1e2": {
    "name": "Unique<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36c284": {
    "name": "Unique<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36c2d5": {
    "name": "Unique<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36c96f": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x36c96f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36c9b7": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x36c9b7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36ca3b": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x36ca3b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36caba": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x36caba>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36cb14": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x36cb14>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36cb32": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x36cb32>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36d05d": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x36d05d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36d099": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x36d099>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36d0b7": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::convert::Infallible>><0x36d0b7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36d183": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x36d183>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36d195": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x36d195>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36d1a7": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x36d1a7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36d413": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x36d413>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36d425": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x36d425>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36d437": {
    "name": "PhantomData<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)><0x36d437>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36d449": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>>><0x36d449>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36d45b": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x36d45b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36d827": {
    "name": "PhantomData<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36d839": {
    "name": "PhantomData<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36d84b": {
    "name": "PhantomData<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36d85d": {
    "name": "PhantomData<futures_channel::mpsc::queue::Node<core::convert::Infallible>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36d86f": {
    "name": "PhantomData<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36d9c5": {
    "name": "PhantomData<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36d9d7": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36d9fb": {
    "name": "PhantomData<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36da0d": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=()> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36da1f": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36da31": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36da43": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36da79": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36daaf": {
    "name": "PhantomData<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36dad3": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36dae5": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36de99": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x36de99>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36deb7": {
    "name": "Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>><0x36deb7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36ded5": {
    "name": "Pin<&mut futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x36ded5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36def3": {
    "name": "Pin<&mut futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x36def3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36df11": {
    "name": "Pin<&mut futures_util::future::try_future::try_flatten::TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>><0x36df11>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36e131": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x36e131>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36e14f": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x36e14f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36e224": {
    "name": "Pin<&mut futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x36e224>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36e242": {
    "name": "Pin<&mut futures_channel::oneshot::Receiver<core::convert::Infallible>><0x36e242>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36e409": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x36e409>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36e4cc": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x36e4cc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x36f7c3": {
    "name": "Option<futures_channel::oneshot::Sender<core::convert::Infallible>><0x36f7c3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3716ca": {
    "name": "Poll<core::result::Result<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, futures_channel::oneshot::Canceled>><0x3716ca>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x37172b": {
    "name": "Poll<core::result::Result<core::convert::Infallible, futures_channel::oneshot::Canceled>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x371dd8": {
    "name": "Result<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, futures_channel::oneshot::Canceled><0x371dd8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x371e57": {
    "name": "Result<core::convert::Infallible, futures_channel::oneshot::Canceled>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x377e3f": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x377e3f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x377e5d": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x377e5d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x378b8e": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x378b8e>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x378bce": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x378bce>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x378c0d": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x378c0d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x378c2b": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x378c2b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x378ce6": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x378ce6>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x378d26": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x378d26>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x378d65": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x378d65>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x378d83": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x378d83>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x378e11": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x378e11>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x378e51": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x378e51>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x378e90": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x378e90>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x378ed0": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x378ed0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x379e02": {
    "name": "{async_block_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x379e02>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x379f9b": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x379f9b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x37a0ca": {
    "name": "{async_block_env#0}<hyper_util::common::exec::Exec, reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body><0x37a0ca>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x37a25b": {
    "name": "{async_fn_env#0}<reqwest::async_impl::body::Body><0x37a25b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x37a8d7": {
    "name": "{async_fn_env#0}<reqwest::connect::sealed::Conn, reqwest::async_impl::body::Body, hyper_util::common::exec::Exec><0x37a8d7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x37e28b": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x37e28b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x37e46b": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x37e46b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x37e4aa": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x37e4aa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x37e4e9": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x37e4e9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x37e51f": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x37e51f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x37e555": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x37e555>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x37e594": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x37e594>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x37eb4b": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x37eb4b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x37eb8a": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x37eb8a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x37ebc0": {
    "name": "Arc<futures_channel::oneshot::Inner<core::convert::Infallible>, alloc::alloc::Global><0x37ebc0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x37ebff": {
    "name": "ArcInner<futures_channel::oneshot::Inner<core::convert::Infallible>><0x37ebff>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x37ec35": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x37ec35>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x37ec74": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x37ec74>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x384bf8": {
    "name": "VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x384bf8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x385e97": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState><0x385e97>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x385f36": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x385f36>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x386ae5": {
    "name": "HashMap<(http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>, std::hash::random::RandomState, alloc::alloc::Global><0x386ae5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x386cf7": {
    "name": "RawTable<((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>), alloc::alloc::Global><0x386cf7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x386f52": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x386f52>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x386f7c": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x386f7c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3886f2": {
    "name": "{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body><0x3886f2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x389ffd": {
    "name": "TryFlatten<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>><0x389ffd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x38a0f8": {
    "name": "TryFlattenProj<futures_util::future::try_future::MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, futures_util::future::either::Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x38a318": {
    "name": "MapOk<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>><0x38a318>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x38a36c": {
    "name": "IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>><0x38a36c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x38a38a": {
    "name": "IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x38a38a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x38a3af": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x38a3af>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x38a3db": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>>, futures_util::fns::MapErrFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x38a3db>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x38a45d": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x38a45d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x38a4e1": {
    "name": "Map<futures_util::future::try_future::into_future::IntoFuture<futures_util::future::try_future::MapErr<hyper_util::service::oneshot::Oneshot<reqwest::connect::Connector, http::uri::Uri>, hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>>, futures_util::fns::MapOkFn<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure_env#1}<reqwest::connect::Connector, reqwest::async_impl::body::Body>>><0x38a4e1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x38a50f": {
    "name": "Either<core::pin::Pin<alloc::boxed::Box<hyper_util::client::legacy::client::{impl#1}::connect_to::{closure#0}::{closure#1}::{async_block_env#0}<reqwest::connect::Connector, reqwest::async_impl::body::Body>, alloc::alloc::Global>>, futures_util::future::ready::Ready<core::result::Result<hyper_util::client::legacy::pool::Pooled<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>, (http::uri::scheme::Scheme, http::uri::authority::Authority)>, hyper_util::client::legacy::client::Error>>><0x38a50f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x38a80f": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x38a80f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x38a836": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x38a836>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x38a83d": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x38a83d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x38a864": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x38a864>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x38ac08": {
    "name": "((http::uri::scheme::Scheme, http::uri::authority::Authority), alloc::collections::vec_deque::VecDeque<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global>)<0x38ac08>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x38ac33": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x38ac33>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x38ac3a": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x38ac3a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x38c88a": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x38c88a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x38c8b1": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x38c8b1>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x38d844": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)<0x38d844>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x38d84b": {
    "name": "*const (dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x38dc7c": {
    "name": "*const (dyn core::future::future::Future<Output=()> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x38ddba": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x38ddba>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x38ddc1": {
    "name": "*const (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x38de78": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)<0x38de78>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x38de7f": {
    "name": "*const (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x38df36": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x38df36>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x38df3d": {
    "name": "*const (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x38e1e0": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)<0x38e1e0>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x38e1e7": {
    "name": "*const (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x38e643": {
    "name": "*const (dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x38e81e": {
    "name": "*const (dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x38e9ec": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x38e9ec>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x38e9f3": {
    "name": "*const (dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x38fa12": {
    "name": "(futures_channel::oneshot::Sender<core::convert::Infallible>, futures_channel::oneshot::Receiver<core::convert::Infallible>)",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h2e71021a18a94d6fE",
    "poll_address": "00000000004138f0"
  },
  "0x38fa30": {
    "name": "(futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, futures_channel::oneshot::Receiver<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>)",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h2e71021a18a94d6fE",
    "poll_address": "00000000004138f0"
  },
  "0x38fb97": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send)<0x38fb97>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x38fbd3": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x38fbd3>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x38fbf1": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x38fbf1>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x38fc1c": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send)<0x38fc1c>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x38fc3a": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync)<0x38fc3a>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x38fc65": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x38fc65>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x38ffa8": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>, hyper_util::client::legacy::connect::http::ConnectError>> + core::marker::Send), alloc::alloc::Global><0x38ffa8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x390048": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x390048>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x390073": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global><0x390073>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39009e": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, reqwest::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x39009e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3900e3": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<hyper_tls::stream::MaybeHttpsStream<hyper_util::rt::tokio::TokioIo<tokio::net::tcp::stream::TcpStream>>, hyper_util::client::legacy::connect::proxy::tunnel::TunnelError>> + core::marker::Send), alloc::alloc::Global><0x3900e3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39019d": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x39019d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3929b2": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x3929b2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x392a75": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x392a75>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3937da": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x3937da>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3937f8": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x3937f8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x393816": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x393816>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x393834": {
    "name": "NonNull<tokio::runtime::task::core::Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x393834>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3938e8": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x3938e8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x393906": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x393906>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x393924": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x393924>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3939d8": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x3939d8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x395d1f": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x395d1f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x395d31": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x395d31>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x395d43": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x395d43>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x395daf": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>>><0x395daf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x395dc1": {
    "name": "PhantomData<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x395dc1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3962b8": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x3962b8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3962d6": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x3962d6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3967ca": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x3967ca>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x396806": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x396806>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39687e": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x39687e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39689c": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x39689c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3968ba": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x3968ba>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x396b68": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x396b68>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x396ba4": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x396ba4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x396c1c": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x396c1c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x396c3a": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x396c3a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x396c76": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x396c76>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x396c94": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x396c94>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x396cb2": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x396cb2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x396cd0": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x396cd0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x396cee": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x396cee>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x396d48": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x396d48>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x396d66": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x396d66>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x396d84": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x396d84>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x396dc0": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x396dc0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x396dde": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x396dde>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x396e56": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x396e56>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x396e74": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x396e74>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x396eb0": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x396eb0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x396ece": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x396ece>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x396eec": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x396eec>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x396f28": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x396f28>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x396f46": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x396f46>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x396f64": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>>><0x396f64>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x397072": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x397072>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3970ae": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>><0x3970ae>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x397d81": {
    "name": "Pin<&mut hyper_util::common::future::PollFn<hyper_util::client::legacy::connect::dns::resolve::{async_fn#0}::{closure_env#0}<reqwest::dns::resolve::DynResolver>>><0x397d81>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x397dbe": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>><0x397dbe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x397dfb": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x397dfb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x397e37": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x397e37>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x397e55": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>><0x397e55>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x397eaf": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>><0x397eaf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x397ecd": {
    "name": "Pin<&mut futures_util::future::poll_fn::PollFn<hyper::client::conn::http2::{impl#1}::ready::{async_fn#0}::{closure_env#0}<reqwest::async_impl::body::Body>>><0x397ecd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x397eeb": {
    "name": "Pin<&mut futures_util::future::poll_fn::PollFn<hyper::client::conn::http1::{impl#1}::ready::{async_fn#0}::{closure_env#0}<reqwest::async_impl::body::Body>>><0x397eeb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3981a5": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x3981a5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3981c3": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x3981c3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3981e1": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x3981e1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3981ff": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x3981ff>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39821d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x39821d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39823b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x39823b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x398259": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x398259>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x398277": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x398277>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x398295": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x398295>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3982d1": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x3982d1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3982ef": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x3982ef>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39830d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x39830d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39832b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x39832b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x398349": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x398349>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x398385": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x398385>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3983a3": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x3983a3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3983c1": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::drop_join_handle_slow::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x3983c1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3983df": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x3983df>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3983fd": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x3983fd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39841b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::{impl#2}::complete::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x39841b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x398439": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x398439>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x398457": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>>><0x398457>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3984cf": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x3984cf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3984ed": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::cancel_task::{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>><0x3984ed>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39a1d1": {
    "name": "RawVec<futures_channel::oneshot::Sender<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x39a1d1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39b5ff": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x39b5ff>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39b63e": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x39b63e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39b67d": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x39b67d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39b6b3": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x39b6b3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39b6e9": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x39b6e9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39b728": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x39b728>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39b936": {
    "name": "Arc<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>, alloc::alloc::Global><0x39b936>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39b975": {
    "name": "ArcInner<futures_channel::oneshot::Inner<hyper_util::client::legacy::client::PoolClient<reqwest::async_impl::body::Body>>><0x39b975>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39cc0a": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x39cc0a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39fe2a": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>><0x39fe2a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x39fe48": {
    "name": "UnsafeCell<tokio::runtime::task::core::Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>>><0x39fe48>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a021a": {
    "name": "{closure_env#0}<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x3a021a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a0238": {
    "name": "{closure_env#0}<reqwest::connect::{impl#2}::connect_via_proxy::{async_fn_env#0}><0x3a0238>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a0256": {
    "name": "{closure_env#0}<reqwest::connect::{impl#2}::connect_with_maybe_proxy::{async_fn_env#0}><0x3a0256>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a0bdb": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a0bdb>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x3a0c1b": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a0c1b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a0c5a": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x3a0c5a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a0c78": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>><0x3a0c78>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a0d33": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a0d33>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a0d72": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a0d72>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x3a0db2": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a0db2>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x3a0df2": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a0df2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a0e31": {
    "name": "CoreStage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x3a0e31>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a0e4f": {
    "name": "Stage<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>><0x3a0e4f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a0edd": {
    "name": "Cell<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a0edd>",
    "poll_symbol": "_ZN5tokio7runtime4time5entry9StateCell4poll17hd77227d8f09e047fE",
    "poll_address": "000000000058e510"
  },
  "0x3a0f1d": {
    "name": "Core<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a0f1d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a11e7": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a11e7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a1205": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a1205>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a1223": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a1223>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a1241": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a1241>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a125f": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a125f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a127d": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a127d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a129b": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a129b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a12b9": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a12b9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a12dd": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a12dd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a12f0": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a12f0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a1303": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a1303>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a1316": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a1316>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a132b": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a132b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a1357": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a1357>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a1375": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a1375>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a1393": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a1393>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a13b1": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a13b1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a13cf": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a13cf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a13ed": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a13ed>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a140b": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a140b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a1429": {
    "name": "{closure_env#1}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a1429>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a1448": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a1448>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a1474": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a1474>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a1487": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a1487>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a149a": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a149a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a14ad": {
    "name": "{closure_env#0}<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a14ad>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a14c1": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>><0x3a14c1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a14e8": {
    "name": "Harness<core::pin::Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>, alloc::alloc::Global>>, alloc::sync::Arc<tokio::runtime::scheduler::current_thread::Handle, alloc::alloc::Global>><0x3a14e8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a943d": {
    "name": "<tower::util::map_future::MapFuture<tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>>> as tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable>>::{vtable_type}<0x3a943d>",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x3a949a": {
    "name": "MapFuture<tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>, reqwest::connect::{impl#1}::build::{closure_env#2}>>><0x3a949a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a94f9": {
    "name": "MapFuture<tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>>><0x3a94f9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a9558": {
    "name": "MapFuture<tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>>><0x3a9558>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a9baf": {
    "name": "alloc::boxed::Box<(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x3a9baf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a9bd6": {
    "name": "(dyn tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable, Future=core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global>>, Response=reqwest::connect::sealed::Conn, Error=alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>> + core::marker::Send + core::marker::Sync)<0x3a9bd6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3a9bf0": {
    "name": "<tower::util::map_future::MapFuture<tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_request::MapRequest<reqwest::connect::ConnectorService, reqwest::connect::{impl#1}::build::{closure_env#0}>>> as tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable>>::{vtable_type}<0x3a9bf0>",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x3a9f82": {
    "name": "{async_fn_env#0}<reqwest::dns::resolve::DynResolver><0x3a9f82>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3aa168": {
    "name": "GaiFuture<0x3aa168>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x3aaa17": {
    "name": "<tower::util::map_future::MapFuture<tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>, tower::util::boxed_clone_sync::{impl#0}::new::{closure_env#0}<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, tower::util::map_err::MapErr<tower::timeout::Timeout<tower::util::boxed_clone_sync::BoxCloneSyncService<reqwest::connect::sealed::Unnameable, reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>>, reqwest::connect::{impl#1}::build::{closure_env#1}>>> as tower::util::boxed_clone_sync::CloneService<reqwest::connect::sealed::Unnameable>>::{vtable_type}<0x3aaa17>",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x3ab11f": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x3ab11f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3ab146": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<alloc::boxed::Box<(dyn core::iter::traits::iterator::Iterator<Item=core::net::socket_addr::SocketAddr> + core::marker::Send), alloc::alloc::Global>, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x3ab146>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x3b14df": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x3b14df>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3b1506": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x3b1506>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x3b2014": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x3b2014>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3b203e": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x3b203e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3b37ee": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send), alloc::alloc::Global><0x3b37ee>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x3b3815": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<reqwest::connect::sealed::Conn, alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>> + core::marker::Send)<0x3b3815>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x59f713": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x59f713>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x59f752": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x59f752>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5a0191": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x5a0191>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5a147a": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x5a147a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5a4534": {
    "name": "{async_fn_env#0}<0x5a4534>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5a4b5d": {
    "name": "{async_fn_env#0}<core::option::Option<hyper_util::client::legacy::connect::Connected>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5a4c18": {
    "name": "{async_fn_env#0}<core::option::Option<hyper_util::client::legacy::connect::Connected>><0x5a4c18>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5a5cd5": {
    "name": "Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<core::option::Option<hyper_util::client::legacy::connect::Connected>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5a9282": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x5a9282>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5a9289": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x5a9289>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5ab611": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x5ab611>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5ab6d4": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5ab6d4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5ac4e5": {
    "name": "Unique<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5acb80": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x5acb80>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5acc16": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x5acc16>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5acc34": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x5acc34>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5acc52": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x5acc52>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5accca": {
    "name": "NonNull<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5ad309": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x5ad309>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5ad375": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x5ad375>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5ad387": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x5ad387>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5ad3bd": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x5ad3bd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5ad4cb": {
    "name": "PhantomData<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5ae5f1": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5ae5f1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5ae60f": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x5ae60f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5ae62d": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x5ae62d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5ae756": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5ae756>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5ae774": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x5ae774>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5b246b": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x5b246b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5b660f": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x5b660f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5b664e": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x5b664e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5b676e": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x5b676e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5b67ad": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x5b67ad>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5b67ec": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x5b67ec>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5b6822": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5b6822>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5b6858": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x5b6858>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5b6897": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x5b6897>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5b8c2d": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x5b8c2d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5b8c34": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x5b8c34>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5b9349": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5b9349>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5b9373": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5b9373>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5b9ec8": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)<0x5b9ec8>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x5b9ecf": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x5ba04d": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global><0x5ba04d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5bbb23": {
    "name": "SyncWrapper<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>>><0x5bbb23>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5beda6": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5bede2": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5bee3c": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5bef0e": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5bfd4f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5bfdc7": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5bfe7b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5c001f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5c0f45": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>><0x5c0f45>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5c34c1": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global><0x5c34c1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5c34e8": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)<0x5c34e8>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x5c3a99": {
    "name": "{async_fn_env#0}<0x5c3a99>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5c3cf6": {
    "name": "{async_block_env#0}<0x5c3cf6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5c52a5": {
    "name": "{async_fn_env#0}<0x5c52a5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5c7b65": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)><0x5c7b65>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5c7bc6": {
    "name": "Option<(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x5c7bc6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5c8ef6": {
    "name": "Result<hyper_util::client::legacy::connect::http::connect::{async_block_env#0}, hyper_util::client::legacy::connect::http::ConnectError><0x5c8ef6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5ca64a": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}><0x5ca64a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5ca729": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, hyper_util::client::legacy::connect::http::ConnectError>, hyper_util::client::legacy::connect::http::connect::{async_block_env#0}><0x5ca729>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5cdf67": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x5cdf67>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5cfbfc": {
    "name": "{async_fn_env#0}<0x5cfbfc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5cfd19": {
    "name": "{async_fn_env#0}<0x5cfd19>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d1979": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>><0x5d1979>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d19a0": {
    "name": "Select<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>><0x5d19a0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d19cd": {
    "name": "Either<(core::result::Result<tokio::net::tcp::stream::TcpStream, hyper_util::client::legacy::connect::http::ConnectError>, core::pin::Pin<&mut tokio::time::sleep::Sleep>), ((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)><0x5d19cd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d1a4c": {
    "name": "Either<core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>><0x5d1a4c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d1ae9": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut tokio::time::sleep::Sleep>)<0x5d1ae9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d1b25": {
    "name": "((), core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x5d1b25>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d1b43": {
    "name": "(core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>, core::pin::Pin<&mut hyper_util::client::legacy::connect::http::{impl#17}::connect::{async_fn_env#0}>)<0x5d1b43>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d38dc": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x5d38dc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d4a66": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x5d4a66>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d4aa5": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x5d4aa5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d4ae4": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x5d4ae4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d4b1a": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5d4b1a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d4b50": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x5d4b50>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d4b8f": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x5d4b8f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d50b0": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x5d50b0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d50ce": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x5d50ce>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d50ec": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x5d50ec>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d53a9": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x5d53a9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d53bb": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x5d53bb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d53f1": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x5d53f1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d5fbc": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x5d5fbc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d607f": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5d607f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d74a6": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5d74a6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d74c4": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x5d74c4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d76ad": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5d76ad>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d76cb": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x5d76cb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d76e9": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x5d76e9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d8c03": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0x5d8c03>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d8d4d": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0x5d8d4d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d8de3": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0x5d8de3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d8e3d": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0x5d8e3d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d8edf": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0x5d8edf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d8f93": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0x5d8f93>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d900b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0x5d900b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d9047": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0x5d9047>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d9ca3": {
    "name": "Pin<&mut core::pin::Pin<alloc::boxed::Box<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d9ce0": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>, alloc::alloc::Global>><0x5d9ce0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d9d3c": {
    "name": "Pin<&mut futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5d9fdd": {
    "name": "Pin<&mut hyper_util::client::legacy::client::ResponseFuture><0x5d9fdd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5da039": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>><0x5da039>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5da0b3": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::dns::GaiFuture><0x5da0b3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5da566": {
    "name": "GaiFuture<0x5da566>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x5daa2c": {
    "name": "ResponseFuture<0x5daa2c>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x5daa4e": {
    "name": "SyncWrapper<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>>><0x5daa4e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5de519": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5de519>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5de543": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5de543>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5dec55": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global><0x5dec55>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5dec7c": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)<0x5dec7c>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x5e045f": {
    "name": "<core::pin::Pin<alloc::boxed::Box<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>, alloc::alloc::Global>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x5e04a1": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>, alloc::alloc::Global>><0x5e04a1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e04dd": {
    "name": "Pin<alloc::boxed::Box<core::pin::Pin<alloc::boxed::Box<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>, alloc::alloc::Global>>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e04fb": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>><0x5e04fb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e0538": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e062a": {
    "name": "Pin<&mut hyper_util::client::legacy::client::ResponseFuture><0x5e062a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e0648": {
    "name": "Pin<&mut hyper_util::client::legacy::connect::dns::GaiFuture><0x5e0648>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e2591": {
    "name": "Result<hyper_util::client::legacy::connect::http::connect::{async_block_env#0}, hyper_util::client::legacy::connect::http::ConnectError><0x5e2591>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e2d1c": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5e2d1c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e2d64": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x5e2d64>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e2e49": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5e2e49>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e2ea3": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x5e2ea3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e2ec1": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x5e2ec1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e341d": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x5e341d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e34e0": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5e34e0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e519e": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x5e519e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e51bc": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x5e51bc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e51da": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x5e51da>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e5522": {
    "name": "NonNull<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x5e5522>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e55f5": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x5e55f5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e5607": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x5e5607>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e563d": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x5e563d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e5ac5": {
    "name": "PhantomData<alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)>><0x5e5ac5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e7369": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x5e7369>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e73a8": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x5e73a8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e73e7": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x5e73e7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e741d": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5e741d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e7453": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x5e7453>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e7492": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x5e7492>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e7e9d": {
    "name": "Arc<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global><0x5e7e9d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e7edc": {
    "name": "ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x5e7edc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e87de": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5e87de>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e8808": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x5e8808>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5e8c45": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x5e8c45>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5eaff3": {
    "name": "ResponseFuture<0x5eaff3>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x5ebfee": {
    "name": "{async_block_env#0}<0x5ebfee>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5ec665": {
    "name": "GaiFuture<0x5ec665>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x5ecf1a": {
    "name": "SyncWrapper<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global>>><0x5ecf1a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5ed364": {
    "name": "Timeout<tokio::net::tcp::socket::{impl#0}::connect::{async_fn_env#0}><0x5ed364>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5ef4c1": {
    "name": "{async_fn_env#0}<0x5ef4c1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5ef5de": {
    "name": "{async_fn_env#0}<0x5ef5de>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5f18fd": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send), alloc::alloc::Global><0x5f18fd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5f1924": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)<0x5f1924>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x5f1bdc": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>> + core::marker::Send)<0x5f1bdc>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x5f1c23": {
    "name": "(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)<0x5f1c23>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5f1c2a": {
    "name": "*const alloc::sync::ArcInner<(dyn hyper::rt::Executor<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>> + core::marker::Send + core::marker::Sync)><0x5f1c2a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5ffd51": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5ffd51>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5ffd84": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x5ffd84>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5ffe69": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x5ffe69>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5ffea5": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x5ffea5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x5ffec3": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x5ffec3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6003eb": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x6003eb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x600409": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x600409>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x600427": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x600427>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x60229c": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x60229c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6022ae": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x6022ae>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6022e4": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x6022e4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6036f3": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0x6036f3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x60372f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0x60372f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x60374d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0x60374d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x603789": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<hyper_util::client::legacy::connect::dns::{impl#7}::call::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0x603789>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6045f4": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x6045f4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6046b7": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x6046b7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x607905": {
    "name": "Pin<alloc::boxed::Box<futures_util::future::ready::Ready<core::result::Result<http::response::Response<hyper::body::incoming::Incoming>, hyper_util::client::legacy::client::Error>>, alloc::alloc::Global>><0x607905>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x60849e": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x60849e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6084dd": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x6084dd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x60851c": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x60851c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x608552": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x608552>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x608588": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x608588>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6085c7": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x6085c7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x609fa1": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x609fa1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x60f123": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x60f123>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x60f14d": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x60f14d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6519d6": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x6519d6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x651c5e": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x651c5e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x651cd9": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x651cd9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x652a0b": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x652a0b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x652a29": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x652a29>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x653521": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x653521>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x653557": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x653557>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x653569": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x653569>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6536e1": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x6536e1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6537b3": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6537b3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6537d1": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x6537d1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6543fa": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x6543fa>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x659b03": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x659b03>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x659b39": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x659b39>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x659da3": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x659da3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x659dd9": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x659dd9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x659e83": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x659e83>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x659eb9": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x659eb9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x65b20d": {
    "name": "Weak<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, &alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x65c5a5": {
    "name": "Weak<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, &alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x65c65b": {
    "name": "Weak<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, &alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x65f157": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x65f157>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x661ae0": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x661ae0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x661b0a": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x661b0a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x661c2c": {
    "name": "(*mut alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>, alloc::alloc::Global)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x662163": {
    "name": "(*mut alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>, alloc::alloc::Global)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x662392": {
    "name": "(*mut alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>, alloc::alloc::Global)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6669cd": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6669cd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x666a7c": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x666a7c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x66712a": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x66712a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x667186": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x667186>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6671c3": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x6671c3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x66734c": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x66734c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x66736a": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x66736a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x66756d": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x66756d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x66757f": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x66757f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x667ea2": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x667ea2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x667f65": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x667f65>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x667fc6": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x667fc6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6684d9": {
    "name": "Option<&alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x668ddc": {
    "name": "Poll<core::result::Result<(), futures_channel::mpsc::SendError>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x669d74": {
    "name": "Result<(), futures_channel::mpsc::SendError>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x669df3": {
    "name": "Result<(), futures_channel::mpsc::TrySendError<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x669e72": {
    "name": "Result<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>, std::sync::poison::PoisonError<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>>><0x669e72>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x66a519": {
    "name": "Result<core::convert::Infallible, futures_channel::mpsc::SendError>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x66b1c5": {
    "name": "Pin<&mut futures_channel::mpsc::Receiver<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x66b6b5": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x66b6b5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x66b6f4": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x66b6f4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x66b733": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x66b733>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x66b769": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x66b769>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x66cad3": {
    "name": "MutexGuard<futures_channel::mpsc::SenderTask><0x66cad3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x66cb1c": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x66cb1c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x66cd2f": {
    "name": "{closure_env#0}<futures_channel::mpsc::SenderTask>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x66d1c5": {
    "name": "PoisonError<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>><0x66d1c5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x66e7ca": {
    "name": "<std::sync::poison::PoisonError<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>> as core::fmt::Debug>::{vtable_type}<0x66e7ca>",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x66ead3": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x66ead3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x66eafd": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x66eafd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x672526": {
    "name": "(futures_channel::mpsc::Sender<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, futures_channel::mpsc::Receiver<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>)",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h2e71021a18a94d6fE",
    "poll_address": "00000000004138f0"
  },
  "0x676045": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x676045>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6771f3": {
    "name": "Result<(), futures_channel::mpsc::TrySendError<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6771f3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x677786": {
    "name": "Result<(), futures_channel::mpsc::SendError><0x677786>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x677805": {
    "name": "Result<core::convert::Infallible, futures_channel::mpsc::SendError><0x677805>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x677ad6": {
    "name": "Result<&mut futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, futures_channel::mpsc::SendError>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x677bbe": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x677bbe>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x677bdc": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x677bdc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x677cf1": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x677cf1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x677d0f": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x677d0f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x677d2d": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x677d2d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x677e76": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x677e76>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x677e94": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x677e94>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x678101": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x678101>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x678113": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x678113>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x67a2f5": {
    "name": "ControlFlow<core::result::Result<core::convert::Infallible, futures_channel::mpsc::SendError>, &mut futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x67ad77": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x67ad77>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x67be89": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x67be89>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x67bec8": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x67bec8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x67bf07": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x67bf07>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x67bf3d": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x67bf3d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x67c297": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x67c297>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x67c2c1": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x67c2c1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x67ffe3": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x67ffe3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6802cd": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x6802cd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6802eb": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x6802eb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x680309": {
    "name": "NonNull<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x68036d": {
    "name": "NonNull<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x680499": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x680499>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x68071d": {
    "name": "Unique<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x68078c": {
    "name": "Unique<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x681247": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x681247>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6812a1": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x6812a1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6812d7": {
    "name": "PhantomData<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6812e9": {
    "name": "PhantomData<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x681343": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x681343>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x681543": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x681543>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x68158b": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x68158b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6815ec": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6815ec>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x681646": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x681646>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x681664": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x681664>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x681b4c": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x681b4c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x681db7": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x681db7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x683753": {
    "name": "Result<http::header::map::HeaderMap<http::header::value::HeaderValue>, futures_channel::oneshot::Canceled>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x683e2c": {
    "name": "Poll<core::result::Result<http::header::map::HeaderMap<http::header::value::HeaderValue>, futures_channel::oneshot::Canceled>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x684f3e": {
    "name": "Pin<&mut futures_channel::mpsc::Receiver<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x684f3e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x684fb9": {
    "name": "Pin<&futures_channel::mpsc::Receiver<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x685155": {
    "name": "Pin<&mut futures_channel::oneshot::Receiver<http::header::map::HeaderMap<http::header::value::HeaderValue>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x685192": {
    "name": "Pin<&futures_channel::oneshot::Receiver<http::header::map::HeaderMap<http::header::value::HeaderValue>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x68a38a": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x68a38a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x68a3c9": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x68a3c9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x68a3ff": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x68a3ff>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x68a43e": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x68a43e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x68a474": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x68a474>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x68a4b3": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x68a4b3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x68bc0d": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x68bc0d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x68bc55": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x68bc55>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x68be13": {
    "name": "PopResult<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x68f10b": {
    "name": "(futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>, futures_channel::oneshot::Receiver<http::header::map::HeaderMap<http::header::value::HeaderValue>>)",
    "poll_symbol": "_ZN5hyper4body8incoming6Sender9poll_want17h2e71021a18a94d6fE",
    "poll_address": "00000000004138f0"
  },
  "0x690b19": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x690b19>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x690bdc": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x690bdc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x691015": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x691015>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x691076": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x691076>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x691498": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x691498>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6914e0": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x6914e0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6915b9": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6915b9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x691613": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x691613>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x691631": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x691631>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x691931": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x691931>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x69194f": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x69194f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x69196d": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x69196d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x691f34": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x691f34>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x691f46": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x691f46>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x691f7c": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x691f7c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x696321": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x696321>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x696360": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x696360>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x69639f": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x69639f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6963d5": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6963d5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x69640b": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x69640b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x69644a": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x69644a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x698e57": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x698e57>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x699ea2": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x699ea2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x699ecc": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x699ecc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x69ec50": {
    "name": "Poll<core::result::Result<(), futures_channel::mpsc::SendError>><0x69ec50>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6a07e8": {
    "name": "Result<(), futures_channel::mpsc::SendError><0x6a07e8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6a0ad6": {
    "name": "Result<core::convert::Infallible, futures_channel::mpsc::SendError><0x6a0ad6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6a94ef": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6a94ef>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6a950d": {
    "name": "AtomicPtr<futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x6a950d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6a9605": {
    "name": "UnsafeCell<futures_channel::mpsc::SenderTask><0x6a9605>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6a967d": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6a967d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6a969b": {
    "name": "UnsafeCell<*mut futures_channel::mpsc::queue::Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>>><0x6a969b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6a9aa8": {
    "name": "NonNull<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x6a9aa8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6a9ae4": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x6a9ae4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6a9b02": {
    "name": "NonNull<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x6a9b02>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6aca76": {
    "name": "PhantomData<alloc::sync::ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>>><0x6aca76>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6aca9a": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>>><0x6aca9a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6acaac": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>><0x6acaac>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6add5f": {
    "name": "Option<futures_channel::lock::TryLock<core::option::Option<http::header::map::HeaderMap<http::header::value::HeaderValue>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6addc0": {
    "name": "Option<futures_channel::lock::TryLock<core::option::Option<core::task::wake::Waker>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6aec45": {
    "name": "Option<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x6aec45>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6af001": {
    "name": "Option<futures_channel::oneshot::Sender<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x6af001>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6af081": {
    "name": "Option<&mut futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6af170": {
    "name": "Option<alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x6af170>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6af24d": {
    "name": "Option<&mut alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6af2ae": {
    "name": "Option<futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6af2ae>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6af4a6": {
    "name": "Option<&alloc::sync::Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global>><0x6af4a6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6b19e1": {
    "name": "Result<&mut futures_channel::mpsc::BoundedSenderInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, futures_channel::mpsc::SendError><0x6b19e1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6b1cf5": {
    "name": "Result<(), futures_channel::mpsc::SendError><0x6b1cf5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6b1f72": {
    "name": "Result<(), futures_channel::mpsc::TrySendError<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6b1f72>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6b3085": {
    "name": "Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global><0x6b3085>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6b30c4": {
    "name": "ArcInner<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>><0x6b30c4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6b316f": {
    "name": "Arc<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, alloc::alloc::Global><0x6b316f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6b31ae": {
    "name": "ArcInner<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>><0x6b31ae>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6b31e4": {
    "name": "Arc<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, alloc::alloc::Global><0x6b31e4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6b3223": {
    "name": "ArcInner<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>><0x6b3223>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6b34d5": {
    "name": "Weak<futures_channel::oneshot::Inner<http::header::map::HeaderMap<http::header::value::HeaderValue>>, &alloc::alloc::Global><0x6b34d5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6b353b": {
    "name": "Weak<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, &alloc::alloc::Global><0x6b353b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6b35d4": {
    "name": "Weak<futures_channel::mpsc::BoundedInner<core::result::Result<bytes::bytes::Bytes, hyper::error::Error>>, &alloc::alloc::Global><0x6b35d4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6b3ee3": {
    "name": "Mutex<futures_channel::mpsc::SenderTask><0x6b3ee3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6b3faf": {
    "name": "MutexGuard<futures_channel::mpsc::SenderTask><0x6b3faf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6b4083": {
    "name": "PoisonError<std::sync::poison::mutex::MutexGuard<futures_channel::mpsc::SenderTask>><0x6b4083>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6b4fc9": {
    "name": "Queue<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x6b4fc9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x6b4ff3": {
    "name": "Node<alloc::sync::Arc<std::sync::poison::mutex::Mutex<futures_channel::mpsc::SenderTask>, alloc::alloc::Global>><0x6b4ff3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x70527c": {
    "name": "{async_fn_env#0}<0x70527c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x70534f": {
    "name": "{async_fn_env#0}<0x70534f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x705517": {
    "name": "{async_fn_env#0}<0x705517>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x748c67": {
    "name": "ResponseFuture<0x748c67>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x748c88": {
    "name": "PushedResponseFuture",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x74afc0": {
    "name": "Pin<&mut h2::client::ResponseFuture><0x74afc0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x74b03b": {
    "name": "Pin<&h2::client::ResponseFuture>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x74b1dd": {
    "name": "Pin<&mut h2::client::PushedResponseFuture>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7602c0": {
    "name": "Pin<&mut h2::client::ResponseFuture><0x7602c0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7602de": {
    "name": "Pin<&mut h2::client::PushedResponseFuture><0x7602de>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x76385c": {
    "name": "ResponseFuture<0x76385c>",
    "poll_symbol": "_ZN99_$LT$hyper_util..client..legacy..client..ResponseFuture$u20$as$u20$core..future..future..Future$GT$4poll17h1272e9d997002bc7E",
    "poll_address": "00000000003e07c0"
  },
  "0x7638f9": {
    "name": "{async_fn_env#0}<0x7638f9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x763a2b": {
    "name": "PushedResponseFuture<0x763a2b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x76921d": {
    "name": "(http::request::Request<()>, h2::client::PushedResponseFuture)",
    "poll_symbol": "_ZN92_$LT$reqwest..async_impl..client..PendingRequest$u20$as$u20$core..future..future..Future$GT$4poll17h9d0eff5ef029ab99E",
    "poll_address": "000000000028f0b0"
  },
  "0x7d590e": {
    "name": "WaitForCancellationFuture",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7d5945": {
    "name": "WaitForCancellationFutureOwned",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7d5bd0": {
    "name": "ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7d5d38": {
    "name": "{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7d5f2f": {
    "name": "{closure_env#0}<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, (), tokio_util::sync::reusable_box::{impl#0}::try_set::real_try_set::{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7d5f59": {
    "name": "CallOnDrop<(), tokio_util::sync::reusable_box::reuse_pin_box::{closure_env#0}<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, (), tokio_util::sync::reusable_box::{impl#0}::try_set::real_try_set::{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7d6d8d": {
    "name": "Option<(u32, tokio_util::sync::reusable_box::ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7d6ea0": {
    "name": "{closure_env#0}<(u32, tokio_util::sync::reusable_box::ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7d6eb5": {
    "name": "Option<&mut (u32, tokio_util::sync::reusable_box::ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7d7a2a": {
    "name": "NonNull<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7d7a66": {
    "name": "NonNull<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7d7b03": {
    "name": "Unique<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7d7b4b": {
    "name": "Unique<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7d8534": {
    "name": "PhantomData<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7d8546": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7d93f3": {
    "name": "Result<(), tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7da71f": {
    "name": "ManuallyDrop<tokio_util::sync::reusable_box::reuse_pin_box::{closure_env#0}<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, (), tokio_util::sync::reusable_box::{impl#0}::try_set::real_try_set::{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7da75b": {
    "name": "ManuallyDrop<tokio_util::sync::reusable_box::CallOnDrop<(), tokio_util::sync::reusable_box::reuse_pin_box::{closure_env#0}<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, (), tokio_util::sync::reusable_box::{impl#0}::try_set::real_try_set::{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7da7e6": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7da939": {
    "name": "Pin<alloc::boxed::Box<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7da957": {
    "name": "Pin<alloc::boxed::Box<core::future::pending::Pending<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7da975": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7da993": {
    "name": "Pin<&mut tokio_util::sync::cancellation_token::WaitForCancellationFuture>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7da9b1": {
    "name": "Pin<&mut tokio_util::sync::cancellation_token::WaitForCancellationFutureOwned>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7dd1ce": {
    "name": "{async_fn_env#0}<0x7dd1ce>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7dd878": {
    "name": "<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0} as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x7dd8d0": {
    "name": "<core::future::pending::Pending<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x7ddd76": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ddd9d": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x7ddf4f": {
    "name": "&(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x7de0ad": {
    "name": "(u32, tokio_util::sync::reusable_box::ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7df90d": {
    "name": "*const (dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x7e0208": {
    "name": "&mut (dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x7e0359": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x7e1310": {
    "name": "{async_fn_env#0}<0x7e1310>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7e1e3c": {
    "name": "Option<(u32, tokio_util::sync::reusable_box::ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>)><0x7e1e3c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7e20ee": {
    "name": "{closure_env#0}<(u32, tokio_util::sync::reusable_box::ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>)><0x7e20ee>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7e566f": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), alloc::alloc::Global>><0x7e566f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7e573d": {
    "name": "Pin<&(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7e57f3": {
    "name": "Pin<alloc::boxed::Box<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, alloc::alloc::Global>><0x7e57f3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7e5811": {
    "name": "Pin<&mut core::future::pending::Pending<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7e5858": {
    "name": "ManuallyDrop<tokio_util::sync::reusable_box::reuse_pin_box::{closure_env#0}<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, (), tokio_util::sync::reusable_box::{impl#0}::try_set::real_try_set::{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>>><0x7e5858>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7e7832": {
    "name": "{closure_env#0}<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, (), tokio_util::sync::reusable_box::{impl#0}::try_set::real_try_set::{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>><0x7e7832>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7e786b": {
    "name": "{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}><0x7e786b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7e7881": {
    "name": "ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>><0x7e7881>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7e789f": {
    "name": "CallOnDrop<(), tokio_util::sync::reusable_box::reuse_pin_box::{closure_env#0}<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}, (), tokio_util::sync::reusable_box::{impl#0}::try_set::real_try_set::{closure_env#0}<tokio::sync::semaphore::{impl#0}::acquire_many_owned::{async_fn_env#0}>>><0x7e789f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7e9285": {
    "name": "*mut (dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)<0x7e9285>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x7e92ac": {
    "name": "(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)<0x7e92ac>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x7e92e7": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send), alloc::alloc::Global><0x7e92e7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ea4fb": {
    "name": "&(dyn core::future::future::Future<Output=core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>> + core::marker::Send)<0x7ea4fb>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x7ea60d": {
    "name": "(u32, tokio_util::sync::reusable_box::ReusableBoxFuture<core::result::Result<tokio::sync::semaphore::OwnedSemaphorePermit, tokio::sync::batch_semaphore::AcquireError>>)<0x7ea60d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ec0ce": {
    "name": "<&*mut futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>> as core::fmt::Debug>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x7ec134": {
    "name": "Task<futures_task::future_obj::FutureObj<()>>",
    "poll_symbol": "_ZN5tokio7runtime4task3raw7RawTask4poll17h826bcfb99dbd294cE",
    "poll_address": "000000000058b5a0"
  },
  "0x7ec1ce": {
    "name": "Task<futures_task::future_obj::LocalFutureObj<()>>",
    "poll_symbol": "_ZN5tokio7runtime4task3raw7RawTask4poll17h826bcfb99dbd294cE",
    "poll_address": "000000000058b5a0"
  },
  "0x7ec2d6": {
    "name": "ReadyToRunQueue<futures_task::future_obj::FutureObj<()>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ec337": {
    "name": "ReadyToRunQueue<futures_task::future_obj::LocalFutureObj<()>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ec4a2": {
    "name": "FuturesUnordered<futures_task::future_obj::LocalFutureObj<()>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ec53a": {
    "name": "FuturesUnordered<futures_task::future_obj::FutureObj<()>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ec929": {
    "name": "PollStateBomb<fn(&futures_util::stream::stream::flatten_unordered::SharedPollState) -> u8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ec976": {
    "name": "PollStateBomb<fn(&futures_util::stream::stream::flatten_unordered::SharedPollState) -> u8><0x7ec976>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ecc84": {
    "name": "FutureObj<()>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ecca2": {
    "name": "LocalFutureObj<()>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ecd2c": {
    "name": "*mut dyn core::future::future::Future<Output=()>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x7ecd53": {
    "name": "dyn core::future::future::Future<Output=()>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x7ecdab": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ecdbd": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ece05": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_util::abortable::AbortInner>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ece17": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::LocalFutureObj<()>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ece29": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::FutureObj<()>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ece3b": {
    "name": "PhantomData<alloc::sync::ArcInner<futures_util::stream::stream::flatten_unordered::WrappedWaker>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ece53": {
    "name": "UnsafeCell<core::option::Option<futures_task::future_obj::FutureObj<()>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ece90": {
    "name": "UnsafeCell<*mut futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ececd": {
    "name": "UnsafeCell<*const futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ecfa2": {
    "name": "UnsafeCell<core::option::Option<futures_task::future_obj::LocalFutureObj<()>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ecfdf": {
    "name": "UnsafeCell<*mut futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ed01c": {
    "name": "UnsafeCell<*const futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ed05f": {
    "name": "Option<futures_task::future_obj::FutureObj<()>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ed140": {
    "name": "Option<futures_task::future_obj::LocalFutureObj<()>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ed3b1": {
    "name": "Option<fn(&futures_util::stream::stream::flatten_unordered::SharedPollState) -> u8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ed676": {
    "name": "Option<(u8, futures_util::stream::stream::flatten_unordered::PollStateBomb<fn(&futures_util::stream::stream::flatten_unordered::SharedPollState) -> u8>)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ed6d7": {
    "name": "Option<fn(&futures_util::stream::stream::flatten_unordered::SharedPollState) -> u8><0x7ed6d7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ed739": {
    "name": "Option<(u8, futures_util::stream::stream::flatten_unordered::PollStateBomb<fn(&futures_util::stream::stream::flatten_unordered::SharedPollState) -> u8>)><0x7ed739>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ed8e0": {
    "name": "AtomicPtr<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7edaa1": {
    "name": "AtomicPtr<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ee72a": {
    "name": "NonNull<alloc::sync::ArcInner<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ee7a5": {
    "name": "NonNull<alloc::sync::ArcInner<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::FutureObj<()>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ee801": {
    "name": "NonNull<alloc::sync::ArcInner<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7ee87c": {
    "name": "NonNull<alloc::sync::ArcInner<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::LocalFutureObj<()>>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7eea28": {
    "name": "NonNull<alloc::sync::ArcInner<futures_util::abortable::AbortInner>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7eeb9b": {
    "name": "NonNull<alloc::sync::ArcInner<futures_util::stream::stream::flatten_unordered::WrappedWaker>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f0607": {
    "name": "Result<(), futures_task::spawn::SpawnError>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f0d31": {
    "name": "Weak<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::FutureObj<()>>, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f0d8c": {
    "name": "Arc<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f0e86": {
    "name": "ArcInner<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f0ebc": {
    "name": "ArcInner<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::FutureObj<()>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f0ef2": {
    "name": "Weak<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::LocalFutureObj<()>>, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f0f4d": {
    "name": "Arc<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f1047": {
    "name": "ArcInner<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f107d": {
    "name": "ArcInner<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::LocalFutureObj<()>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f116f": {
    "name": "ArcInner<futures_util::abortable::AbortInner>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f11a5": {
    "name": "Arc<futures_util::abortable::AbortInner, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f124f": {
    "name": "Arc<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::LocalFutureObj<()>>, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f12de": {
    "name": "Arc<futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue<futures_task::future_obj::FutureObj<()>>, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f2470": {
    "name": "Weak<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>, &alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f24cb": {
    "name": "Weak<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>, &alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f2526": {
    "name": "Weak<futures_util::abortable::AbortInner, &alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f28ac": {
    "name": "ArcInner<futures_util::stream::stream::flatten_unordered::WrappedWaker>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f28e2": {
    "name": "Arc<futures_util::stream::stream::flatten_unordered::WrappedWaker, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f30ff": {
    "name": "<&*mut futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>> as core::fmt::Debug>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0x7f437d": {
    "name": "(*mut alloc::sync::ArcInner<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::LocalFutureObj<()>>>, alloc::alloc::Global)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f454c": {
    "name": "(*mut alloc::sync::ArcInner<futures_util::stream::futures_unordered::task::Task<futures_task::future_obj::FutureObj<()>>>, alloc::alloc::Global)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f471b": {
    "name": "(*mut alloc::sync::ArcInner<futures_util::abortable::AbortInner>, alloc::alloc::Global)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f62aa": {
    "name": "(u8, futures_util::stream::stream::flatten_unordered::PollStateBomb<fn(&futures_util::stream::stream::flatten_unordered::SharedPollState) -> u8>)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f6345": {
    "name": "(u8, futures_util::stream::stream::flatten_unordered::PollStateBomb<fn(&futures_util::stream::stream::flatten_unordered::SharedPollState) -> u8>)<0x7f6345>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f6d90": {
    "name": "(futures_util::abortable::AbortHandle, futures_util::abortable::AbortRegistration)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f6e3b": {
    "name": "(&futures_util::stream::stream::flatten_unordered::SharedPollState)",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f72d7": {
    "name": "LocalFutureObj<()><0x7f72d7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f73a9": {
    "name": "FutureObj<()><0x7f73a9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f7d9c": {
    "name": "NonNull<dyn core::future::future::Future<Output=()>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f7eff": {
    "name": "Unique<dyn core::future::future::Future<Output=()>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f81ff": {
    "name": "PhantomData<dyn core::future::future::Future<Output=()>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f82e2": {
    "name": "ManuallyDrop<core::pin::Pin<alloc::boxed::Box<dyn core::future::future::Future<Output=()>, alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f8300": {
    "name": "ManuallyDrop<core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f83f6": {
    "name": "Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global>><0x7f83f6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f8433": {
    "name": "Pin<alloc::boxed::Box<dyn core::future::future::Future<Output=()>, alloc::alloc::Global>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f8470": {
    "name": "Pin<&mut dyn core::future::future::Future<Output=()>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f848e": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=()> + core::marker::Send)><0x7f848e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f8761": {
    "name": "dyn core::future::future::Future<Output=()><0x7f8761>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x7f8768": {
    "name": "*const dyn core::future::future::Future<Output=()>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x7f87a9": {
    "name": "*mut dyn core::future::future::Future<Output=()><0x7f87a9>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x7f8c53": {
    "name": "alloc::boxed::Box<dyn core::future::future::Future<Output=()>, alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f8dcb": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=()> + core::marker::Send), alloc::alloc::Global><0x7f8dcb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x7f8df2": {
    "name": "(dyn core::future::future::Future<Output=()> + core::marker::Send)<0x7f8df2>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x7f8f31": {
    "name": "&mut dyn core::future::future::Future<Output=()>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x7f8f78": {
    "name": "&mut (dyn core::future::future::Future<Output=()> + core::marker::Send)<0x7f8f78>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0x9f6ef0": {
    "name": "{async_fn_env#0}<0x9f6ef0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0x9f7158": {
    "name": "{async_fn_env#0}<0x9f7158>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa0def5": {
    "name": "{async_fn_env#0}<0xa0def5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa0e043": {
    "name": "{async_fn_env#0}<0xa0e043>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa0faf4": {
    "name": "{async_fn_env#0}<()>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa0fbaf": {
    "name": "{async_fn_env#0}<()><0xa0fbaf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa0fec8": {
    "name": "Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa10079": {
    "name": "{async_fn_env#0}<0xa10079>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa10219": {
    "name": "ReusableBoxFuture<tokio::sync::watch::Receiver<()>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa10362": {
    "name": "{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa10688": {
    "name": "{async_fn_env#0}<0xa10688>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa1076e": {
    "name": "{async_fn_env#0}<0xa1076e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa10bd9": {
    "name": "{async_fn_env#0}<0xa10bd9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa10cbf": {
    "name": "{async_fn_env#0}<0xa10cbf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa17017": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa1a184": {
    "name": "Result<(), tokio::signal::make_future::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa1d5dd": {
    "name": "Pin<&mut (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21284": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa212c0": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa212fc": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21338": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa213b0": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa213ec": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa2140a": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21446": {
    "name": "AssertUnwindSafe<tokio::signal::reusable_box::{impl#0}::set_same_layout::{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21464": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21482": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21518": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21608": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa2169e": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa216f8": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21716": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa217e8": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21806": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21860": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa2189c": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa218ba": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21a40": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21a9a": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21ab8": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21b6c": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21b8a": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21ba8": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21be4": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21c02": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21c5c": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21c7a": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21cd4": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21cf2": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21d6a": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21da6": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21dc4": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21de2": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21e5a": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21e78": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21eb4": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa21ef0": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa2201c": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa2203a": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa22058": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa220ee": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa22148": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa22184": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa221c0": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa22292": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa22328": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa223fa": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa22418": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa22472": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa224ea": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa2cf84": {
    "name": "<tokio::signal::make_future::{async_fn_env#0} as core::future::future::Future>::{vtable_type}",
    "poll_symbol": "_ZN72_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h3639aaa63a9ea3e0E",
    "poll_address": "0000000000225b00"
  },
  "0xa387ac": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xa387b3": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xa388ce": {
    "name": "&(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xa389ab": {
    "name": "*mut (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xa38a91": {
    "name": "&mut (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xa39134": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send), alloc::alloc::Global>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa3c109": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)><0xa3c109>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa43b78": {
    "name": "{async_fn_env#0}<tokio::fs::file::Inner>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa43c31": {
    "name": "{async_block_env#0}<tokio::fs::file::Inner>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa43cec": {
    "name": "{async_fn_env#0}<tokio::fs::file::Inner><0xa43cec>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa43f88": {
    "name": "{async_fn_env#0}<usize>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa44043": {
    "name": "{async_fn_env#0}<usize><0xa44043>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa442e5": {
    "name": "{async_fn_env#0}<0xa442e5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa4439b": {
    "name": "{async_fn_env#0}<0xa4439b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa45100": {
    "name": "{async_fn_env#0}<0xa45100>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa4614a": {
    "name": "{async_fn_env#0}<(mio::net::tcp::stream::TcpStream, core::net::socket_addr::SocketAddr), tokio::net::tcp::listener::{impl#0}::accept::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa462e9": {
    "name": "{async_fn_env#0}<0xa462e9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa47cdf": {
    "name": "Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<usize>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa47d9d": {
    "name": "{async_fn_env#0}<0xa47d9d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa480b3": {
    "name": "{async_fn_env#0}<0xa480b3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa48210": {
    "name": "{async_fn_env#0}<0xa48210>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa4836d": {
    "name": "{async_fn_env#0}<0xa4836d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa4851f": {
    "name": "{async_fn_env#0}<0xa4851f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa485f2": {
    "name": "{async_fn_env#0}<0xa485f2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa48744": {
    "name": "{async_fn_env#0}<0xa48744>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa48814": {
    "name": "{async_fn_env#0}<0xa48814>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa48924": {
    "name": "{async_fn_env#0}<0xa48924>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa498fe": {
    "name": "{async_fn_env#0}<tokio::fs::file::{impl#0}::sync_all::{async_fn#0}::{closure_env#0}, ()>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa499b2": {
    "name": "{async_fn_env#0}<tokio::fs::file::{impl#0}::sync_data::{async_fn#0}::{closure_env#0}, ()>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa49a66": {
    "name": "{async_fn_env#0}<tokio::fs::file::{impl#0}::metadata::{async_fn#0}::{closure_env#0}, std::fs::Metadata>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa49b1a": {
    "name": "{async_fn_env#0}<tokio::fs::file::{impl#0}::try_clone::{async_fn#0}::{closure_env#0}, std::fs::File>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa49bce": {
    "name": "{async_fn_env#0}<tokio::fs::file::{impl#0}::set_permissions::{async_fn#0}::{closure_env#0}, ()>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa49db1": {
    "name": "{async_fn_env#0}<0xa49db1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa4ad22": {
    "name": "{async_block_env#0}<0xa4ad22>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa4adee": {
    "name": "{async_block_env#0}<0xa4adee>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa4aec0": {
    "name": "{async_fn_env#0}<0xa4aec0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa4af85": {
    "name": "{async_fn_env#0}<0xa4af85>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa4b09d": {
    "name": "{async_fn_env#0}<tokio::process::ChildStdout>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa4b15c": {
    "name": "{async_fn_env#0}<tokio::process::ChildStderr>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa4b223": {
    "name": "{async_fn_env#0}<0xa4b223>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa4b7bb": {
    "name": "RxFuture",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa4b7d5": {
    "name": "ReusableBoxFuture<tokio::sync::watch::Receiver<()>><0xa4b7d5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa4b7ff": {
    "name": "TryJoin3<tokio::process::{impl#5}::wait::{async_fn_env#0}, tokio::process::{impl#5}::wait_with_output::{async_fn#0}::read_to_end::{async_fn_env#0}<tokio::process::ChildStdout>, tokio::process::{impl#5}::wait_with_output::{async_fn#0}::read_to_end::{async_fn_env#0}<tokio::process::ChildStderr>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa4b84d": {
    "name": "MaybeDone<tokio::process::{impl#5}::wait::{async_fn_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa4b8db": {
    "name": "MaybeDone<tokio::process::{impl#5}::wait_with_output::{async_fn#0}::read_to_end::{async_fn_env#0}<tokio::process::ChildStdout>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa4b969": {
    "name": "MaybeDone<tokio::process::{impl#5}::wait_with_output::{async_fn#0}::read_to_end::{async_fn_env#0}<tokio::process::ChildStderr>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa53002": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xa53002>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xa53009": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xa53009>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xa78e7b": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)><0xa78e7b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa9ba62": {
    "name": "RxFuture<0xa9ba62>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xa9ba7c": {
    "name": "ReusableBoxFuture<tokio::sync::watch::Receiver<()>><0xa9ba7c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xaa0040": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xaa0040>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xaa0047": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xaa0047>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xaa006e": {
    "name": "*mut (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xaa006e>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xab14ce": {
    "name": "{async_fn_env#0}<0xab14ce>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xab16dc": {
    "name": "{async_fn_env#0}<0xab16dc>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xab26b8": {
    "name": "{async_fn_env#0}<()><0xab26b8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xab2773": {
    "name": "{async_fn_env#0}<()><0xab2773>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xab2a61": {
    "name": "Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>><0xab2a61>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xab45f1": {
    "name": "{async_fn_env#0}<0xab45f1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xab4b3c": {
    "name": "{async_fn_env#0}<0xab4b3c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xab4c1e": {
    "name": "{async_fn_env#0}<0xab4c1e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xab4d28": {
    "name": "{async_fn_env#0}<0xab4d28>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xab4e0e": {
    "name": "{async_fn_env#0}<0xab4e0e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xab509c": {
    "name": "{async_fn_env#0}<0xab509c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xab517e": {
    "name": "{async_fn_env#0}<0xab517e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xab5234": {
    "name": "{async_fn_env#0}<0xab5234>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xac570f": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xac570f>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xac5716": {
    "name": "&(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xac5716>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xad60fa": {
    "name": "Unique<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xad7a31": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)><0xad7a31>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xad9194": {
    "name": "PhantomData<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xadfdc8": {
    "name": "Pin<&mut tokio::task::coop::Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xae3d98": {
    "name": "{async_fn_env#0}<0xae3d98>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xae3fd3": {
    "name": "{async_fn_env#0}<0xae3fd3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xae40b5": {
    "name": "{async_fn_env#0}<usize, tokio::net::tcp::stream::{impl#0}::peek::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xae5980": {
    "name": "{async_fn_env#0}<0xae5980>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xae61cd": {
    "name": "{async_fn_env#0}<()><0xae61cd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xae632d": {
    "name": "{async_fn_env#0}<()><0xae632d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xae87b7": {
    "name": "{async_fn_env#0}<0xae87b7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xae889d": {
    "name": "{async_fn_env#0}<0xae889d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xae8a2b": {
    "name": "{async_fn_env#0}<0xae8a2b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xae8bb9": {
    "name": "{async_fn_env#0}<0xae8bb9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xae8cc3": {
    "name": "{async_fn_env#0}<0xae8cc3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xae8d79": {
    "name": "{async_fn_env#0}<0xae8d79>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xae914d": {
    "name": "Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>><0xae914d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xaec8c7": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xaec8c7>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xaec8ce": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xaec8ce>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xaec8f5": {
    "name": "*mut (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xaec8f5>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xaec949": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send), alloc::alloc::Global><0xaec949>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xaf699e": {
    "name": "{async_fn_env#0}<0xaf699e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xaf6ade": {
    "name": "{async_fn_env#0}<0xaf6ade>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xaf9741": {
    "name": "{async_fn_env#0}<0xaf9741>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xaf981b": {
    "name": "{async_fn_env#0}<0xaf981b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xaf98fd": {
    "name": "{async_fn_env#0}<0xaf98fd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xaf9a87": {
    "name": "{async_fn_env#0}<0xaf9a87>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb19bff": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)><0xb19bff>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb2dd87": {
    "name": "{async_fn_env#0}<0xb2dd87>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb2de65": {
    "name": "{async_fn_env#0}<0xb2de65>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb2df0d": {
    "name": "{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}><0xb2df0d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb2df22": {
    "name": "ReusableBoxFuture<tokio::sync::watch::Receiver<()>><0xb2df22>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb2df41": {
    "name": "RxFuture<0xb2df41>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb2df5b": {
    "name": "{async_fn_env#0}<0xb2df5b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb2e021": {
    "name": "{async_fn_env#0}<0xb2e021>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb2e1e6": {
    "name": "{async_fn_env#0}<()><0xb2e1e6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb2e2cb": {
    "name": "{async_fn_env#0}<()><0xb2e2cb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb300ef": {
    "name": "{async_fn_env#0}<0xb300ef>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb30829": {
    "name": "{async_fn_env#0}<(mio::net::uds::stream::UnixStream, std::os::unix::net::addr::SocketAddr), tokio::net::unix::listener::{impl#0}::accept::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb309c8": {
    "name": "{async_fn_env#0}<0xb309c8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb3657b": {
    "name": "{async_fn_env#0}<0xb3657b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb36950": {
    "name": "Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>><0xb36950>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb3fc28": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xb3fc28>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xb3fc2f": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xb3fc2f>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xb40f72": {
    "name": "alloc::boxed::Box<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send), alloc::alloc::Global><0xb40f72>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb42201": {
    "name": "*mut (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xb42201>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xb5a1e7": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)><0xb5a1e7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5e513": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5e58b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5e5c7": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5e63f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5e72f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5e7a7": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::signal::reusable_box::{impl#0}::set_same_layout::{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5e81f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5e897": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5e9a5": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5e9e1": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5ea59": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5eb49": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5ebc1": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5ec75": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5ecb1": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5eced": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5ee55": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5f035": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5f125": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5f161": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5f2c9": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5f37d": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5f46d": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5f521": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5f55d": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5f599": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5f5d5": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5f64d": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5f6c5": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5f7f1": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5f91d": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5f995": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5fb75": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5fc29": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5fcdd": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5fd19": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5fd55": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5fd91": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5fe45": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5febd": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb5ffe9": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb60061": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb6018d": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb60241": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb6036d": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb6045d": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb60679": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb60769": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb6081d": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb608d1": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb60949": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb60ab1": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb60b65": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb60e6d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb60e6d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb60ea9": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb60ea9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb60ec7": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb60ec7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb60f03": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb60f03>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb60f7b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb60f7b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb60f99": {
    "name": "AssertUnwindSafe<tokio::signal::reusable_box::{impl#0}::set_same_layout::{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}>><0xb60f99>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb60fd5": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb60fd5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb61011": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61011>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb61089": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61089>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb610a7": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb610a7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb610c5": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb610c5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb6111f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb6111f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb6115b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb6115b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb611b5": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb611b5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb611d3": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb611d3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb611f1": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb611f1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb612a5": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb612a5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb61395": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61395>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb6140d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb6140d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb6142b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb6142b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb614c1": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb614c1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb614fd": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb614fd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb61575": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61575>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb615cf": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb615cf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb615ed": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb615ed>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb6160b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb6160b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb61629": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61629>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb61665": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61665>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb616a1": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb616a1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb61737": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61737>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb617cd": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb617cd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb61809": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61809>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb618f9": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb618f9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb61953": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61953>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb619ad": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb619ad>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb619cb": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb619cb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb619e9": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb619e9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb61a07": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61a07>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb61a61": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61a61>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb61a9d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61a9d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb61b33": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61b33>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb61b6f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61b6f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb61c05": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61c05>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb61c5f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61c5f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb61cf5": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61cf5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb61d6d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61d6d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb61e7b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61e7b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb61ef3": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61ef3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb61f4d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61f4d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb61fa7": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61fa7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb61fe3": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb61fe3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb62097": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb62097>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb620f1": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xb620f1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb67870": {
    "name": "{async_fn_env#0}<0xb67870>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb679b0": {
    "name": "{async_fn_env#0}<0xb679b0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb67a92": {
    "name": "{async_fn_env#0}<usize, tokio::net::unix::datagram::socket::{impl#0}::send::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb67c2b": {
    "name": "{async_fn_env#0}<usize, tokio::net::unix::datagram::socket::{impl#0}::recv::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb67dc4": {
    "name": "{async_fn_env#0}<(usize, std::os::unix::net::addr::SocketAddr), tokio::net::unix::datagram::socket::{impl#0}::recv_from::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb7016b": {
    "name": "{async_fn_env#0}<0xb7016b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb7024d": {
    "name": "{async_fn_env#0}<0xb7024d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb70341": {
    "name": "{async_fn_env#0}<0xb70341>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb7047f": {
    "name": "{async_fn_env#0}<0xb7047f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb705d4": {
    "name": "{async_fn_env#0}<0xb705d4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb70729": {
    "name": "{async_fn_env#0}<0xb70729>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb70fbd": {
    "name": "{async_fn_env#0}<0xb70fbd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb7123a": {
    "name": "{async_fn_env#0}<0xb7123a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb7130d": {
    "name": "{async_fn_env#0}<0xb7130d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb713e2": {
    "name": "{async_fn_env#0}<tokio::fs::read_dir::{impl#1}::metadata::{async_fn#0}::{closure_env#0}, std::fs::Metadata>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb71496": {
    "name": "{async_fn_env#0}<tokio::fs::read_dir::{impl#1}::file_type::{async_fn#0}::{closure_env#0}, std::fs::FileType>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb71560": {
    "name": "{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}><0xb71560>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb71575": {
    "name": "ReusableBoxFuture<tokio::sync::watch::Receiver<()>><0xb71575>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb71ba5": {
    "name": "{async_fn_env#0}<0xb71ba5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb71d0b": {
    "name": "RxFuture<0xb71d0b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb71d2a": {
    "name": "{async_fn_env#0}<0xb71d2a>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb73192": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xb73192>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xb73199": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xb73199>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xb7d19c": {
    "name": "{async_fn_env#0}<0xb7d19c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb7d2ea": {
    "name": "{async_fn_env#0}<0xb7d2ea>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb7fd18": {
    "name": "{async_fn_env#0}<0xb7fd18>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb7fe29": {
    "name": "{async_fn_env#0}<0xb7fe29>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb7ff0b": {
    "name": "{async_fn_env#0}<0xb7ff0b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb80019": {
    "name": "{async_fn_env#0}<0xb80019>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb800ff": {
    "name": "{async_fn_env#0}<0xb800ff>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb8038d": {
    "name": "{async_fn_env#0}<0xb8038d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb80473": {
    "name": "{async_fn_env#0}<0xb80473>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xb8052d": {
    "name": "{async_fn_env#0}<0xb8052d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbb5680": {
    "name": "{async_fn_env#0}<()><0xbb5680>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbb5811": {
    "name": "{async_fn_env#0}<()><0xbb5811>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbb5b0d": {
    "name": "{async_fn_env#0}<0xbb5b0d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbb5bd2": {
    "name": "{async_fn_env#0}<0xbb5bd2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbb5cce": {
    "name": "{async_fn_env#0}<0xbb5cce>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbb5d93": {
    "name": "{async_fn_env#0}<0xbb5d93>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbb6f9b": {
    "name": "Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>><0xbb6f9b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbb721b": {
    "name": "{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}><0xbb721b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbb7230": {
    "name": "ReusableBoxFuture<tokio::sync::watch::Receiver<()>><0xbb7230>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbb7317": {
    "name": "{async_fn_env#0}<0xbb7317>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbb73d3": {
    "name": "RxFuture<0xbb73d3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbb7436": {
    "name": "{async_fn_env#0}<0xbb7436>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbb90a8": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)><0xbb90a8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbd11b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd11b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbd193": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd193>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbd1ed": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd1ed>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbd265": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd265>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbd2fb": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd2fb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbd355": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd355>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbd3cd": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd3cd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbd409": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd409>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbd49f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd49f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbd4db": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd4db>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbd571": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::signal::reusable_box::{impl#0}::set_same_layout::{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}>>><0xbbd571>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbd58f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd58f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbd5cb": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd5cb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbd607": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd607>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbd67f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd67f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbd6d9": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd6d9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbd7ab": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd7ab>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbd823": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd823>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbd8d7": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd8d7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbd9c7": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbd9c7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbda03": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbda03>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbda99": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbda99>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbdbc5": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbdbc5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbdc1f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbdc1f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbdc79": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbdc79>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbdcd3": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbdcd3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbddc3": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbddc3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbde3b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbde3b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbdfa3": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbdfa3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbdfdf": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbdfdf>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbe057": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe057>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbe093": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe093>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbe10b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe10b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbe165": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe165>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbe237": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe237>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbe2cd": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe2cd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbe309": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe309>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbe381": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe381>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbe3bd": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe3bd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbe3f9": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe3f9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbe435": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe435>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbe471": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe471>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbe5bb": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe5bb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbe66f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe66f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbe75f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe75f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbe7d7": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe7d7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbe831": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe831>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbe88b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe88b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbe921": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbe921>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbea2f": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbea2f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbeac5": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbeac5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbeb5b": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbeb5b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbebd3": {
    "name": "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>>><0xbbebd3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbed18": {
    "name": "Pin<&mut tokio::sync::watch::{impl#4}::changed::{async_fn_env#0}<()>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbeda5": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbeda5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbede1": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbede1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbee1d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbee1d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbee59": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbee59>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbeed1": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbeed1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbef0d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbef0d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbef2b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbef2b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbef49": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbef49>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbef67": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbef67>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbef85": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbef85>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbeffd": {
    "name": "AssertUnwindSafe<tokio::signal::reusable_box::{impl#0}::set_same_layout::{closure_env#0}<tokio::sync::watch::Receiver<()>, tokio::signal::make_future::{async_fn_env#0}>><0xbbeffd>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf01b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf01b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf039": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf039>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf057": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf057>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf0b1": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf0b1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf0ed": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf0ed>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf165": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf165>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf183": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf183>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf219": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf219>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf2eb": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf2eb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf309": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf309>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf345": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf345>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf417": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf417>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf453": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf453>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf48f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf48f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf4cb": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf4cb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf59d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf59d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf5f7": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf5f7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf741": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write_vectored::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf741>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf75f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf75f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf7b9": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf7b9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf7d7": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stderr>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf7d7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf831": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stderr>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf831>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf86d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf86d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf921": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf921>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf999": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#19}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf999>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbf9b7": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbf9b7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbfa11": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbfa11>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbfa2f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbfa2f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbfa4d": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::file::{impl#2}::start_seek::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbfa4d>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbfa6b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::net::addr::{impl#17}::to_socket_addrs::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbfa6b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbfa89": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbfa89>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbfb79": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbfb79>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbfc0f": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::fs::read_dir::{impl#0}::poll_next_entry::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbfc0f>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbfce1": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#1}::poll_read::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbfce1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbfd3b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbfd3b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbfd77": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbfd77>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbfdb3": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#0}::poll_read::{closure_env#0}<std::io::stdio::Stdin>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbfdb3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbfe2b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::fs::file::{impl#3}::poll_write::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbfe2b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbff1b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbff1b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbbff93": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<tokio::runtime::scheduler::multi_thread::worker::{impl#0}::launch::{closure_env#0}>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbbff93>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbc000b": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#0}<tokio::runtime::blocking::task::BlockingTask<tokio::io::blocking::{impl#1}::poll_flush::{closure_env#0}<std::io::stdio::Stdout>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc000b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbc0065": {
    "name": "AssertUnwindSafe<tokio::runtime::task::harness::poll_future::{closure_env#1}<tokio::runtime::blocking::task::BlockingTask<alloc::boxed::Box<tokio::io::blocking::{impl#1}::poll_write::{closure_env#0}<std::io::stdio::Stdout>, alloc::alloc::Global>>, tokio::runtime::blocking::schedule::BlockingSchedule>><0xbc0065>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbc3687": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xbc3687>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xbc368e": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xbc368e>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xbc54db": {
    "name": "{async_fn_env#0}<0xbc54db>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbc5eb5": {
    "name": "{async_fn_env#0}<0xbc5eb5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbc5f97": {
    "name": "{async_fn_env#0}<usize, tokio::net::udp::{impl#0}::send::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbc6130": {
    "name": "{async_fn_env#0}<usize, tokio::net::udp::{impl#0}::recv::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbc62c9": {
    "name": "{async_fn_env#0}<usize, tokio::net::udp::{impl#0}::send_to_addr::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbc6462": {
    "name": "{async_fn_env#0}<(usize, core::net::socket_addr::SocketAddr), tokio::net::udp::{impl#0}::recv_from::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbc65fb": {
    "name": "{async_fn_env#0}<usize, tokio::net::udp::{impl#0}::peek::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbc6794": {
    "name": "{async_fn_env#0}<(usize, core::net::socket_addr::SocketAddr), tokio::net::udp::{impl#0}::peek_from::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbc692d": {
    "name": "{async_fn_env#0}<core::net::socket_addr::SocketAddr, tokio::net::udp::{impl#0}::peek_sender::{async_fn#0}::{closure_env#0}>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbc8cb1": {
    "name": "{async_fn_env#0}<()><0xbc8cb1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbca0e7": {
    "name": "{async_fn_env#0}<0xbca0e7>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbca1f8": {
    "name": "{async_fn_env#0}<0xbca1f8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbca2da": {
    "name": "{async_fn_env#0}<0xbca2da>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbca43e": {
    "name": "{async_fn_env#0}<0xbca43e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbca524": {
    "name": "{async_fn_env#0}<0xbca524>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbca7be": {
    "name": "{async_fn_env#0}<0xbca7be>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbca8a4": {
    "name": "{async_fn_env#0}<0xbca8a4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbca95e": {
    "name": "{async_fn_env#0}<0xbca95e>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbcaffb": {
    "name": "{async_fn_env#0}<0xbcaffb>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbcb0e1": {
    "name": "{async_fn_env#0}<0xbcb0e1>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbcb1d9": {
    "name": "{async_fn_env#0}<0xbcb1d9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbcb379": {
    "name": "{async_fn_env#0}<0xbcb379>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbcb471": {
    "name": "{async_fn_env#0}<0xbcb471>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbcb684": {
    "name": "{async_fn_env#0}<0xbcb684>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbcb7d6": {
    "name": "{async_fn_env#0}<0xbcb7d6>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbcb92b": {
    "name": "{async_fn_env#0}<0xbcb92b>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbcba80": {
    "name": "{async_fn_env#0}<0xbcba80>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbcbbd5": {
    "name": "{async_fn_env#0}<0xbcbbd5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbcd7f3": {
    "name": "Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>><0xbcd7f3>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbcd835": {
    "name": "Projection<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbd1ddb": {
    "name": "Pin<&mut tokio::sync::watch::changed_impl::{async_fn_env#0}<()>>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xbd1df9": {
    "name": "Pin<&mut tokio::task::coop::Coop<tokio::sync::watch::changed_impl::{async_fn_env#0}<()>>><0xbd1df9>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc0e196": {
    "name": "{async_fn_env#0}<0xc0e196>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc0e3a4": {
    "name": "{async_fn_env#0}<0xc0e3a4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc111d8": {
    "name": "RxFuture<0xc111d8>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc111f2": {
    "name": "ReusableBoxFuture<tokio::sync::watch::Receiver<()>><0xc111f2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc112c4": {
    "name": "{async_fn_env#0}<0xc112c4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc12dc0": {
    "name": "{async_fn_env#0}<0xc12dc0>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc12ea2": {
    "name": "{async_fn_env#0}<0xc12ea2>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc13003": {
    "name": "{async_fn_env#0}<0xc13003>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc130e5": {
    "name": "{async_fn_env#0}<0xc130e5>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc133b4": {
    "name": "{async_fn_env#0}<0xc133b4>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc13496": {
    "name": "{async_fn_env#0}<0xc13496>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc1354c": {
    "name": "{async_fn_env#0}<0xc1354c>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc19157": {
    "name": "NonNull<(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)><0xc19157>",
    "poll_symbol": "",
    "poll_address": ""
  },
  "0xc23727": {
    "name": "(dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xc23727>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  },
  "0xc2372e": {
    "name": "*const (dyn core::future::future::Future<Output=tokio::sync::watch::Receiver<()>> + core::marker::Send)<0xc2372e>",
    "poll_symbol": "_ZN100_$LT$hyper_util..client..legacy..connect..dns..GaiFuture$u20$as$u20$core..future..future..Future$GT$4poll28_$u7b$$u7b$closure$u7d$$u7d$17h46a1bf101dfdf608E",
    "poll_address": "00000000003e2e20"
  }
}